{"version":3,"sources":["component/Dial/AutoHidden.js","utils/page.js","redux/explorer/reducer.ts","component/Placeholder/TextLoading.js","component/Navbar/DarkModeSwitcher.js","component/Dial/Save.js","component/Modals/Loading.js","component/Modals/Copy.js","component/Modals/CreateShare.js","component/Modals/Decompress.js","component/Modals/Compress.js","component/FileManager/Modals.js","middleware/Auth.ts","utils/index.js","component/Viewer/Text.js","component/Viewer/Code.js","component/Common/Snackbar.js","component/Navbar/UserAvatarPopover.js","component/Navbar/UserAvatar.js","component/Navbar/Navbar.js","component/Navbar/SearchBar.js","component/Navbar/StorageBar.js","component/Navbar/UserInfo.js","component/Navbar/FileTags.js","component/FileManager/ImgPreview.js","config.js","loader/utils.js","loader/index.js","component/Upload/FileList.js","component/Dial/Create.js","component/Upload/Uploader.js","actions/explorer.js","actions/index.js","component/FileManager/TypeIcon.js","serviceWorker.js","middleware/AuthRoute.js","component/Share/NotFound.js","component/Placeholder/Captcha.js","middleware/Init.js","component/Login/ReCaptchaWrapper.js","component/Login/ReCaptcha.js","component/Common/ICPFooter.js","component/Login/LoginForm.js","component/FileManager/SmallIcon.js","component/FileManager/FileIcon.js","component/FileManager/DnD/Preview.js","component/FileManager/DnD/DragLayer.js","redux/explorer/action.ts","redux/explorer/index.ts","component/FileManager/ContextMenu.js","component/FileManager/TableRow.js","component/FileManager/Folder.js","component/FileManager/DnD/DropWarpper.js","component/FileManager/ObjectIcon.js","component/FileManager/Explorer.js","component/FileManager/Navigator/PathButton.js","component/FileManager/Navigator/DropDownItem.js","component/FileManager/Navigator/DropDown.js","component/FileManager/Navigator/Navigator.js","component/FileManager/FileManager.js","component/Viewer/Video.js","component/Share/SearchResult.js","component/Share/MyShare.js","component/Modals/SelectFile.js","component/Download/DownloadingCard.js","component/Download/FinishedCard.js","component/Dial/Aria2.js","component/Download/Download.js","component/Placeholder/PageLoading.js","component/Share/LockedFile.js","component/Share/Creator.js","component/Share/SharedFile.js","component/Share/SharedFolder.js","component/Share/SharePreload.js","component/Viewer/Doc.js","component/Modals/CreateWebDAVAccount.js","component/Setting/WebDAV.js","component/Setting/Tasks.js","component/Setting/Profile.js","component/Setting/Authn.js","component/Setting/UserSetting.js","component/Login/Register.js","component/Login/Activication.js","component/Login/ResetForm.js","component/Login/Reset.js","App.js","redux/viewUpdate/reducer.ts","reducers/index.js","component/Placeholder/ErrorBoundary.js","index.js","redux/combineReducers.ts","redux/viewUpdate/action.ts","component/FileManager/PathSelector.js","middleware/Api.js"],"names":["AutoHidden","children","enable","useState","hidden","setHidden","prev","window","scrollY","lastUpdate","useEffect","addEventListener","e","currentTarget","handleNavigation","in","statusHelper","isHomePage","path","isSharePage","startsWith","isAdminPage","isLoginPage","isMobile","innerWidth","initState","dndSignal","dndTarget","dndSource","fileList","dirList","selected","selectProps","isMultiple","withFolder","withFile","lastSelect","file","id","name","size","type","date","index","shiftSelectedIds","imgPreview","first","other","keywords","fileSave","checkSelectedProps","length","forEach","value","explorer","state","action","Object","assign","target","source","list","addedSelected","targets","newSelected","fileIds","filteredSelected","filter","includes","useStyles","makeStyles","theme","loader","width","padding","breakpoints","down","MyLoader","props","className","TextLoading","classes","icon","color","opacity","DarkModeSwitcher","position","ThemeType","useSelector","siteConfig","palette","dispatch","useDispatch","ToggleThemeMode","useCallback","toggleDaylightMode","isDayLight","isDark","title","placement","classNames","onClick","Auth","SetPreference","fab","margin","top","right","bottom","left","zIndex","badge","fabProgress","green","wrapper","spacing","buttonSuccess","backgroundColor","SaveButton","buttonClassname","clsx","status","disabled","aria-label","avatar","blue","loadingContainer","display","loading","marginTop","marginLeft","LoadingDialog","open","viewUpdate","modals","text","loadingText","Dialog","aria-labelledby","DialogContent","DialogContentText","CircularProgress","contentFix","buttonProgress","secondary","light","CopyDialog","selectedPath","setSelectedPath","selectedPathName","setSelectedPathName","ToggleSnackbar","vertical","horizontal","msg","toggleSnackbar","SetModalsLoading","setModalsLoading","RefreshFileList","refreshFileList","onClose","DialogTitle","PathSelector","presentPath","onSelect","folder","DialogActions","Button","preventDefault","dirs","items","push","API","post","src_dir","src","dst","then","catch","error","message","modalsLoading","widthAnimation","shareUrl","minWidth","flexCenter","alignItems","noFlex","scoreCalc","ExpansionPanel","withStyles","root","border","boxShadow","borderBottom","expanded","MuiExpansionPanel","ExpansionPanelSummary","content","MuiExpansionPanelSummary","ExpansionPanelDetails","background","default","MuiExpansionPanelDetails","CreatShare","React","setExpanded","shareURL","setShareURL","password","downloads","expires","showPassword","values","setValues","expire","preview","shareOption","setShareOption","handleChange","prop","event","handleExpand","panel","isExpanded","handleCheck","setTimeout","maxWidth","fullWidth","Divider","List","onChange","aria-controls","ListItem","button","ListItemIcon","ListItemText","primary","ListItemSecondaryAction","Checkbox","checked","FormControl","variant","InputLabel","htmlFor","OutlinedInput","endAdornment","InputAdornment","Tooltip","IconButton","Math","random","toString","substr","slice","edge","onMouseDown","Visibility","VisibilityOff","labelWidth","style","marginRight","Select","labelId","MenuItem","Typography","TextField","onFocus","select","autoFocus","inputProps","readonly","label","submitFormBody","is_dir","response","data","DecompressDialog","filePath","CompressDialog","fileName","setFileName","map","ModalsCompoment","newFolderName","newFileName","newName","secretShare","sharePwd","downloadURL","remoteDownloadPathSelect","purchaseCallback","handleInputChange","setState","newNameSuffix","downloaded","UNSAFE_componentWillReceiveProps","nextProps","dndSignale","modalsStatus","rename","getSource","get","url","pathHelper","location","pathname","share","score","scoreHandler","archiveDownload","Download","dragMove","callback","reqURL","key","downloadPath","encodeURIComponent","put","postBody","shareInfo","rawData","code","refreshStorage","submitRemove","delete","submitMove","patch","DragSelectedPath","closeAllModals","doMove","openLoadingDialog","submitRename","findIndex","new_name","submitCreateNewFolder","submitCreateNewFile","submitTorrentDownload","submitDownload","setMoveTarget","remoteDownloadNext","this","onSubmit","createNewFolder","createNewFile","copy","move","remove","music","controls","baseURL","remoteDownload","placeholder","torrentDownload","decompress","compress","Component","Modals","connect","navigator","withRouter","isAuthenticated","authenticate","cb","SetUser","GetUser","JSON","parse","localStorage","getItem","newUser","setItem","stringify","Check","anonymous","signout","oldUser","preference","GetPreference","sizeToString","bytes","i","floor","log","pow","toFixed","fixUrlHash","setCookie","days","Date","setTime","getTime","document","cookie","setGetParameter","paramName","paramValue","href","indexOf","prefix","substring","suffix","history","pushState","allowSharePreview","allowPreview","userInfo","uid","checkGetParameters","field","changeThemeColor","querySelector","setAttribute","bufferDecode","Uint8Array","from","atob","c","charCodeAt","bufferEncode","btoa","String","fromCharCode","apply","replace","pathBack","folders","split","join","hex2bin","hex","parseInt","padStart","pathJoin","parts","sep","separator","part","RegExp","basename","pathList","pop","transformTime","timestamp","time","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","randomStr","result","characters","charactersLength","charAt","getNumber","base","conditions","v","isMac","platform","toUpperCase","vhCheck","vh","innerHeight","documentElement","setProperty","layout","up","player","borderRadius","overflowX","TextViewer","setContent","setStatus","setLoading","math","useRouteMatch","$vm","createRef","useLocation","query","URLSearchParams","search","useParams","SetSubTitle","changeSubTitle","params","requestURL","responseType","textdata","Buffer","toBase64","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","onerror","save","addImg","$file","a","current","$img2Url","console","elevation","ref","onSave","toolbar","h1","h2","h3","h4","img","link","expand","undo","redo","subfield","MonacoEditor","lazy","editor","formControl","toobar","textAlign","CodeViewer","setSuffix","useTheme","extension","codePreviewSuffix","Array","Set","keys","k","fallback","height","language","options","readOnly","extraEditorClassName","variantIcon","success","CheckCircleIcon","warning","WarningIcon","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","dark","amber","fontSize","iconVariant","Icon","aria-describedby","close","SnackbarCompoment","snackbar","toggle","handleClose","anchorOrigin","autoHideDuration","AlertBar","UserAvatarPopoverCompoment","setUserPopover","openURL","sigOut","reload","setSessionStatus","user","Popover","anchorEl","transformOrigin","visitorMenu","header","largeAvatarContainer","Avatar","largeAvatar","noWrap","nickname","user_name","Chip","group","UserAvatarPopover","userPopoverAnchorEl","anchor","UserAvatarCompoment","showUserInfo","returnHome","loginCheck","isLogin","mobileHidden","Grow","Home","UserAvatar","NavbarCompoment","main","handleDrawerToggle","mobileOpen","loadUploader","openPreview","isShare","shareDownload","changeContextMenu","previewPath","isPreviewable","showImgPreivew","openMusicDialog","openDownload","signOut","finally","UploaderRef","unlisten","listen","drawer","upDrawer","minStickDrawer","iconFix","webdav","iOS","process","browser","test","userAgent","appBar","menuButton","handleDesktopToggle","desktopOpen","menuButtonDesktop","menuIcon","setSelectedTarget","subTitle","grow","sectionForFile","saveFile","allowArchiveDownload","navigateTo","openShareDialog","openRenameDialog","openMoveDialog","openRemoveDialog","smUp","implementation","container","paper","drawerPaper","onOpen","disableDiscovery","ModalProps","keepMounted","xsDown","drawerOpen","drawerClose","Navbar","drawerToggleAction","openCreateFolderDialog","searchMyFile","withTheme","flexShrink","drawerDesktop","mixins","transition","transitions","create","easing","sharp","duration","enteringScreen","leavingScreen","flexGrow","nested","paddingLeft","extendedIcon","addButton","marginBottom","fabButton","badgeFix","dividerFix","folderShareIcon","verticalAlign","shareInfoContainer","textDecoration","shareAvatar","stickFooter","ownerInfo","overflowY","minHeight","configure","ignoreTags","keyMap","SEARCH","SearchBarCompoment","handlers","searchShare","blur","input","cancelSuggest","searchIcon","inputRoot","inputInput","onBlur","suggestBox","TransitionProps","timeout","square","SearchBar","shape","fade","common","white","pointerEvents","justifyContent","paddingTop","paddingRight","paddingBottom","StorageBarCompoment","percent","used","total","showExpand","firstLoad","componentDidMount","updateStatus","refresh","onMouseEnter","onMouseLeave","storageContainer","detail","bar","StorageBar","storageRefresh","textFix","overflow","textOverflow","UserInfoCompoment","userNav","flexAvatar","avatarImg","storageCircle","nickName","component","groupName","UserInfo","backgroundImage","backgroundSize","transform","hiddenButton","subMenu","overFlow","whiteSpace","icons","Circle","CircleOutline","Heart","HeartOutline","Hexagon","HexagonOutline","Hexagram","HexagramOutline","Rhombus","RhombusOutline","Square","SquareOutline","Triangle","TriangleOutline","FolderHeartOutline","AddTag","FileTag","useHistory","tagOpen","setTagOpen","addTagModal","setAddTagModal","tagHover","setTagHover","tags","setTags","SearchMyFile","NavigateTo","onSuccess","tag","newTags","iconVideo","iconImg","iconAudio","iconDoc","expression","IconComponent","getIcon","ImagPreviewComponent","photoIndex","isOpen","firstOne","newImg","intro","fileType","toLowerCase","imgPreviewSuffix","images","visible","onIndexChange","n","ImgPreivew","msDocPreviewSuffix","audioPreviewSuffix","videoPreviewSuffix","pdfPreviewSuffix","editSuffix","json","php","bat","cpp","h","cs","css","dockerfile","go","html","ini","java","js","jsx","less","lua","sh","sql","xml","yaml","mediaType","audio","video","image","pdf","word","ppt","excel","torrent","zip","excute","android","python","policyTypeMap","local","remote","qiniu","upyun","oss","cos","onedrive","s3","isTorrent","isCompressFile","taskStatus","taskType","taskProgress","getTaskStatus","getTaskType","getTaskProgress","isFunction","val","noop","newScript","scriptElem","createElement","prototype","hasOwnProperty","call","body","appendChild","keyIterator","cols","next","parallel","tasks","each","hasError","successed","ret","task","err","args","series","thunk","nextKey","nextThunk","isArray","iterator","loadedScript","pendingScripts","failedScript","addCache","entry","removeFailedScript","script","node","parentNode","removeChild","uploaderLoader","WrappedComponent","ScriptLoader","context","isScriptLoaded","isScriptLoadSucceed","_isMounted","scripts","onComplete","loadNewScript","taskComplete","callbacks","startLoadingScripts","policyType","onScriptLoaded","defaultProps","hoistStatics","FileList","files","openFileList","cancelUpload","deQueue","addNewFile","getElementsByClassName","click","getProgressBackground","lighten","darken","filesNow","fileID","f","splice","errMsg","ignoreMsg","Slide","direction","inRef","bind","enQueue","setComplete","setError","fullScreen","isWidthDown","TransitionComponent","Transition","AppBar","Toolbar","flex","dialogContent","minHight","item","progressContainer","progress","progressContent","TypeIcon","isUpload","listAction","plupload","formatSize","speed","loaded","errorStatus","successStatus","progressBar","wordBreak","withWidth","UploadButton","setOpen","queued","setQueued","OpenNewFolderDialog","OpenNewFileDialog","openCreateFileDialog","Queued","openUpload","uploadButton","contains","uploadClicked","Badge","badgeContent","invisible","Backdrop","SpeedDial","ariaLabel","tooltipTitle","SpeedDialIcon","openIcon","FabProps","SpeedDialAction","tooltipOpen","UploaderComponent","fileAdd","currntPath","enqueFiles","isDsStore","removeFile","relativePath","pathCache","uploader","Qiniu","runtimes","browse_button","drop_element","max_file_size","policy","maxSize","dragdrop","chunk_size","getChunkSize","saveType","filters","mime_types","allowedType","extensions","multi_selection","uptoken_url","uptoken","domain","max_retries","get_new_uptoken","auto_start","log_level","init","FilesAdded","BeforeUpload","QueueChanged","UploadProgress","UploadComplete","Fresh","FileUploaded","Error","errTip","FilesRemoved","onError","setRef","Uploader","forwardRef","removeSelectedTargets","addSelectedTargets","selectFile","fileIndex","ctrlKey","metaKey","shiftKey","getState","Boolean","isMacbook","begin","min","end","max","newShiftSelected","setLastSelect","setNavigator","navigatorLoading","navigateUp","pathSplit","newPath","dragAndDrop","changeViewMethod","method","menuType","setNavigatorLoadingStatus","setNavigatorError","setShareUserPopover","openResaveDialog","applyThemes","openRemoteDownloadDialog","openTorrentDownloadDialog","openDecompressDialog","openCompressDialog","openGetSourceDialog","openCopyDialog","enableLoadUploader","setSiteConfig","config","AudioIcon","VideoIcon","ImageIcon","PdfIcon","FileWordBox","FilePowerpointBox","FileExcelBox","ScriptText","MagnetOn","ZipBox","WindowRestore","Android","FileShowIcon","LanguagePhp","LanguageGo","LanguagePython","LanguageC","LanguageCpp","LanguageJavascript","fileSuffix","getColor","getColorValue","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","isLocalhost","hostname","match","AuthRoute","rest","render","to","emptyContainer","emptyInfoBig","Notice","primaryColor","secondaryColor","x","y","rx","ry","captchaPlacholder","initUserConfig","undefined","themes","enableUploaderLoad","uploadConfig","store","defaultTheme","preferListMethod","share_view_method","home_view_method","ReCAPTCHA","handleExpired","handleErrored","handleRecaptchaRef","grecaptcha","_widgetId","getResponse","execute","_executeRequested","reset","onExpired","onErrored","token","sitekey","tabindex","stoken","hl","captcha","explicitRender","delayOfCaptchaIframeRemoving","temporaryNode","firstChild","elem","childProps","displayName","callbackName","makeAsyncScriptLoader","globalName","icp","ICPFooter","siteICPId","show","setShow","pageHelper","Link","rel","flexDirection","form","submit","captchaContainer","captchaPlaceholder","buttonContainer","authnLink","LoginForm","email","setEmail","pwd","setPwd","setCaptcha","useAuthn","setUseAuthn","captchaData","setCaptchaData","twoFA","setTwoFA","faCode","setFACode","loginCaptcha","authn","useReCaptcha","captcha_IsUseReCaptcha","reCaptchaKey","captcha_ReCaptchaKey","ApplyThemes","SetSessionStatus","refreshCaptcha","afterLogin","removeItem","Paper","userName","Password","captchaCode","required","Input","autoComplete","alt","ReCaptcha","credentials","credentialRequestOptions","publicKey","challenge","allowCredentials","listItem","assertion","authData","authenticatorData","clientDataJSON","rawId","sig","signature","userHandle","Fingerprint","VpnKey","SmallIconCompoment","isSelected","ButtonBase","focusRipple","notSelected","iconSelected","iconNotSelected","folderName","folderNameSelected","folderNameNotSelected","SmallIcon","divider","boxSizing","fontWeight","FileIconCompoment","showPicIcon","pic","hide","picPreview","afterLoad","beforeLoad","loadingAnimation","previewIcon","iconBig","fileInfo","shareFix","FileIcon","objectFit","dragging","cardDragged","diliverIcon","object","viewMethod","Preview","explorerViewMethod","card","layerStyles","getItemStyles","initialOffset","currentOffset","isSnapToGrid","round","snapToGrid","WebkitTransform","CustomDragLayer","useDragLayer","monitor","itemType","getItemType","getInitialSourceClientOffset","getSourceClientOffset","isDragging","renderItem","setFileList","setDirList","setSortMethod","sortMethodFuncs","sizePos","b","sizeRes","namePos","localeCompare","languages","numeric","ignorePunctuation","nameRev","timePos","timeRev","updateFileList","sortMethod","sortFunc","sort","changeSortMethod","actions","reducers","ContextMenuCompoment","X","Y","setPoint","clientY","clientX","openArchiveDownload","enterFolder","clickUpload","Menu","menuOpen","anchorReference","anchorPosition","allowRemoteDownload","allowSource","Archive","propover","ContextMenu","contextType","contextOpen","TableRowCompoment","tableIcon","TableRow","onContextMenu","contextMenu","handleClick","onDoubleClick","handleDoubleClick","selectedShared","TableCell","scope","tableRow","hideAuto","TableItem","userSelect","active","Folder","isActive","FolderDropWarpper","useDrop","accept","drop","collect","isOver","canDrop","fixFlex","ObjectIcon","navigatorPath","SetSelectedTarget","NavitateTo","ShowImgPreivew","OpenMusicDialog","DragAndDrop","OpenLoadingDialog","selectFileAction","useDrag","dropResult","getDropResult","canDrag","drag","getEmptyImage","captureDraggingState","ExplorerCompoment","ClickAway","dataset","clickaway","DELETE_FILE","SELECT_ALL","away","showView","listView","Table","table","TableHead","TableSortLabel","changeSort","visuallyHidden","TableBody","normalView","flexFix","data-clickAway","typeHeader","Grid","xs","md","sm","lg","view","rootTable","rootShare","navigatorError","errorBox","errorMsg","navigatorErrorMsg","emptyIcon","emptyInfoSmall","Explorer","drawerDesktopOpen","navigateToPath","hint","upButton","clickAway","clip","expandMore","textTransform","PathButton","inputRef","useRef","more","last","DropDownItem","setActiveStatus","DropDown","timer","clearTimeout","shouldClose","element","delay","ms","sortOptions","NavigatorComponent","currentID","hiddenFolders","hiddenMode","anchorHidden","anchorSort","selectedIndex","URL","searchParams","renderPath","onpopstate","apiURL","parent","objects","pathTemp","checkOverFlow","redresh","componentDidUpdate","prevProps","prevStates","force","overflowInitLock","hasOverflowingChildren","offsetHeight","scrollHeight","offsetWidth","scrollWidth","showHiddenPath","showSortOptions","performAction","newTarget","toggleViewMethod","newMethod","changeView","handleMenuItemClick","0","1","2","3","4","5","presentFolderMenu","disableAutoFocusItem","roundBorder","navigatorContainer","nav","rightIcon","optionContainer","sideButton","option","creator","nick","Navigator","openResave","FileManager","DndProvider","backend","HTML5Backend","DragLayer","maxHeight","VideoViewer","getBaseURL","cardContainer","shareTitle","avatarFile","avatarFolder","gird","loadMore","orderSelect","SearchResult","page","setPage","setTotal","shareList","setShareList","orderBy","setOrderBy","order","Card","CardHeader","subheader","datetime","create_date","locale","Pagination","count","ceil","MyShareCompoment","showPwd","loadList","removeShare","oldList","changePermission","newPwd","shareIndex","changePreviewOption","handlePageChange","handleOrderChange","isExpired","remain_downloads","CardActions","disableActionSpacing","MyShare","SelectFileDialog","setFiles","filesCopy","dividers","FormGroup","row","FormControlLabel","control","iconContainer","borderInlineStart","contentSide","iconMultiple","subFileName","subFileIcon","scroll","actionButton","infoTitle","infoValue","bitmap","DownloadingCard","canvasRef","setTask","selectDialogOpen","setSelectDialogOpen","selectFileOption","setSelectFileOption","bitfield","str","canvas","getContext","clearRect","strokeStyle","bit","numPieces","beginPath","moveTo","lineTo","stroke","getPercent","completed","activeFiles","getDownloadName","bittorrent","mode","gid","indexes","newExpanded","CardContent","LinearProgress","completedLength","newIndex","newFiles","deleteFile","HighlightOff","update","uploadLength","uploadSpeed","infoHash","numSeeders","seeder","pieceLength","FinishedCard","task_status","res","getTaskError","task_error","RemoteDownloadButton","OpenRemoteDownloadDialog","Fab","Add","DownloadComponent","interval","downloading","finishedList","continue","loadDownloading","PageLoading","LockedFileCompoment","setPassowrd","LockedFile","marginRottom","boxHeader","cursor","shareDes","Creator","userProfile","isFolder","views","ImgPreview","SharedFileCompoment","scoreHandle","download","box","boxContent","fileSize","boxFooter","actionLeft","downloadButton","SharedFile","fileCotainer","buttonCotainer","ReadMe","SharedFolderComponent","handleClickAway","readmeShowed","ClickAwayListener","onClickAway","managerContainer","SharedFolder","shareUserPopoverAnchorEl","SharePreload","setShare","setPassword","locked","withPassword","DocViewer","setURL","formGroup","formIcon","CreateWebDAVAccount","setValue","pathSelectDialog","setPathSelectDialog","formContainer","LabelOutlined","FolderOpenOutlined","cardContent","tableContainer","WebDAV","tab","setTab","setCreate","accounts","setAccounts","account","ID","CreatedAt","created_at","Name","Root","Tabs","indicatorColor","textColor","newValue","Tab","Alert","severity","origin","TableContainer","align","accountCopy","deleteAccount","footer","Tasks","setTasks","nowrap","getError","ProfileCompoment","listType","loadNext","loadPrev","avatarContainer","centered","infoContainer","infoItem","mobileHide","th","tableLink","Profile","backgroundPosition","borderRaidus","pageInfo","sectionTitle","desenList","flexContainer","Authn","setSelected","confirm","setConfirm","deleteCredential","fingerprint","credentialCreationOptions","excludeCredentials","credential","attestationObject","add","UserSettingCompoment","avatarModal","nickModal","changePassword","oldPwd","webdavPwd","newPwdRepeat","twoFactor","authCode","changeTheme","chosenTheme","showWebDavUrl","showWebDavUserName","changeWebDavPwd","groupBackModal","changePolicy","settings","group_expires","qq","homepage","two_factor","two_fa_secret","prefer_theme","loadSetting","useGravatar","changeNick","uploadAvatar","formData","FormData","append","fileInput","headers","handleToggle","changhePwd","old","new","changheWebdavPwd","axios","init2FA","handleAlignment","toggleThemeMode","ListItemAvatar","infoTextWithIcon","rightIconWithText","infoText","Switch","firstColor","secondColor","Brightness3","ListAlt","uploadFromFile","userGravatar","paddingText","textField","flexContainerResponse","qrcode","desText","ToggleButtonGroup","exclusive","ToggleButton","themeBlock","UserSetting","yellow","policySelected","avatarSuccess","Register","password_repeat","setInput","emailActive","setEmailActive","regCaptcha","Activation","setSuccess","ResetForm","secret","Reset","forgetCaptcha","PDFViewer","resave","doNavigate","defaultStatus","rawStore","configCache","InitSiteConfig","QQLogin","black","contrastText","filename","bgSelected","ErrorBoundary","errorInfo","componentStack","Admin","hash","fetch","contentType","ready","unregister","checkValidServiceWorker","reduxEnhance","applyMiddleware","createStore","viewUpdateState","explorerState","appState","cloudreveApp","combinedReducer","combine","namespace","reducer","invariant","combineReducers","UpdateSiteConfig","ReactDOM","exact","themeConfig","prefersDarkMode","useMediaQuery","useMemo","prefer","createMuiTheme","Fragment","ThemeProvider","CssBaseline","Text","Code","getElementById","setSubtitle","PathSelectorCompoment","selectedTarget","toBeLoad","back","paths","api","unshift","handleSelect","selector","buttonIcon","iconWhite","instance","withCredentials","crossDomain","AppError","stack","constructor","interceptors","use"],"mappings":"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","file":"static/js/main.d8bda0b8.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Zoom from \"@material-ui/core/Zoom\";\n\nfunction AutoHidden({ children, enable }) {\n    const [hidden, setHidden] = useState(false);\n\n    let prev = window.scrollY;\n    let lastUpdate = window.scrollY;\n    const show = 50;\n\n    useEffect(() => {\n        const handleNavigation = e => {\n            const window = e.currentTarget;\n\n            if (prev > window.scrollY) {\n                if (lastUpdate - window.scrollY > show) {\n                    lastUpdate = window.scrollY;\n                    setHidden(false);\n                }\n            } else if (prev < window.scrollY) {\n                if (window.scrollY - lastUpdate > show) {\n                    lastUpdate = window.scrollY;\n                    setHidden(true);\n                }\n            }\n            prev = window.scrollY;\n        };\n        if (enable) {\n            window.addEventListener(\"scroll\", e => handleNavigation(e));\n        }\n        // eslint-disable-next-line\n    }, [enable]);\n\n    return <Zoom in={!hidden}>{children}</Zoom>;\n}\n\nexport default AutoHidden;\n","const statusHelper = {\n    isHomePage(path) {\n        return path === \"/home\";\n    },\n    isSharePage(path) {\n        return path && path.startsWith(\"/s/\");\n    },\n    isAdminPage(path) {\n        return path && path.startsWith(\"/admin\");\n    },\n    isLoginPage(path) {\n        return path && path.startsWith(\"/login\");\n    },\n    isMobile() {\n        return window.innerWidth < 600;\n    }\n};\nexport default statusHelper;\n","/* eslint-disable no-case-declarations */\nimport { AnyAction } from \"redux\";\nimport { CloudreveFile } from \"../../types\";\n\ninterface SelectProps {\n    isMultiple: boolean;\n    withFolder: boolean;\n    withFile: boolean;\n}\n\nexport interface ExplorerState {\n    dndSignal: boolean;\n    dndTarget: any;\n    dndSource: any;\n    fileList: CloudreveFile[];\n    dirList: CloudreveFile[];\n    selected: CloudreveFile[];\n    selectProps: SelectProps;\n    lastSelect: {\n        file: CloudreveFile;\n        index: number;\n    };\n    shiftSelectedIds: string[];\n    imgPreview: {\n        first: CloudreveFile;\n        other: [];\n    };\n    keywords: string;\n    fileSave: boolean;\n}\n\nexport const initState: ExplorerState = {\n    dndSignal: false,\n    dndTarget: null,\n    dndSource: null,\n    fileList: [],\n    dirList: [],\n    selected: [],\n    selectProps: {\n        isMultiple: false,\n        withFolder: false,\n        withFile: false\n    },\n    lastSelect: {\n        file: {\n            id: \"\",\n            name: \"\",\n            size: 0,\n            type: \"file\",\n            date: \"\"\n        },\n        index: -1\n    },\n    shiftSelectedIds: [],\n    imgPreview: {\n        first: {\n            id: \"\",\n            name: \"\",\n            size: 0,\n            type: \"file\",\n            date: \"\"\n        },\n        other: []\n    },\n    keywords: \"\",\n    fileSave: false\n};\n\nconst checkSelectedProps = (selected: CloudreveFile[]): SelectProps => {\n    const isMultiple = selected.length > 1;\n    let withFolder = false;\n    let withFile = false;\n    selected.forEach(value => {\n        if (value.type === \"dir\") {\n            withFolder = true;\n        } else if (value.type === \"file\") {\n            withFile = true;\n        }\n    });\n    return {\n        isMultiple,\n        withFolder,\n        withFile\n    };\n};\n\nconst explorer = (\n    state: ExplorerState = initState,\n    action: AnyAction\n): ExplorerState => {\n    switch (action.type) {\n        case \"DRAG_AND_DROP\":\n            return Object.assign({}, state, {\n                dndSignal: !state.dndSignal,\n                dndTarget: action.target,\n                dndSource: action.source\n            });\n        case \"SET_FILE_LIST\":\n            return Object.assign({}, state, {\n                fileList: action.list\n            });\n        case \"SET_DIR_LIST\":\n            return Object.assign({}, state, {\n                dirList: action.list\n            });\n        case \"ADD_SELECTED_TARGETS\":\n            const addedSelected = [...state.selected, ...action.targets];\n            return Object.assign({}, state, {\n                selected: addedSelected,\n                selectProps: checkSelectedProps(addedSelected)\n            });\n        case \"SET_SELECTED_TARGET\":\n            const newSelected = action.targets;\n            return Object.assign({}, state, {\n                selected: newSelected,\n                selectProps: checkSelectedProps(newSelected)\n            });\n        case \"RMOVE_SELECTED_TARGETS\":\n            const { fileIds } = action;\n            const filteredSelected = state.selected.filter(file => {\n                return !fileIds.includes(file.id);\n            });\n            return Object.assign({}, state, {\n                selected: filteredSelected,\n                selectProps: checkSelectedProps(filteredSelected)\n            });\n        case \"REFRESH_FILE_LIST\":\n            return Object.assign({}, state, {\n                selected: [],\n                selectProps: {\n                    isMultiple: false,\n                    withFolder: false,\n                    withFile: false\n                }\n            });\n        case \"SEARCH_MY_FILE\":\n            return Object.assign({}, state, {\n                selected: [],\n                selectProps: {\n                    isMultiple: false,\n                    withFolder: false,\n                    withFile: false\n                },\n                keywords: action.keywords\n            });\n        case \"SHOW_IMG_PREIVEW\":\n            return Object.assign({}, state, {\n                imgPreview: {\n                    first: action.first,\n                    other: state.fileList\n                }\n            });\n        case \"SAVE_FILE\":\n            return {\n                ...state,\n                fileSave: !state.fileSave\n            };\n        case \"SET_LAST_SELECT\":\n            const { file, index } = action;\n            return {\n                ...state,\n                lastSelect: {\n                    file,\n                    index\n                }\n            };\n        case \"SET_SHIFT_SELECTED_IDS\":\n            const { shiftSelectedIds } = action;\n            return {\n                ...state,\n                shiftSelectedIds\n            };\n        case \"SET_NAVIGATOR\":\n            return {\n                ...state,\n                selected: [],\n                selectProps: {\n                    isMultiple: false,\n                    withFolder: false,\n                    withFile: false\n                },\n                keywords: \"\"\n            };\n        default:\n            return state;\n    }\n};\n\nexport default explorer;\n","import React from \"react\";\nimport { Code } from \"react-content-loader\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    loader: {\n        width: \"70%\",\n        padding: 40,\n        [theme.breakpoints.down(\"md\")]: {\n            width: \"100%\",\n            padding: 10\n        }\n    }\n}));\n\nconst MyLoader = props => <Code className={props.className} />;\n\nfunction TextLoading() {\n    const classes = useStyles();\n\n    return (\n        <div>\n            <MyLoader className={classes.loader} />\n        </div>\n    );\n}\n\nexport default TextLoading;\n","import React, { useCallback } from \"react\";\nimport { IconButton, makeStyles } from \"@material-ui/core\";\nimport DayIcon from \"@material-ui/icons/Brightness7\";\nimport NightIcon from \"@material-ui/icons/Brightness4\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { toggleDaylightMode } from \"../../actions\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Auth from \"../../middleware/Auth\";\nimport classNames from \"classnames\";\n\nconst useStyles = makeStyles(() => ({\n    icon: {\n        color: \"rgb(255, 255, 255)\",\n        opacity: \"0.54\"\n    }\n}));\n\nconst DarkModeSwitcher = ({ position }) => {\n    const ThemeType = useSelector(state => state.siteConfig.theme.palette.type);\n    const dispatch = useDispatch();\n    const ToggleThemeMode = useCallback(() => dispatch(toggleDaylightMode()), [\n        dispatch\n    ]);\n    const isDayLight = (ThemeType && ThemeType === \"light\") || !ThemeType;\n    const isDark = ThemeType && ThemeType === \"dark\";\n    const toggleMode = () => {\n        Auth.SetPreference(\"theme_mode\", isDayLight ? \"dark\" : \"light\");\n        ToggleThemeMode();\n    };\n    const classes = useStyles();\n    return (\n        <Tooltip\n            title={isDayLight ? \"切换到深色模式\" : \"切换到浅色模式\"}\n            placement=\"bottom\"\n        >\n            <IconButton\n                className={classNames({\n                    [classes.icon]: \"left\" === position\n                })}\n                onClick={toggleMode}\n                color=\"inherit\"\n            >\n                {isDayLight && <NightIcon />}\n                {isDark && <DayIcon />}\n            </IconButton>\n        </Tooltip>\n    );\n};\n\nexport default DarkModeSwitcher;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport CheckIcon from \"@material-ui/icons/Check\";\nimport AutoHidden from \"./AutoHidden\";\nimport statusHelper from \"../../utils/page\";\nimport Fab from \"@material-ui/core/Fab\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { green } from \"@material-ui/core/colors\";\nimport clsx from \"clsx\";\n\nconst useStyles = makeStyles(theme => ({\n    fab: {\n        margin: 0,\n        top: \"auto\",\n        right: 20,\n        bottom: 20,\n        left: \"auto\",\n        zIndex: 5,\n        position: \"fixed\"\n    },\n    badge: {\n        position: \"absolute\",\n        bottom: 26,\n        top: \"auto\",\n        zIndex: 9999,\n        right: 7\n    },\n    fabProgress: {\n        color: green[500],\n        position: \"absolute\",\n        top: -6,\n        left: -6,\n        zIndex: 1\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\"\n    },\n    buttonSuccess: {\n        backgroundColor: green[500],\n        \"&:hover\": {\n            backgroundColor: green[700]\n        }\n    }\n}));\n\nexport default function SaveButton(props) {\n    const classes = useStyles();\n    const buttonClassname = clsx({\n        [classes.buttonSuccess]: props.status === \"success\"\n    });\n\n    return (\n        <AutoHidden enable={statusHelper.isMobile()}>\n            <div className={classes.fab}>\n                <div className={classes.wrapper}>\n                    <Tooltip title={\"保存\"} placement={\"left\"}>\n                        <Fab\n                            onClick={props.onClick}\n                            color=\"primary\"\n                            className={buttonClassname}\n                            disabled={props.status === \"loading\"}\n                            aria-label=\"add\"\n                        >\n                            {props.status === \"success\" ? (\n                                <CheckIcon />\n                            ) : (\n                                <SaveIcon />\n                            )}\n                        </Fab>\n                    </Tooltip>\n                    {props.status === \"loading\" && (\n                        <CircularProgress\n                            size={68}\n                            className={classes.fabProgress}\n                        />\n                    )}\n                </div>\n            </div>\n        </AutoHidden>\n    );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport { blue } from \"@material-ui/core/colors\";\nimport { useSelector } from \"react-redux\";\n\nconst useStyles = makeStyles({\n    avatar: {\n        backgroundColor: blue[100],\n        color: blue[600]\n    },\n    loadingContainer: {\n        display: \"flex\"\n    },\n    loading: {\n        marginTop: 10,\n        marginLeft: 20\n    }\n});\n\nexport default function LoadingDialog() {\n    const classes = useStyles();\n    const open = useSelector(state => state.viewUpdate.modals.loading);\n    const text = useSelector(state => state.viewUpdate.modals.loadingText);\n\n    return (\n        <Dialog aria-labelledby=\"simple-dialog-title\" open={open}>\n            <DialogContent>\n                <DialogContentText className={classes.loadingContainer}>\n                    <CircularProgress color=\"secondary\" />\n                    <div className={classes.loading}>{text}</div>\n                </DialogContentText>\n            </DialogContent>\n        </Dialog>\n    );\n}\n","import React, { useState, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    DialogContentText,\n    CircularProgress\n} from \"@material-ui/core\";\nimport {\n    toggleSnackbar,\n    setModalsLoading,\n    refreshFileList\n} from \"../../actions/index\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\n\nconst useStyles = makeStyles(theme => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\"\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\"\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12\n    }\n}));\n\nexport default function CopyDialog(props) {\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const SetModalsLoading = useCallback(\n        status => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch]\n    );\n    const RefreshFileList = useCallback(() => {\n        dispatch(refreshFileList());\n    }, [dispatch]);\n\n    const setMoveTarget = folder => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = e => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n\n        if (props.selected[0].type === \"dir\") {\n            dirs.push(props.selected[0].id);\n        } else {\n            items.push(props.selected[0].id);\n        }\n\n        API.post(\"/object/copy\", {\n            src_dir: props.selected[0].path,\n            src: {\n                dirs: dirs,\n                items: items\n            },\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath\n        })\n            .then(() => {\n                props.onClose();\n                RefreshFileList();\n                SetModalsLoading(false);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">复制到</DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        复制到 <strong>{selectedPathName}</strong>\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\" || props.modalsLoading}\n                    >\n                        确定\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useCallback } from \"react\";\nimport {\n    Checkbox,\n    FormControl,\n    makeStyles,\n    TextField\n} from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    CircularProgress\n} from \"@material-ui/core\";\nimport { toggleSnackbar } from \"../../actions/index\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport List from \"@material-ui/core/List\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport TimerIcon from \"@material-ui/icons/Timer\";\nimport CasinoIcon from \"@material-ui/icons/Casino\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport Typography from \"@material-ui/core/Typography\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport { Visibility, VisibilityOff } from \"@material-ui/icons\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles(theme => ({\n    widthAnimation: {},\n    shareUrl: {\n        minWidth: \"400px\"\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\"\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\"\n    },\n    flexCenter: {\n        alignItems: \"center\"\n    },\n    noFlex: {\n        display: \"block\"\n    },\n    scoreCalc: {\n        marginTop: 10\n    }\n}));\n\nconst ExpansionPanel = withStyles({\n    root: {\n        border: \"0px solid rgba(0, 0, 0, .125)\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0\n        },\n        \"&:before\": {\n            display: \"none\"\n        },\n        \"&$expanded\": {\n            margin: \"auto\"\n        }\n    },\n    expanded: {}\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        padding: 0,\n        \"&$expanded\": {}\n    },\n    content: {\n        margin: 0,\n        display: \"initial\",\n        \"&$expanded\": {\n            margin: \"0 0\"\n        }\n    },\n    expanded: {}\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n    root: {\n        padding: 24,\n        backgroundColor: theme.palette.background.default\n    }\n}))(MuiExpansionPanelDetails);\n\nexport default function CreatShare(props) {\n    const dispatch = useDispatch();\n    const classes = useStyles();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const [expanded, setExpanded] = React.useState(false);\n    const [shareURL, setShareURL] = React.useState(\"\");\n    const [values, setValues] = React.useState({\n        password: \"\",\n        downloads: 1,\n        expires: 24 * 3600,\n        showPassword: false\n    });\n    const [shareOption, setShareOption] = React.useState({\n        password: false,\n        expire: false,\n        preview: true\n    });\n\n    const handleChange = prop => event => {\n        // 输入密码\n        if (prop === \"password\") {\n            if (event.target.value === \"\") {\n                setShareOption({ ...shareOption, password: false });\n            } else {\n                setShareOption({ ...shareOption, password: true });\n            }\n        }\n\n        setValues({ ...values, [prop]: event.target.value });\n    };\n\n    const handleClickShowPassword = () => {\n        setValues({ ...values, showPassword: !values.showPassword });\n    };\n\n    const handleMouseDownPassword = event => {\n        event.preventDefault();\n    };\n\n    const randomPassword = () => {\n        setShareOption({ ...shareOption, password: true });\n        setValues({\n            ...values,\n            password: Math.random()\n                .toString(36)\n                .substr(2)\n                .slice(2, 8),\n            showPassword: true\n        });\n    };\n\n    const handleExpand = panel => (event, isExpanded) => {\n        setExpanded(isExpanded ? panel : false);\n    };\n\n    const handleCheck = prop => () => {\n        if (!shareOption[prop]) {\n            handleExpand(prop)(null, true);\n        }\n        if (prop === \"password\" && shareOption[prop]) {\n            setValues({\n                ...values,\n                password: \"\"\n            });\n        }\n        setShareOption({ ...shareOption, [prop]: !shareOption[prop] });\n    };\n\n    const onClose = () => {\n        props.onClose();\n        setTimeout(() => {\n            setShareURL(\"\");\n        }, 500);\n    };\n\n    const submitShare = e => {\n        e.preventDefault();\n        props.setModalsLoading(true);\n        const submitFormBody = {\n            id: props.selected[0].id,\n            is_dir: props.selected[0].type === \"dir\",\n            password: values.password,\n            downloads: shareOption.expire ? values.downloads : -1,\n            expire: values.expires,\n            preview: shareOption.preview\n        };\n\n        API.post(\"/share\", submitFormBody)\n            .then(response => {\n                setShareURL(response.data);\n                setValues({\n                    password: \"\",\n                    downloads: 1,\n                    expires: 24 * 3600,\n                    showPassword: false\n                });\n                setShareOption({\n                    password: false,\n                    expire: false\n                });\n                props.setModalsLoading(false);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                props.setModalsLoading(false);\n            });\n    };\n\n    const handleFocus = event => event.target.select();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={onClose}\n            aria-labelledby=\"form-dialog-title\"\n            className={classes.widthAnimation}\n            maxWidth=\"xs\"\n            fullWidth\n        >\n            <DialogTitle id=\"form-dialog-title\">创建分享链接</DialogTitle>\n\n            {shareURL === \"\" && (\n                <>\n                    <Divider />\n                    <List>\n                        <ExpansionPanel\n                            expanded={expanded === \"password\"}\n                            onChange={handleExpand(\"password\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <LockIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"使用密码保护\" />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.password}\n                                            onChange={handleCheck(\"password\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <FormControl\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    fullWidth\n                                >\n                                    <InputLabel htmlFor=\"filled-adornment-password\">\n                                        分享密码\n                                    </InputLabel>\n                                    <OutlinedInput\n                                        fullWidth\n                                        id=\"outlined-adornment-password\"\n                                        type={\n                                            values.showPassword\n                                                ? \"text\"\n                                                : \"password\"\n                                        }\n                                        value={values.password}\n                                        onChange={handleChange(\"password\")}\n                                        endAdornment={\n                                            <InputAdornment position=\"end\">\n                                                <Tooltip title=\"随机生成\">\n                                                    <IconButton\n                                                        aria-label=\"toggle password visibility\"\n                                                        onClick={randomPassword}\n                                                        edge=\"end\"\n                                                    >\n                                                        <CasinoIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                                <IconButton\n                                                    aria-label=\"toggle password visibility\"\n                                                    onClick={\n                                                        handleClickShowPassword\n                                                    }\n                                                    onMouseDown={\n                                                        handleMouseDownPassword\n                                                    }\n                                                    edge=\"end\"\n                                                >\n                                                    {values.showPassword ? (\n                                                        <Visibility />\n                                                    ) : (\n                                                        <VisibilityOff />\n                                                    )}\n                                                </IconButton>\n                                            </InputAdornment>\n                                        }\n                                        labelWidth={70}\n                                    />\n                                </FormControl>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                        <ExpansionPanel\n                            expanded={expanded === \"expire\"}\n                            onChange={handleExpand(\"expire\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <TimerIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"自动过期\" />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.expire}\n                                            onChange={handleCheck(\"expire\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails\n                                className={classes.flexCenter}\n                            >\n                                <FormControl\n                                    style={{\n                                        marginRight: 10\n                                    }}\n                                >\n                                    <Select\n                                        labelId=\"demo-simple-select-label\"\n                                        id=\"demo-simple-select\"\n                                        value={values.downloads}\n                                        onChange={handleChange(\"downloads\")}\n                                    >\n                                        <MenuItem value={1}>1 次下载</MenuItem>\n                                        <MenuItem value={2}>2 次下载</MenuItem>\n                                        <MenuItem value={3}>3 次下载</MenuItem>\n                                        <MenuItem value={4}>4 次下载</MenuItem>\n                                        <MenuItem value={5}>5 次下载</MenuItem>\n                                        <MenuItem value={20}>\n                                            20 次下载\n                                        </MenuItem>\n                                        <MenuItem value={50}>\n                                            50 次下载\n                                        </MenuItem>\n                                        <MenuItem value={100}>\n                                            100 次下载\n                                        </MenuItem>\n                                    </Select>\n                                </FormControl>\n                                <Typography>或者</Typography>\n                                <FormControl\n                                    style={{\n                                        marginRight: 10,\n                                        marginLeft: 10\n                                    }}\n                                >\n                                    <Select\n                                        labelId=\"demo-simple-select-label\"\n                                        id=\"demo-simple-select\"\n                                        value={values.expires}\n                                        onChange={handleChange(\"expires\")}\n                                    >\n                                        <MenuItem value={300}>5 分钟</MenuItem>\n                                        <MenuItem value={3600}>1 小时</MenuItem>\n                                        <MenuItem value={24 * 3600}>\n                                            1 天\n                                        </MenuItem>\n                                        <MenuItem value={7 * 24 * 3600}>\n                                            7 天\n                                        </MenuItem>\n                                        <MenuItem value={30 * 24 * 3600}>\n                                            30 天\n                                        </MenuItem>\n                                    </Select>\n                                </FormControl>\n                                <Typography>后过期</Typography>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                        <ExpansionPanel\n                            expanded={expanded === \"preview\"}\n                            onChange={handleExpand(\"preview\")}\n                        >\n                            <ExpansionPanelSummary\n                                aria-controls=\"panel1a-content\"\n                                id=\"panel1a-header\"\n                            >\n                                <ListItem button>\n                                    <ListItemIcon>\n                                        <LockIcon />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"允许预览\" />\n                                    <ListItemSecondaryAction>\n                                        <Checkbox\n                                            checked={shareOption.preview}\n                                            onChange={handleCheck(\"preview\")}\n                                        />\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                            </ExpansionPanelSummary>\n                            <ExpansionPanelDetails>\n                                <Typography>\n                                    是否允许在分享页面预览文件内容\n                                </Typography>\n                            </ExpansionPanelDetails>\n                        </ExpansionPanel>\n                    </List>\n                    <Divider />\n                </>\n            )}\n            {shareURL !== \"\" && (\n                <DialogContent>\n                    <TextField\n                        onFocus={handleFocus}\n                        autoFocus\n                        inputProps={{ readonly: true }}\n                        label=\"分享链接\"\n                        value={shareURL}\n                        variant=\"outlined\"\n                        fullWidth\n                    />\n                </DialogContent>\n            )}\n\n            <DialogActions>\n                <Button onClick={onClose}>关闭</Button>\n\n                {shareURL === \"\" && (\n                    <div className={classes.wrapper}>\n                        <Button\n                            onClick={submitShare}\n                            color=\"secondary\"\n                            disabled={props.modalsLoading}\n                        >\n                            创建分享链接\n                            {props.modalsLoading && (\n                                <CircularProgress\n                                    size={24}\n                                    className={classes.buttonProgress}\n                                />\n                            )}\n                        </Button>\n                    </div>\n                )}\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useState, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    DialogContentText,\n    CircularProgress\n} from \"@material-ui/core\";\nimport { toggleSnackbar, setModalsLoading } from \"../../actions/index\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport { filePath } from \"../../utils\";\n\nconst useStyles = makeStyles(theme => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\"\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\"\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12\n    }\n}));\n\nexport default function DecompressDialog(props) {\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const SetModalsLoading = useCallback(\n        status => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch]\n    );\n\n    const setMoveTarget = folder => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = e => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n        API.post(\"/file/decompress\", {\n            src: filePath(props.selected[0]),\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath\n        })\n            .then(() => {\n                props.onClose();\n                ToggleSnackbar(\"top\", \"right\", \"解压缩任务已创建\", \"success\");\n                SetModalsLoading(false);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">解压送至</DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        解压送至 <strong>{selectedPathName}</strong>\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\" || props.modalsLoading}\n                    >\n                        确定\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useState, useCallback } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    DialogContentText,\n    CircularProgress\n} from \"@material-ui/core\";\nimport { toggleSnackbar, setModalsLoading } from \"../../actions/index\";\nimport PathSelector from \"../FileManager/PathSelector\";\nimport { useDispatch } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles(theme => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\",\n        backgroundColor: theme.palette.background.default\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\"\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12\n    }\n}));\n\nexport default function CompressDialog(props) {\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    const [fileName, setFileName] = useState(\"\");\n    // eslint-disable-next-line\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n\n    const dispatch = useDispatch();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const SetModalsLoading = useCallback(\n        status => {\n            dispatch(setModalsLoading(status));\n        },\n        [dispatch]\n    );\n\n    const setMoveTarget = folder => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const submitMove = e => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        SetModalsLoading(true);\n\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n        props.selected.map(value => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n\n        API.post(\"/file/compress\", {\n            src: {\n                dirs: dirs,\n                items: items\n            },\n            name: fileName,\n            dst: selectedPath === \"//\" ? \"/\" : selectedPath\n        })\n            .then(() => {\n                props.onClose();\n                ToggleSnackbar(\"top\", \"right\", \"压缩任务已创建\", \"success\");\n                SetModalsLoading(false);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                SetModalsLoading(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">存放到</DialogTitle>\n            <PathSelector\n                presentPath={props.presentPath}\n                selected={props.selected}\n                onSelect={setMoveTarget}\n            />\n\n            {selectedPath !== \"\" && (\n                <DialogContent className={classes.contentFix}>\n                    <DialogContentText>\n                        <TextField\n                            onChange={e => setFileName(e.target.value)}\n                            value={fileName}\n                            fullWidth\n                            autoFocus\n                            id=\"standard-basic\"\n                            label=\"压缩文件名\"\n                        />\n                    </DialogContentText>\n                </DialogContent>\n            )}\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        onClick={submitMove}\n                        color=\"primary\"\n                        disabled={\n                            selectedPath === \"\" ||\n                            fileName === \"\" ||\n                            props.modalsLoading\n                        }\n                    >\n                        确定\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n    closeAllModals,\n    toggleSnackbar,\n    setModalsLoading,\n    refreshFileList,\n    refreshStorage,\n    openLoadingDialog\n} from \"../../actions/index\";\nimport PathSelector from \"./PathSelector\";\nimport API, { baseURL } from \"../../middleware/Api\";\nimport {\n    withStyles,\n    Button,\n    TextField,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    DialogContentText,\n    CircularProgress\n} from \"@material-ui/core\";\nimport Loading from \"../Modals/Loading\";\nimport CopyDialog from \"../Modals/Copy\";\nimport CreatShare from \"../Modals/CreateShare\";\nimport { withRouter } from \"react-router-dom\";\nimport pathHelper from \"../../utils/page\";\nimport DecompressDialog from \"../Modals/Decompress\";\nimport CompressDialog from \"../Modals/Compress\";\n\nconst styles = theme => ({\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\"\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12\n    },\n    contentFix: {\n        padding: \"10px 24px 0px 24px\"\n    }\n});\n\nconst mapStateToProps = state => {\n    return {\n        path: state.navigator.path,\n        selected: state.explorer.selected,\n        modalsStatus: state.viewUpdate.modals,\n        modalsLoading: state.viewUpdate.modalsLoading,\n        dirList: state.explorer.dirList,\n        fileList: state.explorer.fileList,\n        dndSignale: state.explorer.dndSignal,\n        dndTarget: state.explorer.dndTarget,\n        dndSource: state.explorer.dndSource,\n        loading: state.viewUpdate.modals.loading,\n        loadingText: state.viewUpdate.modals.loadingText\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        closeAllModals: () => {\n            dispatch(closeAllModals());\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        setModalsLoading: status => {\n            dispatch(setModalsLoading(status));\n        },\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        refreshStorage: () => {\n            dispatch(refreshStorage());\n        },\n        openLoadingDialog: text => {\n            dispatch(openLoadingDialog(text));\n        }\n    };\n};\n\nclass ModalsCompoment extends Component {\n    state = {\n        newFolderName: \"\",\n        newFileName: \"\",\n        newName: \"\",\n        selectedPath: \"\",\n        selectedPathName: \"\",\n        secretShare: false,\n        sharePwd: \"\",\n        shareUrl: \"\",\n        downloadURL: \"\",\n        remoteDownloadPathSelect: false,\n        source: \"\",\n        purchaseCallback: null\n    };\n\n    handleInputChange = e => {\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    };\n\n    newNameSuffix = \"\";\n    downloaded = false;\n\n    UNSAFE_componentWillReceiveProps = nextProps => {\n        if (this.props.dndSignale !== nextProps.dndSignale) {\n            this.dragMove(nextProps.dndSource, nextProps.dndTarget);\n            return;\n        }\n        if (this.props.loading !== nextProps.loading) {\n            // 打包下载\n            if (nextProps.loading === true) {\n                if (nextProps.loadingText === \"打包中...\") {\n                    if (\n                        pathHelper.isSharePage(this.props.location.pathname) &&\n                        this.props.share &&\n                        this.props.share.score > 0\n                    ) {\n                        this.scoreHandler(this.archiveDownload);\n                        return;\n                    }\n                    this.archiveDownload();\n                } else if (nextProps.loadingText === \"获取下载地址...\") {\n                    if (\n                        pathHelper.isSharePage(this.props.location.pathname) &&\n                        this.props.share &&\n                        this.props.share.score > 0\n                    ) {\n                        this.scoreHandler(this.Download);\n                        return;\n                    }\n                    this.Download();\n                }\n            }\n            return;\n        }\n        if (this.props.modalsStatus.rename !== nextProps.modalsStatus.rename) {\n            const name = nextProps.selected[0].name;\n            this.setState({\n                newName: name\n            });\n            return;\n        }\n        if (\n            this.props.modalsStatus.getSource !==\n                nextProps.modalsStatus.getSource &&\n            nextProps.modalsStatus.getSource === true\n        ) {\n            API.get(\"/file/source/\" + this.props.selected[0].id)\n                .then(response => {\n                    this.setState({\n                        source: response.data.url\n                    });\n                })\n                .catch(error => {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                });\n        }\n    };\n\n    scoreHandler = callback => {\n        callback();\n    };\n\n    Download = () => {\n        let reqURL = \"\";\n        if (this.props.selected[0].key) {\n            const downloadPath =\n                this.props.selected[0].path === \"/\"\n                    ? this.props.selected[0].path + this.props.selected[0].name\n                    : this.props.selected[0].path +\n                      \"/\" +\n                      this.props.selected[0].name;\n            reqURL =\n                \"/share/download/\" +\n                this.props.selected[0].key +\n                \"?path=\" +\n                encodeURIComponent(downloadPath);\n        } else {\n            reqURL = \"/file/download/\" + this.props.selected[0].id;\n        }\n\n        API.put(reqURL)\n            .then(response => {\n                window.location.assign(response.data);\n                this.onClose();\n                this.downloaded = true;\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.onClose();\n            });\n    };\n\n    archiveDownload = () => {\n        const dirs = [],\n            items = [];\n        this.props.selected.map(value => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n            return null;\n        });\n\n        let reqURL = \"/file/archive\";\n        const postBody = {\n            items: items,\n            dirs: dirs\n        };\n        if (pathHelper.isSharePage(this.props.location.pathname)) {\n            reqURL = \"/share/archive/\" + window.shareInfo.key;\n            postBody[\"path\"] = this.props.selected[0].path;\n        }\n\n        API.post(reqURL, postBody)\n            .then(response => {\n                if (response.rawData.code === 0) {\n                    this.onClose();\n                    window.location.assign(response.data);\n                } else {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.rawData.msg,\n                        \"warning\"\n                    );\n                }\n                this.onClose();\n                this.props.refreshStorage();\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.onClose();\n            });\n    };\n\n    submitRemove = e => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n        this.props.selected.map(value => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n        API.delete(\"/object\", {\n            data: {\n                items: items,\n                dirs: dirs\n            }\n        })\n            .then(response => {\n                if (response.rawData.code === 0) {\n                    this.onClose();\n                    setTimeout(this.props.refreshFileList, 500);\n                } else {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.rawData.msg,\n                        \"warning\"\n                    );\n                }\n                this.props.setModalsLoading(false);\n                this.props.refreshStorage();\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            });\n    };\n\n    submitMove = e => {\n        if (e != null) {\n            e.preventDefault();\n        }\n        this.props.setModalsLoading(true);\n        const dirs = [],\n            items = [];\n        // eslint-disable-next-line\n        this.props.selected.map(value => {\n            if (value.type === \"dir\") {\n                dirs.push(value.id);\n            } else {\n                items.push(value.id);\n            }\n        });\n        API.patch(\"/object\", {\n            action: \"move\",\n            src_dir: this.props.selected[0].path,\n            src: {\n                dirs: dirs,\n                items: items\n            },\n            dst: this.DragSelectedPath\n                ? this.DragSelectedPath\n                : this.state.selectedPath === \"//\"\n                ? \"/\"\n                : this.state.selectedPath\n        })\n            .then(() => {\n                this.onClose();\n                this.props.refreshFileList();\n                this.props.setModalsLoading(false);\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            })\n            .then(() => {\n                this.props.closeAllModals();\n            });\n    };\n\n    dragMove = (source, target) => {\n        if (this.props.selected.length === 0) {\n            this.props.selected[0] = source;\n        }\n        let doMove = true;\n\n        // eslint-disable-next-line\n        this.props.selected.map(value => {\n            // 根据ID过滤\n            if (value.id === target.id && value.type === target.type) {\n                doMove = false;\n                // eslint-disable-next-line\n                return;\n            }\n            // 根据路径过滤\n            if (\n                value.path ===\n                target.path + (target.path === \"/\" ? \"\" : \"/\") + target.name\n            ) {\n                doMove = false;\n                // eslint-disable-next-line\n                return;\n            }\n        });\n        if (doMove) {\n            this.DragSelectedPath =\n                target.path === \"/\"\n                    ? target.path + target.name\n                    : target.path + \"/\" + target.name;\n            this.props.openLoadingDialog(\"处理中...\");\n            this.submitMove();\n        }\n    };\n\n    submitRename = e => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        const newName = this.state.newName;\n\n        const src = {\n            dirs: [],\n            items: []\n        };\n\n        if (this.props.selected[0].type === \"dir\") {\n            src.dirs[0] = this.props.selected[0].id;\n        } else {\n            src.items[0] = this.props.selected[0].id;\n        }\n\n        // 检查重名\n        if (\n            this.props.dirList.findIndex(value => {\n                return value.name === newName;\n            }) !== -1 ||\n            this.props.fileList.findIndex(value => {\n                return value.name === newName;\n            }) !== -1\n        ) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"新名称与已有文件重复\",\n                \"warning\"\n            );\n            this.props.setModalsLoading(false);\n        } else {\n            API.post(\"/object/rename\", {\n                action: \"rename\",\n                src: src,\n                new_name: newName\n            })\n                .then(() => {\n                    this.onClose();\n                    this.props.refreshFileList();\n                    this.props.setModalsLoading(false);\n                })\n                .catch(error => {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                    this.props.setModalsLoading(false);\n                });\n        }\n    };\n\n    submitCreateNewFolder = e => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        if (\n            this.props.dirList.findIndex(value => {\n                return value.name === this.state.newFolderName;\n            }) !== -1\n        ) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"文件夹名称重复\",\n                \"warning\"\n            );\n            this.props.setModalsLoading(false);\n        } else {\n            API.put(\"/directory\", {\n                path:\n                    (this.props.path === \"/\" ? \"\" : this.props.path) +\n                    \"/\" +\n                    this.state.newFolderName\n            })\n                .then(() => {\n                    this.onClose();\n                    this.props.refreshFileList();\n                    this.props.setModalsLoading(false);\n                })\n                .catch(error => {\n                    this.props.setModalsLoading(false);\n\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                });\n        }\n        //this.props.toggleSnackbar();\n    };\n\n    submitCreateNewFile = e => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        if (\n            this.props.dirList.findIndex(value => {\n                return value.name === this.state.newFileName;\n            }) !== -1\n        ) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"文件名称重复\",\n                \"warning\"\n            );\n            this.props.setModalsLoading(false);\n        } else {\n            API.post(\"/file/create\", {\n                path:\n                    (this.props.path === \"/\" ? \"\" : this.props.path) +\n                    \"/\" +\n                    this.state.newFileName\n            })\n                .then(() => {\n                    this.onClose();\n                    this.props.refreshFileList();\n                    this.props.setModalsLoading(false);\n                })\n                .catch(error => {\n                    this.props.setModalsLoading(false);\n\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        error.message,\n                        \"error\"\n                    );\n                });\n        }\n        //this.props.toggleSnackbar();\n    };\n\n    submitTorrentDownload = e => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        API.post(\"/aria2/torrent/\" + this.props.selected[0].id, {\n            dst:\n                this.state.selectedPath === \"//\" ? \"/\" : this.state.selectedPath\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"任务已创建\",\n                    \"success\"\n                );\n                this.onClose();\n                this.props.setModalsLoading(false);\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            });\n    };\n\n    submitDownload = e => {\n        e.preventDefault();\n        this.props.setModalsLoading(true);\n        API.post(\"/aria2/url\", {\n            url: this.state.downloadURL,\n            dst:\n                this.state.selectedPath === \"//\" ? \"/\" : this.state.selectedPath\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"任务已创建\",\n                    \"success\"\n                );\n                this.onClose();\n                this.props.setModalsLoading(false);\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.props.setModalsLoading(false);\n            });\n    };\n\n    setMoveTarget = folder => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        this.setState({\n            selectedPath: path,\n            selectedPathName: folder.name\n        });\n    };\n\n    remoteDownloadNext = () => {\n        this.props.closeAllModals();\n        this.setState({\n            remoteDownloadPathSelect: true\n        });\n    };\n\n    onClose = () => {\n        this.setState({\n            newFolderName: \"\",\n            newFileName: \"\",\n            newName: \"\",\n            selectedPath: \"\",\n            selectedPathName: \"\",\n            secretShare: false,\n            sharePwd: \"\",\n            downloadURL: \"\",\n            shareUrl: \"\",\n            remoteDownloadPathSelect: false,\n            source: \"\"\n        });\n        this.newNameSuffix = \"\";\n        this.props.closeAllModals();\n    };\n\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.checked });\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div>\n                <Loading />\n                <Dialog\n                    open={this.props.modalsStatus.getSource}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        获取文件外链\n                    </DialogTitle>\n\n                    <DialogContent>\n                        <form onSubmit={this.submitCreateNewFolder}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newFolderName\"\n                                label=\"外链地址\"\n                                type=\"text\"\n                                value={this.state.source}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>关闭</Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.props.modalsStatus.createNewFolder}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">新建文件夹</DialogTitle>\n\n                    <DialogContent>\n                        <form onSubmit={this.submitCreateNewFolder}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newFolderName\"\n                                label=\"文件夹名称\"\n                                type=\"text\"\n                                value={this.state.newFolderName}\n                                onChange={e => this.handleInputChange(e)}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitCreateNewFolder}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.newFolderName === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                创建\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.props.modalsStatus.createNewFile}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">新建文件</DialogTitle>\n\n                    <DialogContent>\n                        <form onSubmit={this.submitCreateNewFile}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newFileName\"\n                                label=\"文件名称\"\n                                type=\"text\"\n                                value={this.state.newFileName}\n                                onChange={e => this.handleInputChange(e)}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitCreateNewFile}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.newFileName === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                创建\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n\n                <Dialog\n                    open={this.props.modalsStatus.rename}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                    maxWidth=\"sm\"\n                    fullWidth={true}\n                >\n                    <DialogTitle id=\"form-dialog-title\">重命名</DialogTitle>\n                    <DialogContent>\n                        <DialogContentText>\n                            输入{\" \"}\n                            <strong>\n                                {this.props.selected.length === 1\n                                    ? this.props.selected[0].name\n                                    : \"\"}\n                            </strong>{\" \"}\n                            的新名称：\n                        </DialogContentText>\n                        <form onSubmit={this.submitRename}>\n                            <TextField\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"newName\"\n                                label=\"新名称\"\n                                type=\"text\"\n                                value={this.state.newName}\n                                onChange={e => this.handleInputChange(e)}\n                                fullWidth\n                            />\n                        </form>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitRename}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.newName === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                确定\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                <CopyDialog\n                    open={this.props.modalsStatus.copy}\n                    onClose={this.onClose}\n                    presentPath={this.props.path}\n                    selected={this.props.selected}\n                    modalsLoading={this.props.modalsLoading}\n                />\n\n                <Dialog\n                    open={this.props.modalsStatus.move}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">移动至</DialogTitle>\n                    <PathSelector\n                        presentPath={this.props.path}\n                        selected={this.props.selected}\n                        onSelect={this.setMoveTarget}\n                    />\n\n                    {this.state.selectedPath !== \"\" && (\n                        <DialogContent className={classes.contentFix}>\n                            <DialogContentText>\n                                移动至{\" \"}\n                                <strong>{this.state.selectedPathName}</strong>\n                            </DialogContentText>\n                        </DialogContent>\n                    )}\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitMove}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.selectedPath === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                确定\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.props.modalsStatus.remove}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">删除对象</DialogTitle>\n\n                    <DialogContent>\n                        <DialogContentText>\n                            确定要删除\n                            {this.props.selected.length === 1 && (\n                                <strong> {this.props.selected[0].name} </strong>\n                            )}\n                            {this.props.selected.length > 1 && (\n                                <span>\n                                    这{this.props.selected.length}个对象\n                                </span>\n                            )}\n                            吗？\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitRemove}\n                                color=\"primary\"\n                                disabled={this.props.modalsLoading}\n                            >\n                                确定\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n\n                <CreatShare\n                    open={this.props.modalsStatus.share}\n                    onClose={this.onClose}\n                    modalsLoading={this.props.modalsLoading}\n                    setModalsLoading={this.props.setModalsLoading}\n                    selected={this.props.selected}\n                />\n\n                <Dialog\n                    open={this.props.modalsStatus.music}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">音频播放</DialogTitle>\n\n                    <DialogContent>\n                        <DialogContentText>\n                            {this.props.selected.length !== 0 && (\n                                <audio\n                                    controls\n                                    src={\n                                        pathHelper.isSharePage(\n                                            this.props.location.pathname\n                                        )\n                                            ? baseURL +\n                                              \"/share/preview/\" +\n                                              this.props.selected[0].key +\n                                              (this.props.selected[0].key\n                                                  ? \"?path=\" +\n                                                    encodeURIComponent(\n                                                        this.props.selected[0]\n                                                            .path === \"/\"\n                                                            ? this.props\n                                                                  .selected[0]\n                                                                  .path +\n                                                                  this.props\n                                                                      .selected[0]\n                                                                      .name\n                                                            : this.props\n                                                                  .selected[0]\n                                                                  .path +\n                                                                  \"/\" +\n                                                                  this.props\n                                                                      .selected[0]\n                                                                      .name\n                                                    )\n                                                  : \"\")\n                                            : baseURL +\n                                              \"/file/preview/\" +\n                                              this.props.selected[0].id\n                                    }\n                                />\n                            )}\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>关闭</Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.props.modalsStatus.remoteDownload}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                    fullWidth\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        新建离线下载任务\n                    </DialogTitle>\n\n                    <DialogContent>\n                        <DialogContentText>\n                            <TextField\n                                label=\"文件地址\"\n                                autoFocus\n                                fullWidth\n                                id=\"downloadURL\"\n                                onChange={this.handleInputChange}\n                                placeholder=\"输入文件下载地址，支持 HTTP(s)/FTP/磁力链\"\n                            />\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.onClose}>关闭</Button>\n                        <Button\n                            onClick={this.remoteDownloadNext}\n                            color=\"primary\"\n                            disabled={\n                                this.props.modalsLoading ||\n                                this.state.downloadURL === \"\"\n                            }\n                        >\n                            下一步\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.remoteDownloadPathSelect}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        选择存储位置\n                    </DialogTitle>\n                    <PathSelector\n                        presentPath={this.props.path}\n                        selected={this.props.selected}\n                        onSelect={this.setMoveTarget}\n                    />\n\n                    {this.state.selectedPath !== \"\" && (\n                        <DialogContent className={classes.contentFix}>\n                            <DialogContentText>\n                                下载至{\" \"}\n                                <strong>{this.state.selectedPathName}</strong>\n                            </DialogContentText>\n                        </DialogContent>\n                    )}\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitDownload}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.selectedPath === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                创建任务\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.props.modalsStatus.torrentDownload}\n                    onClose={this.onClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">\n                        选择存储位置\n                    </DialogTitle>\n                    <PathSelector\n                        presentPath={this.props.path}\n                        selected={this.props.selected}\n                        onSelect={this.setMoveTarget}\n                    />\n\n                    {this.state.selectedPath !== \"\" && (\n                        <DialogContent className={classes.contentFix}>\n                            <DialogContentText>\n                                下载至{\" \"}\n                                <strong>{this.state.selectedPathName}</strong>\n                            </DialogContentText>\n                        </DialogContent>\n                    )}\n                    <DialogActions>\n                        <Button onClick={this.onClose}>取消</Button>\n                        <div className={classes.wrapper}>\n                            <Button\n                                onClick={this.submitTorrentDownload}\n                                color=\"primary\"\n                                disabled={\n                                    this.state.selectedPath === \"\" ||\n                                    this.props.modalsLoading\n                                }\n                            >\n                                创建任务\n                                {this.props.modalsLoading && (\n                                    <CircularProgress\n                                        size={24}\n                                        className={classes.buttonProgress}\n                                    />\n                                )}\n                            </Button>\n                        </div>\n                    </DialogActions>\n                </Dialog>\n\n                <DecompressDialog\n                    open={this.props.modalsStatus.decompress}\n                    onClose={this.onClose}\n                    presentPath={this.props.path}\n                    selected={this.props.selected}\n                    modalsLoading={this.props.modalsLoading}\n                />\n                <CompressDialog\n                    open={this.props.modalsStatus.compress}\n                    onClose={this.onClose}\n                    presentPath={this.props.path}\n                    selected={this.props.selected}\n                    modalsLoading={this.props.modalsLoading}\n                />\n            </div>\n        );\n    }\n}\n\nModalsCompoment.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst Modals = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ModalsCompoment)));\n\nexport default Modals;\n","const Auth = {\n    isAuthenticated: false,\n    authenticate(cb: any) {\n        Auth.SetUser(cb);\n        Auth.isAuthenticated = true;\n    },\n    GetUser() {\n        return JSON.parse(localStorage.getItem(\"user\") || \"null\");\n    },\n    SetUser(newUser: any) {\n        localStorage.setItem(\"user\", JSON.stringify(newUser));\n    },\n    Check(): boolean {\n        if (Auth.isAuthenticated) {\n            return true;\n        }\n        if (localStorage.getItem(\"user\") !== null) {\n            return !Auth.GetUser().anonymous;\n        }\n        return false;\n    },\n    signout() {\n        Auth.isAuthenticated = false;\n        const oldUser = Auth.GetUser();\n        oldUser.id = 0;\n        localStorage.setItem(\"user\", JSON.stringify(oldUser));\n    },\n    SetPreference(key: string, value: any) {\n        let preference = JSON.parse(\n            localStorage.getItem(\"user_preference\") || \"{}\"\n        );\n        preference = preference == null ? {} : preference;\n        preference[key] = value;\n        localStorage.setItem(\"user_preference\", JSON.stringify(preference));\n    },\n    GetPreference(key: string): any | null {\n        const preference = JSON.parse(\n            localStorage.getItem(\"user_preference\") || \"{}\"\n        );\n        if (preference && preference[key]) {\n            return preference[key];\n        }\n        return null;\n    }\n};\n\nexport default Auth;\n","export const sizeToString = bytes => {\n    if (bytes === 0 || bytes === \"0\") return \"0 B\";\n    const k = 1024;\n    const sizes = [\"B\", \"KB\", \"MB\", \"GB\", \"TB\", \"PB\", \"EB\", \"ZB\", \"YB\"];\n    const i = Math.floor(Math.log(bytes) / Math.log(k));\n    return (bytes / Math.pow(k, i)).toFixed(1) + \" \" + sizes[i];\n};\n\nexport const fixUrlHash = path => {\n    return path;\n};\n\nexport const setCookie = (name, value, days) => {\n    if (days) {\n        const date = new Date();\n        date.setTime(date.getTime() + days * 24 * 60 * 60 * 1000);\n    }\n    document.cookie = name + \"=\" + (value || \"\") + \"; path=/\";\n};\n\nexport const setGetParameter = (paramName, paramValue) => {\n    let url = window.location.href;\n\n    if (url.indexOf(paramName + \"=\") >= 0) {\n        const prefix = url.substring(0, url.indexOf(paramName));\n        let suffix = url.substring(url.indexOf(paramName));\n        suffix = suffix.substring(suffix.indexOf(\"=\") + 1);\n        suffix =\n            suffix.indexOf(\"&\") >= 0\n                ? suffix.substring(suffix.indexOf(\"&\"))\n                : \"\";\n        url = prefix + paramName + \"=\" + paramValue + suffix;\n    } else {\n        if (url.indexOf(\"?\") < 0) url += \"?\" + paramName + \"=\" + paramValue;\n        else url += \"&\" + paramName + \"=\" + paramValue;\n    }\n    if (url === window.location.href) {\n        return;\n    }\n    window.history.pushState(null, null, url);\n};\n\nexport const allowSharePreview = () => {\n    if (!window.isSharePage) {\n        return true;\n    }\n    if (window.isSharePage) {\n        if (window.shareInfo.allowPreview) {\n            return true;\n        }\n        if (window.userInfo.uid === -1) {\n            return false;\n        }\n        return true;\n    }\n};\n\nexport const checkGetParameters = field => {\n    const url = window.location.href;\n    if (url.indexOf(\"?\" + field + \"=\") !== -1) return true;\n    else if (url.indexOf(\"&\" + field + \"=\") !== -1) return true;\n    return false;\n};\n\nexport const changeThemeColor = color => {\n    const metaThemeColor = window.document.querySelector(\n        \"meta[name=theme-color]\"\n    );\n    metaThemeColor.setAttribute(\"content\", color);\n};\n\nexport const decode = c => {\n    let e = c.height,\n        a = c.width,\n        b = document.createElement(\"canvas\");\n    b.height = e;\n    b.width = a;\n    b = b.getContext(\"2d\");\n    b.drawImage(c, 0, 0);\n    c = b.getImageData(0, 0, a, e);\n    b = [];\n    for (let d = 0; d < a * e * 4; d += 4)\n        0 !== (d + 4) % (4 * a) &&\n            [].push.apply(b, [].slice.call(c.data, d, d + 3));\n    c = e = 0;\n    for (\n        a = \"\";\n        c < b.length &&\n        (16 >= c ||\n            (0 === b[c] % 2 ? (e++, (a += \"1\")) : ((e = 0), (a += \"0\")),\n            17 !== e));\n        c++\n    );\n    a = a.slice(0, -16);\n    a = a.replace(/[\\s]/g, \"\").replace(/(\\d{16})(?=\\d)/g, \"$1 \");\n    e = \"\";\n    a = a.split(\" \");\n    for (c = 0; c < a.length; c++) {\n        b = a[c];\n        if (16 === b.length) {\n            b = parseInt(b, 2);\n            e += String.fromCharCode(b);\n        }\n    }\n    return e;\n};\nexport function bufferDecode(value) {\n    return Uint8Array.from(atob(value), c => c.charCodeAt(0));\n}\n\n// ArrayBuffer to URLBase64\nexport function bufferEncode(value) {\n    return btoa(String.fromCharCode.apply(null, new Uint8Array(value)))\n        .replace(/\\+/g, \"-\")\n        .replace(/\\//g, \"_\")\n        .replace(/=/g, \"\");\n}\n\nexport function pathBack(path) {\n    const folders =\n        path !== null\n            ? path.substr(1).split(\"/\")\n            : this.props.path.substr(1).split(\"/\");\n    return \"/\" + folders.slice(0, folders.length - 1).join(\"/\");\n}\n\nexport function filePath(file) {\n    return file.path === \"/\"\n        ? file.path + file.name\n        : file.path + \"/\" + file.name;\n}\n\nexport function hex2bin(hex) {\n    return parseInt(hex, 16)\n        .toString(2)\n        .padStart(8, \"0\");\n}\n\nexport function pathJoin(parts, sep) {\n    const separator = sep || \"/\";\n    parts = parts.map((part, index) => {\n        if (index) {\n            part = part.replace(new RegExp(\"^\" + separator), \"\");\n        }\n        if (index !== parts.length - 1) {\n            part = part.replace(new RegExp(separator + \"$\"), \"\");\n        }\n        return part;\n    });\n    return parts.join(separator);\n}\n\nexport function basename(path) {\n    const pathList = path.split(\"/\");\n    pathList.pop();\n    return pathList.join(\"/\") === \"\" ? \"/\" : pathList.join(\"/\");\n}\n\nexport function transformTime(timestamp = +new Date()) {\n    if (timestamp) {\n        const time = new Date(timestamp);\n        const y = time.getFullYear(); //getFullYear方法以四位数字返回年份\n        const M = time.getMonth() + 1; // getMonth方法从 Date 对象返回月份 (0 ~ 11)，返回结果需要手动加一\n        const d = time.getDate(); // getDate方法从 Date 对象返回一个月中的某一天 (1 ~ 31)\n        const h = time.getHours(); // getHours方法返回 Date 对象的小时 (0 ~ 23)\n        const m = time.getMinutes(); // getMinutes方法返回 Date 对象的分钟 (0 ~ 59)\n        const s = time.getSeconds(); // getSeconds方法返回 Date 对象的秒数 (0 ~ 59)\n        return y + \"-\" + M + \"-\" + d + \" \" + h + \":\" + m + \":\" + s;\n    } else {\n        return \"\";\n    }\n}\n\nexport function randomStr(length) {\n    let result = \"\";\n    const characters =\n        \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n    const charactersLength = characters.length;\n    for (let i = 0; i < length; i++) {\n        result += characters.charAt(\n            Math.floor(Math.random() * charactersLength)\n        );\n    }\n    return result;\n}\n\nexport function getNumber(base, conditions) {\n    conditions.forEach(v => {\n        if (v) {\n            base++;\n        }\n    });\n    return base;\n}\n\nexport const isMac = () => {\n    return navigator.platform.toUpperCase().indexOf(\"MAC\") >= 0;\n};\n\nexport function vhCheck() {\n    const vh = window.innerHeight;\n    document.documentElement.style.setProperty(\"--vh\", `${vh}px`);\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport Editor from \"for-editor\";\nimport SaveButton from \"../Dial/Save\";\nimport pathHelper from \"../../utils/page\";\nimport TextLoading from \"../Placeholder/TextLoading\";\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: 50\n    },\n    player: {\n        borderRadius: \"4px\"\n    },\n    root: {\n        backgroundColor: \"white\",\n        borderRadius: \"8px\"\n    },\n    \"@global\": {\n        \".for-toolbar\": {\n            overflowX: \"auto!important\"\n        }\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function TextViewer() {\n    const [content, setContent] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n    const math = useRouteMatch();\n    const $vm = React.createRef();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n\n    const dispatch = useDispatch();\n    const SetSubTitle = useCallback(title => dispatch(changeSubTitle(title)), [\n        dispatch\n    ]);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (!pathHelper.isSharePage(location.pathname)) {\n            const path = query.get(\"p\").split(\"/\");\n            SetSubTitle(path[path.length - 1]);\n        } else {\n            SetSubTitle(query.get(\"name\"));\n        }\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    useEffect(() => {\n        let requestURL = \"/file/content/\" + query.get(\"id\");\n        if (pathHelper.isSharePage(location.pathname)) {\n            requestURL = \"/share/content/\" + id;\n            if (query.get(\"share_path\") !== \"\") {\n                requestURL +=\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\n            }\n        }\n\n        setLoading(true);\n        API.get(requestURL, { responseType: \"arraybuffer\" })\n            .then(response => {\n                const buffer = new Buffer(response.rawData, \"binary\");\n                const textdata = buffer.toString(); // for string\n                setContent(textdata);\n            })\n            .catch(error => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法读取文件内容，\" + error.message,\n                    \"error\"\n                );\n            })\n            .then(() => {\n                setLoading(false);\n            });\n        // eslint-disable-next-line\n    }, [math.params[0]]);\n\n    const toBase64 = file =>\n        new Promise((resolve, reject) => {\n            const reader = new FileReader();\n            reader.readAsDataURL(file);\n            reader.onload = () => resolve(reader.result);\n            reader.onerror = error => reject(error);\n        });\n\n    const save = () => {\n        setStatus(\"loading\");\n        API.put(\"/file/update/\" + query.get(\"id\"), content)\n            .then(() => {\n                setStatus(\"success\");\n                setTimeout(() => setStatus(\"\"), 2000);\n            })\n            .catch(error => {\n                setStatus(\"\");\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const addImg = async $file => {\n        $vm.current.$img2Url($file.name, await toBase64($file));\n        console.log($file);\n    };\n\n    const classes = useStyles();\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.root} elevation={1}>\n                {loading && <TextLoading />}\n                {!loading && (\n                    <Editor\n                        ref={$vm}\n                        value={content}\n                        onSave={() => save()}\n                        addImg={$file => addImg($file)}\n                        onChange={value => setContent(value)}\n                        toolbar={{\n                            h1: true, // h1\n                            h2: true, // h2\n                            h3: true, // h3\n                            h4: true, // h4\n                            img: true, // 图片\n                            link: true, // 链接\n                            code: true, // 代码块\n                            preview: true, // 预览\n                            expand: true, // 全屏\n                            /* v0.0.9 */\n                            undo: true, // 撤销\n                            redo: true, // 重做\n                            save: false, // 保存\n                            /* v0.2.3 */\n                            subfield: true // 单双栏模式\n                        }}\n                    />\n                )}\n            </Paper>\n            {!pathHelper.isSharePage(location.pathname) && (\n                <SaveButton onClick={save} status={status} />\n            )}\n        </div>\n    );\n}\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport { Paper, useTheme } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport pathHelper from \"../../utils/page\";\nimport SaveButton from \"../Dial/Save\";\nimport { codePreviewSuffix } from \"../../config\";\nimport TextLoading from \"../Placeholder/TextLoading\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Divider from \"@material-ui/core/Divider\";\nconst MonacoEditor = React.lazy(() =>\n    import(/* webpackChunkName: \"codeEditor\" */ \"react-monaco-editor\")\n);\n\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: 50\n    },\n    editor: {\n        borderRadius: \"4px\"\n    },\n    \"@global\": {\n        \".overflow-guard\": {\n            borderRadius: \"4px!important\"\n        }\n    },\n    formControl: {\n        margin: \"8px 16px 8px 16px\"\n    },\n    toobar: {\n        textAlign: \"right\"\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function CodeViewer() {\n    const [content, setContent] = useState(\"\");\n    const [status, setStatus] = useState(\"\");\n    const [loading, setLoading] = useState(true);\n    const [suffix, setSuffix] = useState(\"javascript\");\n\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    const theme = useTheme();\n\n    const dispatch = useDispatch();\n    const SetSubTitle = useCallback(title => dispatch(changeSubTitle(title)), [\n        dispatch\n    ]);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (!pathHelper.isSharePage(location.pathname)) {\n            const path = query.get(\"p\").split(\"/\");\n            const extension = query.get(\"p\").split(\".\");\n            setSuffix(codePreviewSuffix[extension.pop()]);\n            SetSubTitle(path[path.length - 1]);\n        } else {\n            const extension = query.get(\"name\").split(\".\");\n            setSuffix(codePreviewSuffix[extension.pop()]);\n            SetSubTitle(query.get(\"name\"));\n        }\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    useEffect(() => {\n        let requestURL = \"/file/content/\" + query.get(\"id\");\n        if (pathHelper.isSharePage(location.pathname)) {\n            requestURL = \"/share/content/\" + id;\n            if (query.get(\"share_path\") !== \"\") {\n                requestURL +=\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\n            }\n        }\n\n        setLoading(true);\n        API.get(requestURL, { responseType: \"arraybuffer\" })\n            .then(response => {\n                const buffer = new Buffer(response.rawData, \"binary\");\n                const textdata = buffer.toString(); // for string\n                setContent(textdata);\n            })\n            .catch(error => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法读取文件内容，\" + error.message,\n                    \"error\"\n                );\n            })\n            .then(() => {\n                setLoading(false);\n            });\n        // eslint-disable-next-line\n    }, [math.params[0]]);\n\n    const save = () => {\n        setStatus(\"loading\");\n        API.put(\"/file/update/\" + query.get(\"id\"), content)\n            .then(() => {\n                setStatus(\"success\");\n                setTimeout(() => setStatus(\"\"), 2000);\n            })\n            .catch(error => {\n                setStatus(\"\");\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const classes = useStyles();\n    const isSharePage = pathHelper.isSharePage(location.pathname);\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.root} elevation={1}>\n                <div className={classes.toobar}>\n                    <FormControl className={classes.formControl}>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={suffix}\n                            onChange={e => setSuffix(e.target.value)}\n                        >\n                            {Array.from(\n                                new Set(\n                                    Object.keys(codePreviewSuffix).map(k => {\n                                        return codePreviewSuffix[k];\n                                    })\n                                )\n                            ).map((extension, index) => (\n                                <MenuItem value={extension} key={index}>\n                                    {extension}\n                                </MenuItem>\n                            ))}\n                        </Select>\n                    </FormControl>\n                </div>\n                <Divider />\n                {loading && <TextLoading />}\n                {!loading && (\n                    <Suspense fallback={<TextLoading />}>\n                        <MonacoEditor\n                            height=\"600\"\n                            language={suffix}\n                            theme={\n                                theme.palette.type === \"dark\" ? \"vs-dark\" : \"vs\"\n                            }\n                            value={content}\n                            options={{\n                                readOnly: isSharePage,\n                                extraEditorClassName: classes.editor\n                            }}\n                            onChange={value => setContent(value)}\n                        />\n                    </Suspense>\n                )}\n            </Paper>\n            {!isSharePage && <SaveButton onClick={save} status={status} />}\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {} from \"../../actions\";\nimport classNames from \"classnames\";\nimport ErrorIcon from \"@material-ui/icons/Error\";\nimport InfoIcon from \"@material-ui/icons/Info\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport CheckCircleIcon from \"@material-ui/icons/CheckCircle\";\nimport WarningIcon from \"@material-ui/icons/Warning\";\n\nimport { green, amber } from \"@material-ui/core/colors\";\n\nimport {\n    withStyles,\n    SnackbarContent,\n    Snackbar,\n    IconButton\n} from \"@material-ui/core\";\n\nconst mapStateToProps = state => {\n    return {\n        snackbar: state.viewUpdate.snackbar\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nconst variantIcon = {\n    success: CheckCircleIcon,\n    warning: WarningIcon,\n    error: ErrorIcon,\n    info: InfoIcon\n};\n\nconst styles1 = theme => ({\n    success: {\n        backgroundColor: green[600]\n    },\n    error: {\n        backgroundColor: theme.palette.error.dark\n    },\n    info: {\n        backgroundColor: theme.palette.primary.dark\n    },\n    warning: {\n        backgroundColor: amber[700]\n    },\n    icon: {\n        fontSize: 20\n    },\n    iconVariant: {\n        opacity: 0.9,\n        marginRight: theme.spacing(1)\n    },\n    message: {\n        display: \"flex\",\n        alignItems: \"center\"\n    }\n});\n\nfunction MySnackbarContent(props) {\n    const { classes, className, message, onClose, variant, ...other } = props;\n    const Icon = variantIcon[variant];\n\n    return (\n        <SnackbarContent\n            className={classNames(classes[variant], className)}\n            aria-describedby=\"client-snackbar\"\n            message={\n                <span id=\"client-snackbar\" className={classes.message}>\n                    <Icon\n                        className={classNames(\n                            classes.icon,\n                            classes.iconVariant\n                        )}\n                    />\n                    {message}\n                </span>\n            }\n            action={[\n                <IconButton\n                    key=\"close\"\n                    aria-label=\"Close\"\n                    color=\"inherit\"\n                    className={classes.close}\n                    onClick={onClose}\n                >\n                    <CloseIcon className={classes.icon} />\n                </IconButton>\n            ]}\n            {...other}\n        />\n    );\n}\nMySnackbarContent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    className: PropTypes.string,\n    message: PropTypes.node,\n    onClose: PropTypes.func,\n    variant: PropTypes.oneOf([\"success\", \"warning\", \"error\", \"info\"]).isRequired\n};\n\nconst MySnackbarContentWrapper = withStyles(styles1)(MySnackbarContent);\nconst styles = theme => ({\n    margin: {\n        margin: theme.spacing(1)\n    }\n});\nclass SnackbarCompoment extends Component {\n    state = {\n        open: false\n    };\n\n    UNSAFE_componentWillReceiveProps = nextProps => {\n        if (nextProps.snackbar.toggle !== this.props.snackbar.toggle) {\n            this.setState({ open: true });\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    render() {\n        return (\n            <Snackbar\n                anchorOrigin={{\n                    vertical: this.props.snackbar.vertical,\n                    horizontal: this.props.snackbar.horizontal\n                }}\n                open={this.state.open}\n                autoHideDuration={6000}\n                onClose={this.handleClose}\n            >\n                <MySnackbarContentWrapper\n                    onClose={this.handleClose}\n                    variant={this.props.snackbar.color}\n                    message={this.props.snackbar.msg}\n                />\n            </Snackbar>\n        );\n    }\n}\n\nconst AlertBar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(SnackbarCompoment));\n\nexport default AlertBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {\n    LogoutVariant,\n    HomeAccount,\n    DesktopMacDashboard,\n    AccountArrowRight,\n    AccountPlus\n} from \"mdi-material-ui\";\nimport {\n    setSessionStatus,\n    setUserPopover,\n    toggleSnackbar\n} from \"../../actions\";\nimport { withRouter } from \"react-router-dom\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    withStyles,\n    Avatar,\n    Popover,\n    Typography,\n    Chip,\n    ListItemIcon,\n    MenuItem,\n    Divider\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport pathHelper from \"../../utils/page\";\n\nconst mapStateToProps = state => {\n    return {\n        anchorEl: state.viewUpdate.userPopoverAnchorEl\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setUserPopover: anchor => {\n            dispatch(setUserPopover(anchor));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        setSessionStatus: status => {\n            dispatch(setSessionStatus(status));\n        }\n    };\n};\nconst styles = () => ({\n    avatar: {\n        width: \"30px\",\n        height: \"30px\"\n    },\n    header: {\n        display: \"flex\",\n        padding: \"20px 20px 20px 20px\"\n    },\n    largeAvatar: {\n        height: \"90px\",\n        width: \"90px\"\n    },\n    info: {\n        marginLeft: \"10px\",\n        width: \"139px\"\n    },\n    badge: {\n        marginTop: \"10px\"\n    },\n    visitorMenu: {\n        width: 200\n    }\n});\n\nclass UserAvatarPopoverCompoment extends Component {\n    handleClose = () => {\n        this.props.setUserPopover(null);\n    };\n\n    openURL = url => {\n        window.location.href = url;\n    };\n\n    sigOut = () => {\n        API.delete(\"/user/session/\")\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"您已退出登录\",\n                    \"success\"\n                );\n                Auth.signout();\n                window.location.reload();\n                this.props.setSessionStatus(false);\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\"\n                );\n            })\n            .then(() => {\n                this.handleClose();\n            });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser();\n        const isAdminPage = pathHelper.isAdminPage(\n            this.props.location.pathname\n        );\n\n        return (\n            <Popover\n                open={this.props.anchorEl !== null}\n                onClose={this.handleClose}\n                anchorEl={this.props.anchorEl}\n                anchorOrigin={{\n                    vertical: \"bottom\",\n                    horizontal: \"right\"\n                }}\n                transformOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"right\"\n                }}\n            >\n                {!Auth.Check() && (\n                    <div className={classes.visitorMenu}>\n                        <Divider />\n                        <MenuItem\n                            onClick={() => this.props.history.push(\"/login\")}\n                        >\n                            <ListItemIcon>\n                                <AccountArrowRight />\n                            </ListItemIcon>\n                            登录\n                        </MenuItem>\n                        <MenuItem\n                            onClick={() => this.props.history.push(\"/signup\")}\n                        >\n                            <ListItemIcon>\n                                <AccountPlus />\n                            </ListItemIcon>\n                            注册\n                        </MenuItem>\n                    </div>\n                )}\n                {Auth.Check() && (\n                    <div>\n                        <div className={classes.header}>\n                            <div className={classes.largeAvatarContainer}>\n                                <Avatar\n                                    className={classes.largeAvatar}\n                                    src={\n                                        \"/api/v3/user/avatar/\" + user.id + \"/l\"\n                                    }\n                                />\n                            </div>\n                            <div className={classes.info}>\n                                <Typography noWrap>{user.nickname}</Typography>\n                                <Typography\n                                    color=\"textSecondary\"\n                                    style={{\n                                        fontSize: \"0.875rem\"\n                                    }}\n                                    noWrap\n                                >\n                                    {user.user_name}\n                                </Typography>\n                                <Chip\n                                    className={classes.badge}\n                                    color={\n                                        user.group.id === 1\n                                            ? \"secondary\"\n                                            : \"default\"\n                                    }\n                                    label={user.group.name}\n                                />\n                            </div>\n                        </div>\n                        <div>\n                            <Divider />\n                            {!isAdminPage && (\n                                <MenuItem\n                                    style={{\n                                        padding: \" 11px 16px 11px 16px\"\n                                    }}\n                                    onClick={() => {\n                                        this.handleClose();\n                                        this.props.history.push(\n                                            \"/profile/\" + user.id\n                                        );\n                                    }}\n                                >\n                                    <ListItemIcon>\n                                        <HomeAccount />\n                                    </ListItemIcon>\n                                    个人主页\n                                </MenuItem>\n                            )}\n                            {user.group.id === 1 && (\n                                <MenuItem\n                                    style={{\n                                        padding: \" 11px 16px 11px 16px\"\n                                    }}\n                                    onClick={() => {\n                                        this.handleClose();\n                                        this.props.history.push(\"/admin/home\");\n                                    }}\n                                >\n                                    <ListItemIcon>\n                                        <DesktopMacDashboard />\n                                    </ListItemIcon>\n                                    管理面板\n                                </MenuItem>\n                            )}\n\n                            <MenuItem\n                                style={{\n                                    padding: \" 11px 16px 11px 16px\"\n                                }}\n                                onClick={this.sigOut}\n                            >\n                                <ListItemIcon>\n                                    <LogoutVariant />\n                                </ListItemIcon>\n                                退出登录\n                            </MenuItem>\n                        </div>\n                    </div>\n                )}\n            </Popover>\n        );\n    }\n}\n\nUserAvatarPopoverCompoment.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst UserAvatarPopover = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(UserAvatarPopoverCompoment)));\n\nexport default UserAvatarPopover;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport SettingIcon from \"@material-ui/icons/Settings\";\nimport UserAvatarPopover from \"./UserAvatarPopover\";\nimport { AccountCircle } from \"mdi-material-ui\";\nimport { setUserPopover } from \"../../actions\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    withStyles,\n    Grow,\n    Avatar,\n    IconButton,\n    Tooltip\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport pathHelper from \"../../utils/page\";\nimport DarkModeSwitcher from \"./DarkModeSwitcher\";\nimport { Home } from \"@material-ui/icons\";\n\nconst mapStateToProps = state => {\n    return {\n        selected: state.explorer.selected,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        isLogin: state.viewUpdate.isLogin\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setUserPopover: anchor => {\n            dispatch(setUserPopover(anchor));\n        }\n    };\n};\n\nconst styles = theme => ({\n    mobileHidden: {\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\"\n        },\n        whiteSpace: \"nowrap\"\n    },\n    avatar: {\n        width: \"30px\",\n        height: \"30px\"\n    },\n    header: {\n        display: \"flex\",\n        padding: \"20px 20px 20px 20px\"\n    },\n    largeAvatar: {\n        height: \"90px\",\n        width: \"90px\"\n    },\n    info: {\n        marginLeft: \"10px\",\n        width: \"139px\"\n    },\n    badge: {\n        marginTop: \"10px\"\n    },\n    visitorMenu: {\n        width: 200\n    }\n});\n\nclass UserAvatarCompoment extends Component {\n    state = {\n        anchorEl: null\n    };\n\n    showUserInfo = e => {\n        this.props.setUserPopover(e.currentTarget);\n    };\n\n    handleClose = () => {\n        this.setState({\n            anchorEl: null\n        });\n    };\n\n    openURL = url => {\n        window.location.href = url;\n    };\n\n    returnHome = () => {\n        window.location.href = \"/home\";\n    };\n\n    render() {\n        const { classes } = this.props;\n        const loginCheck = Auth.Check(this.props.isLogin);\n        const user = Auth.GetUser(this.props.isLogin);\n        const isAdminPage = pathHelper.isAdminPage(\n            this.props.location.pathname\n        );\n\n        return (\n            <div className={classes.mobileHidden}>\n                <Grow\n                    in={\n                        this.props.selected.length <= 1 &&\n                        !(!this.props.isMultiple && this.props.withFile)\n                    }\n                >\n                    <div>\n                        {!isAdminPage && (\n                            <>\n                                <DarkModeSwitcher position=\"top\" />\n                                {loginCheck && (\n                                    <>\n                                        <Tooltip\n                                            title={\"设置\"}\n                                            placement=\"bottom\"\n                                        >\n                                            <IconButton\n                                                onClick={() =>\n                                                    this.props.history.push(\n                                                        \"/setting?\"\n                                                    )\n                                                }\n                                                color=\"inherit\"\n                                            >\n                                                <SettingIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                    </>\n                                )}\n                            </>\n                        )}\n                        {isAdminPage && (\n                            <Tooltip title={\"返回主页\"} placement=\"bottom\">\n                                <IconButton\n                                    color=\"inherit\"\n                                    onClick={this.returnHome}\n                                >\n                                    <Home />\n                                </IconButton>\n                            </Tooltip>\n                        )}\n                        <IconButton color=\"inherit\" onClick={this.showUserInfo}>\n                            {!loginCheck && <AccountCircle />}\n                            {loginCheck && (\n                                <Avatar\n                                    src={\n                                        \"/api/v3/user/avatar/\" + user.id + \"/s\"\n                                    }\n                                    className={classes.avatar}\n                                />\n                            )}\n                        </IconButton>{\" \"}\n                    </div>\n                </Grow>\n                <UserAvatarPopover />\n            </div>\n        );\n    }\n}\n\nUserAvatarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst UserAvatar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(UserAvatarCompoment)));\n\nexport default UserAvatar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { connect } from \"react-redux\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport BackIcon from \"@material-ui/icons/ArrowBack\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport OpenFolderIcon from \"@material-ui/icons/FolderOpen\";\nimport RenameIcon from \"@material-ui/icons/BorderColor\";\nimport MoveIcon from \"@material-ui/icons/Input\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport { isPreviewable } from \"../../config\";\nimport {\n    drawerToggleAction,\n    setSelectedTarget,\n    navigateTo,\n    openCreateFolderDialog,\n    changeContextMenu,\n    searchMyFile,\n    saveFile,\n    openMusicDialog,\n    showImgPreivew,\n    toggleSnackbar,\n    openMoveDialog,\n    openRemoveDialog,\n    openShareDialog,\n    openRenameDialog,\n    openLoadingDialog,\n    setSessionStatus\n} from \"../../actions\";\nimport {\n    allowSharePreview,\n    checkGetParameters,\n    changeThemeColor\n} from \"../../utils\";\nimport Uploader from \"../Upload/Uploader.js\";\nimport { sizeToString, vhCheck } from \"../../utils\";\nimport pathHelper from \"../../utils/page\";\nimport SezrchBar from \"./SearchBar\";\nimport StorageBar from \"./StorageBar\";\nimport UserAvatar from \"./UserAvatar\";\nimport UserInfo from \"./UserInfo\";\nimport { AccountArrowRight, AccountPlus, LogoutVariant } from \"mdi-material-ui\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n    AppBar,\n    Toolbar,\n    Typography,\n    withStyles,\n    withTheme,\n    Drawer,\n    SwipeableDrawer,\n    IconButton,\n    Hidden,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    List,\n    Grow,\n    Tooltip\n} from \"@material-ui/core\";\nimport Auth from \"../../middleware/Auth\";\nimport API from \"../../middleware/Api\";\nimport FileTag from \"./FileTags\";\nimport { Assignment, Devices, Settings } from \"@material-ui/icons\";\nimport Divider from \"@material-ui/core/Divider\";\n\nvhCheck();\nconst drawerWidth = 240;\nconst drawerWidthMobile = 270;\n\nconst mapStateToProps = state => {\n    return {\n        desktopOpen: state.viewUpdate.open,\n        selected: state.explorer.selected,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        path: state.navigator.path,\n        keywords: state.explorer.keywords,\n        title: state.siteConfig.title,\n        subTitle: state.viewUpdate.subTitle,\n        loadUploader: state.viewUpdate.loadUploader,\n        isLogin: state.viewUpdate.isLogin\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleDesktopToggle: open => {\n            dispatch(drawerToggleAction(open));\n        },\n        setSelectedTarget: targets => {\n            dispatch(setSelectedTarget(targets));\n        },\n        navigateTo: path => {\n            dispatch(navigateTo(path));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        changeContextMenu: (type, open) => {\n            dispatch(changeContextMenu(type, open));\n        },\n        searchMyFile: keywords => {\n            dispatch(searchMyFile(keywords));\n        },\n        saveFile: () => {\n            dispatch(saveFile());\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        showImgPreivew: first => {\n            dispatch(showImgPreivew(first));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openRenameDialog: () => {\n            dispatch(openRenameDialog());\n        },\n        openMoveDialog: () => {\n            dispatch(openMoveDialog());\n        },\n        openRemoveDialog: () => {\n            dispatch(openRemoveDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        openLoadingDialog: text => {\n            dispatch(openLoadingDialog(text));\n        },\n        setSessionStatus: () => {\n            dispatch(setSessionStatus());\n        }\n    };\n};\n\nconst styles = theme => ({\n    appBar: {\n        marginLeft: drawerWidth,\n        [theme.breakpoints.down(\"xs\")]: {\n            marginLeft: drawerWidthMobile\n        },\n        zIndex: theme.zIndex.drawer + 1,\n        transition: \" background-color 250ms\"\n    },\n\n    drawer: {\n        width: 0,\n        flexShrink: 0\n    },\n    drawerDesktop: {\n        width: drawerWidth,\n        flexShrink: 0\n    },\n    icon: {\n        marginRight: theme.spacing(2)\n    },\n    menuButton: {\n        marginRight: 20,\n        [theme.breakpoints.up(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    menuButtonDesktop: {\n        marginRight: 20,\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    menuIcon: {\n        marginRight: 20\n    },\n    toolbar: theme.mixins.toolbar,\n    drawerPaper: {\n        width: drawerWidthMobile\n    },\n    upDrawer: {\n        overflowX: \"hidden\"\n    },\n    drawerOpen: {\n        width: drawerWidth,\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen\n        })\n    },\n    drawerClose: {\n        transition: theme.transitions.create(\"width\", {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen\n        }),\n        overflowX: \"hidden\",\n        width: 0\n    },\n    content: {\n        flexGrow: 1,\n        padding: theme.spacing(3)\n    },\n    grow: {\n        flexGrow: 1\n    },\n    badge: {\n        top: 1,\n        right: -15\n    },\n    nested: {\n        paddingLeft: theme.spacing(4)\n    },\n    sectionForFile: {\n        display: \"flex\"\n    },\n    extendedIcon: {\n        marginRight: theme.spacing(1)\n    },\n    addButton: {\n        marginLeft: \"40px\",\n        marginTop: \"25px\",\n        marginBottom: \"15px\"\n    },\n    fabButton: {\n        borderRadius: \"100px\"\n    },\n    badgeFix: {\n        right: \"10px\"\n    },\n    iconFix: {\n        marginLeft: \"16px\"\n    },\n    dividerFix: {\n        marginTop: \"8px\"\n    },\n    folderShareIcon: {\n        verticalAlign: \"sub\",\n        marginRight: \"5px\"\n    },\n    shareInfoContainer: {\n        display: \"flex\",\n        marginTop: \"15px\",\n        marginBottom: \"20px\",\n        marginLeft: \"28px\",\n        textDecoration: \"none\"\n    },\n    shareAvatar: {\n        width: \"40px\",\n        height: \"40px\"\n    },\n    stickFooter: {\n        bottom: \"0px\",\n        position: \"absolute\",\n        backgroundColor: theme.palette.background.paper,\n        width: \"100%\"\n    },\n    ownerInfo: {\n        marginLeft: \"10px\",\n        width: \"150px\"\n    },\n    minStickDrawer: {\n        overflowY: \"auto\",\n        [theme.breakpoints.up(\"sm\")]: {\n            height: \"calc(var(--vh, 100vh) - 145px)\"\n        },\n\n        [theme.breakpoints.down(\"sm\")]: {\n            minHeight: \"calc(var(--vh, 100vh) - 360px)\"\n        }\n    }\n});\nclass NavbarCompoment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            mobileOpen: false\n        };\n        this.UploaderRef = React.createRef();\n    }\n\n    UNSAFE_componentWillMount() {\n        this.unlisten = this.props.history.listen(() => {\n            this.setState(() => ({ mobileOpen: false }));\n        });\n    }\n    componentWillUnmount() {\n        this.unlisten();\n    }\n\n    componentDidMount() {\n        changeThemeColor(\n            this.props.selected.length <= 1 &&\n                !(!this.props.isMultiple && this.props.withFile)\n                ? this.props.theme.palette.primary.main\n                : this.props.theme.palette.background.default\n        );\n    }\n\n    UNSAFE_componentWillReceiveProps = nextProps => {\n        if (\n            (this.props.selected.length <= 1 &&\n                !(!this.props.isMultiple && this.props.withFile)) !==\n            (nextProps.selected.length <= 1 &&\n                !(!nextProps.isMultiple && nextProps.withFile))\n        ) {\n            changeThemeColor(\n                !(\n                    this.props.selected.length <= 1 &&\n                    !(!this.props.isMultiple && this.props.withFile)\n                )\n                    ? this.props.theme.palette.type === \"dark\"\n                        ? this.props.theme.palette.background.default\n                        : this.props.theme.palette.primary.main\n                    : this.props.theme.palette.background.default\n            );\n        }\n    };\n\n    handleDrawerToggle = () => {\n        this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n    };\n\n    loadUploader = () => {\n        if (pathHelper.isHomePage(this.props.location.pathname)) {\n            return (\n                <>\n                    {this.props.loadUploader && this.props.isLogin && (\n                        <Uploader />\n                    )}\n                </>\n            );\n        }\n    };\n\n    openPreview = () => {\n        const isShare = pathHelper.isSharePage(this.props.location.pathname);\n        if (isShare) {\n            const user = Auth.GetUser();\n            if (!Auth.Check() && user && !user.group.shareDownload) {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"请先登录\",\n                    \"warning\"\n                );\n                this.props.changeContextMenu(\"file\", false);\n                return;\n            }\n        }\n        this.props.changeContextMenu(\"file\", false);\n        const previewPath =\n            this.props.selected[0].path === \"/\"\n                ? this.props.selected[0].path + this.props.selected[0].name\n                : this.props.selected[0].path +\n                  \"/\" +\n                  this.props.selected[0].name;\n        switch (isPreviewable(this.props.selected[0].name)) {\n            case \"img\":\n                this.props.showImgPreivew(this.props.selected[0]);\n                return;\n            case \"msDoc\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/doc?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/doc?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        this.props.selected[0].id\n                );\n                return;\n            case \"audio\":\n                this.props.openMusicDialog();\n                return;\n            case \"video\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/video?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/video?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        this.props.selected[0].id\n                );\n                return;\n            case \"edit\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/text?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/text?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        this.props.selected[0].id\n                );\n                return;\n            case \"pdf\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/pdf?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/pdf?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        this.props.selected[0].id\n                );\n                return;\n            case \"code\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/code?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/code?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        this.props.selected[0].id\n                );\n                return;\n            default:\n                return;\n        }\n    };\n\n    openDownload = () => {\n        if (!allowSharePreview()) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"未登录用户无法预览\",\n                \"warning\"\n            );\n            return;\n        }\n        this.props.openLoadingDialog(\"获取下载地址...\");\n    };\n\n    archiveDownload = () => {\n        this.props.openLoadingDialog(\"打包中...\");\n    };\n\n    signOut = () => {\n        API.delete(\"/user/session/\")\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"您已退出登录\",\n                    \"success\"\n                );\n                Auth.signout();\n                window.location.reload();\n                this.props.setSessionStatus(false);\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\"\n                );\n            })\n            .finally(() => {\n                this.handleClose();\n            });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser(this.props.isLogin);\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n        const isSharePage = pathHelper.isSharePage(\n            this.props.location.pathname\n        );\n\n        const drawer = (\n            <div id=\"container\" className={classes.upDrawer}>\n                {pathHelper.isMobile() && <UserInfo />}\n\n                {Auth.Check(this.props.isLogin) && (\n                    <>\n                        <div className={classes.minStickDrawer}>\n                            <FileTag />\n                            <List>\n                                <ListItem\n                                    button\n                                    key=\"我的分享\"\n                                    onClick={() =>\n                                        this.props.history.push(\"/shares?\")\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <ShareIcon\n                                            className={classes.iconFix}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"我的分享\" />\n                                </ListItem>\n                                <ListItem\n                                    button\n                                    key=\"离线下载\"\n                                    onClick={() =>\n                                        this.props.history.push(\"/aria2?\")\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <DownloadIcon\n                                            className={classes.iconFix}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"离线下载\" />\n                                </ListItem>\n                                {user.group.webdav && (\n                                    <ListItem\n                                        button\n                                        key=\"WebDAV\"\n                                        onClick={() =>\n                                            this.props.history.push(\"/webdav?\")\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <Devices\n                                                className={classes.iconFix}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"WebDAV\" />\n                                    </ListItem>\n                                )}\n\n                                <ListItem\n                                    button\n                                    key=\"任务队列\"\n                                    onClick={() =>\n                                        this.props.history.push(\"/tasks?\")\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <Assignment\n                                            className={classes.iconFix}\n                                        />\n                                    </ListItemIcon>\n                                    <ListItemText primary=\"任务队列\" />\n                                </ListItem>\n                            </List>\n                        </div>\n\n                        {pathHelper.isMobile() && (\n                            <>\n                                <Divider />\n                                <List>\n                                    <ListItem\n                                        button\n                                        key=\"个人设置\"\n                                        onClick={() =>\n                                            this.props.history.push(\"/setting?\")\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <Settings\n                                                className={classes.iconFix}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"个人设置\" />\n                                    </ListItem>\n\n                                    <ListItem\n                                        button\n                                        key=\"退出登录\"\n                                        onClick={this.signOut}\n                                    >\n                                        <ListItemIcon>\n                                            <LogoutVariant\n                                                className={classes.iconFix}\n                                            />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"退出登录\" />\n                                    </ListItem>\n                                </List>\n                            </>\n                        )}\n                        <div>\n                            <StorageBar></StorageBar>\n                        </div>\n                    </>\n                )}\n\n                {!Auth.Check(this.props.isLogin) && (\n                    <div>\n                        <ListItem\n                            button\n                            key=\"登录\"\n                            onClick={() => this.props.history.push(\"/login\")}\n                        >\n                            <ListItemIcon>\n                                <AccountArrowRight\n                                    className={classes.iconFix}\n                                />\n                            </ListItemIcon>\n                            <ListItemText primary=\"登录\" />\n                        </ListItem>\n                        <ListItem\n                            button\n                            key=\"注册\"\n                            onClick={() => this.props.history.push(\"/signup\")}\n                        >\n                            <ListItemIcon>\n                                <AccountPlus className={classes.iconFix} />\n                            </ListItemIcon>\n                            <ListItemText primary=\"注册\" />\n                        </ListItem>\n                    </div>\n                )}\n                {/*{pathHelper.isSharePage(this.props.location.pathname) && (*/}\n                {/*    <div className={classes.stickFooter}>*/}\n                {/*        <Divider />*/}\n                {/*        <a*/}\n                {/*            className={classes.shareInfoContainer}*/}\n                {/*            href={\"/Profile/\" + window.shareInfo.ownerUid}*/}\n                {/*        >*/}\n                {/*            <Avatar*/}\n                {/*                src={*/}\n                {/*                    \"/Member/Avatar/\" +*/}\n                {/*                    window.shareInfo.ownerUid +*/}\n                {/*                    \"/l\"*/}\n                {/*                }*/}\n                {/*                className={classes.shareAvatar}*/}\n                {/*            />*/}\n                {/*            <div className={classes.ownerInfo}>*/}\n                {/*                <Typography noWrap>*/}\n                {/*                    {window.shareInfo.ownerNick}*/}\n                {/*                </Typography>*/}\n                {/*                <Typography*/}\n                {/*                    noWrap*/}\n                {/*                    variant=\"caption\"*/}\n                {/*                    color=\"textSecondary\"*/}\n                {/*                >*/}\n                {/*                    分享于{window.shareInfo.shareDate}*/}\n                {/*                </Typography>*/}\n                {/*            </div>*/}\n                {/*        </a>*/}\n                {/*    </div>*/}\n                {/*)}*/}\n            </div>\n        );\n        const iOS =\n            process.browser && /iPad|iPhone|iPod/.test(navigator.userAgent);\n        return (\n            <div>\n                <AppBar\n                    position=\"fixed\"\n                    className={classes.appBar}\n                    color={\n                        this.props.theme.palette.type !== \"dark\" &&\n                        this.props.selected.length <= 1 &&\n                        !(!this.props.isMultiple && this.props.withFile)\n                            ? \"primary\"\n                            : \"default\"\n                    }\n                >\n                    <Toolbar>\n                        {this.props.selected.length <= 1 &&\n                            !(\n                                !this.props.isMultiple && this.props.withFile\n                            ) && (\n                                <IconButton\n                                    color=\"inherit\"\n                                    aria-label=\"Open drawer\"\n                                    onClick={this.handleDrawerToggle}\n                                    className={classes.menuButton}\n                                >\n                                    <MenuIcon />\n                                </IconButton>\n                            )}\n                        {this.props.selected.length <= 1 &&\n                            !(\n                                !this.props.isMultiple && this.props.withFile\n                            ) && (\n                                <IconButton\n                                    color=\"inherit\"\n                                    aria-label=\"Open drawer\"\n                                    onClick={() =>\n                                        this.props.handleDesktopToggle(\n                                            !this.props.desktopOpen\n                                        )\n                                    }\n                                    className={classes.menuButtonDesktop}\n                                >\n                                    <MenuIcon />\n                                </IconButton>\n                            )}\n                        {(this.props.selected.length > 1 ||\n                            (!this.props.isMultiple && this.props.withFile)) &&\n                            (isHomePage ||\n                                pathHelper.isSharePage(\n                                    this.props.location.pathname\n                                )) && (\n                                <Grow\n                                    in={\n                                        this.props.selected.length > 1 ||\n                                        (!this.props.isMultiple &&\n                                            this.props.withFile)\n                                    }\n                                >\n                                    <IconButton\n                                        color=\"inherit\"\n                                        className={classes.menuIcon}\n                                        onClick={() =>\n                                            this.props.setSelectedTarget([])\n                                        }\n                                    >\n                                        <BackIcon />\n                                    </IconButton>\n                                </Grow>\n                            )}\n                        {this.props.selected.length <= 1 &&\n                            !(\n                                !this.props.isMultiple && this.props.withFile\n                            ) && (\n                                <Typography\n                                    variant=\"h6\"\n                                    color=\"inherit\"\n                                    noWrap\n                                    onClick={() => {\n                                        this.props.history.push(\"/\");\n                                    }}\n                                >\n                                    {this.props.subTitle\n                                        ? this.props.subTitle\n                                        : this.props.title}\n                                </Typography>\n                            )}\n\n                        {!this.props.isMultiple &&\n                            this.props.withFile &&\n                            !pathHelper.isMobile() && (\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                                    {this.props.selected[0].name}{\" \"}\n                                    {(isHomePage ||\n                                        pathHelper.isSharePage(\n                                            this.props.location.pathname\n                                        )) &&\n                                        \"(\" +\n                                            sizeToString(\n                                                this.props.selected[0].size\n                                            ) +\n                                            \")\"}\n                                </Typography>\n                            )}\n\n                        {this.props.selected.length > 1 &&\n                            !pathHelper.isMobile() && (\n                                <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                                    {this.props.selected.length}个对象\n                                </Typography>\n                            )}\n                        {this.props.selected.length <= 1 &&\n                            !(\n                                !this.props.isMultiple && this.props.withFile\n                            ) && <SezrchBar />}\n                        <div className={classes.grow} />\n                        {(this.props.selected.length > 1 ||\n                            (!this.props.isMultiple && this.props.withFile)) &&\n                            !isHomePage &&\n                            !pathHelper.isSharePage(\n                                this.props.location.pathname\n                            ) &&\n                            Auth.Check(this.props.isLogin) &&\n                            !checkGetParameters(\"share\") && (\n                                <div className={classes.sectionForFile}>\n                                    <Tooltip title=\"保存\">\n                                        <IconButton\n                                            color=\"inherit\"\n                                            onClick={() =>\n                                                this.props.saveFile()\n                                            }\n                                        >\n                                            <SaveIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                </div>\n                            )}\n                        {(this.props.selected.length > 1 ||\n                            (!this.props.isMultiple && this.props.withFile)) &&\n                            (isHomePage || isSharePage) && (\n                                <div className={classes.sectionForFile}>\n                                    {!this.props.isMultiple &&\n                                        this.props.withFile &&\n                                        isPreviewable(\n                                            this.props.selected[0].name\n                                        ) && (\n                                            <Grow\n                                                in={\n                                                    !this.props.isMultiple &&\n                                                    this.props.withFile &&\n                                                    isPreviewable(\n                                                        this.props.selected[0]\n                                                            .name\n                                                    )\n                                                }\n                                            >\n                                                <Tooltip title=\"打开\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.openPreview()\n                                                        }\n                                                    >\n                                                        <OpenIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {!this.props.isMultiple &&\n                                        this.props.withFile && (\n                                            <Grow\n                                                in={\n                                                    !this.props.isMultiple &&\n                                                    this.props.withFile\n                                                }\n                                            >\n                                                <Tooltip title=\"下载\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.openDownload()\n                                                        }\n                                                    >\n                                                        <DownloadIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {(this.props.isMultiple ||\n                                        this.props.withFolder) &&\n                                        user.group.allowArchiveDownload && (\n                                            <Grow\n                                                in={\n                                                    (this.props.isMultiple ||\n                                                        this.props\n                                                            .withFolder) &&\n                                                    user.group\n                                                        .allowArchiveDownload\n                                                }\n                                            >\n                                                <Tooltip title=\"打包下载\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.archiveDownload()\n                                                        }\n                                                    >\n                                                        <DownloadIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n\n                                    {!this.props.isMultiple &&\n                                        this.props.withFolder && (\n                                            <Grow\n                                                in={\n                                                    !this.props.isMultiple &&\n                                                    this.props.withFolder\n                                                }\n                                            >\n                                                <Tooltip title=\"进入目录\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.props.navigateTo(\n                                                                this.props\n                                                                    .path ===\n                                                                    \"/\"\n                                                                    ? this.props\n                                                                          .path +\n                                                                          this\n                                                                              .props\n                                                                              .selected[0]\n                                                                              .name\n                                                                    : this.props\n                                                                          .path +\n                                                                          \"/\" +\n                                                                          this\n                                                                              .props\n                                                                              .selected[0]\n                                                                              .name\n                                                            )\n                                                        }\n                                                    >\n                                                        <OpenFolderIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        )}\n                                    {!this.props.isMultiple && !isSharePage && (\n                                        <Grow in={!this.props.isMultiple}>\n                                            <Tooltip title=\"分享\">\n                                                <IconButton\n                                                    color=\"inherit\"\n                                                    onClick={() =>\n                                                        this.props.openShareDialog()\n                                                    }\n                                                >\n                                                    <ShareIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </Grow>\n                                    )}\n                                    {!this.props.isMultiple && !isSharePage && (\n                                        <Grow in={!this.props.isMultiple}>\n                                            <Tooltip title=\"重命名\">\n                                                <IconButton\n                                                    color=\"inherit\"\n                                                    onClick={() =>\n                                                        this.props.openRenameDialog()\n                                                    }\n                                                >\n                                                    <RenameIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </Grow>\n                                    )}\n                                    {!isSharePage && (\n                                        <div style={{ display: \"flex\" }}>\n                                            {!pathHelper.isMobile() && (\n                                                <Grow\n                                                    in={\n                                                        this.props.selected\n                                                            .length !== 0 &&\n                                                        !pathHelper.isMobile()\n                                                    }\n                                                >\n                                                    <Tooltip title=\"移动\">\n                                                        <IconButton\n                                                            color=\"inherit\"\n                                                            onClick={() =>\n                                                                this.props.openMoveDialog()\n                                                            }\n                                                        >\n                                                            <MoveIcon />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </Grow>\n                                            )}\n\n                                            <Grow\n                                                in={\n                                                    this.props.selected\n                                                        .length !== 0\n                                                }\n                                            >\n                                                <Tooltip title=\"删除\">\n                                                    <IconButton\n                                                        color=\"inherit\"\n                                                        onClick={() =>\n                                                            this.props.openRemoveDialog()\n                                                        }\n                                                    >\n                                                        <DeleteIcon />\n                                                    </IconButton>\n                                                </Tooltip>\n                                            </Grow>\n                                        </div>\n                                    )}\n                                </div>\n                            )}\n                        {this.props.selected.length <= 1 &&\n                            !(\n                                !this.props.isMultiple && this.props.withFile\n                            ) && <UserAvatar />}\n                    </Toolbar>\n                </AppBar>\n                {this.loadUploader()}\n\n                <Hidden smUp implementation=\"css\">\n                    <SwipeableDrawer\n                        container={this.props.container}\n                        variant=\"temporary\"\n                        classes={{\n                            paper: classes.drawerPaper\n                        }}\n                        anchor=\"left\"\n                        open={this.state.mobileOpen}\n                        onClose={this.handleDrawerToggle}\n                        onOpen={() =>\n                            this.setState(() => ({ mobileOpen: true }))\n                        }\n                        disableDiscovery={iOS}\n                        ModalProps={{\n                            keepMounted: true // Better open performance on mobile.\n                        }}\n                    >\n                        {drawer}\n                    </SwipeableDrawer>\n                </Hidden>\n                <Hidden xsDown implementation=\"css\">\n                    <Drawer\n                        classes={{\n                            paper: classNames({\n                                [classes.drawerOpen]: this.props.desktopOpen,\n                                [classes.drawerClose]: !this.props.desktopOpen\n                            })\n                        }}\n                        className={classNames(classes.drawer, {\n                            [classes.drawerOpen]: this.props.desktopOpen,\n                            [classes.drawerClose]: !this.props.desktopOpen\n                        })}\n                        variant=\"persistent\"\n                        anchor=\"left\"\n                        open={this.props.desktopOpen}\n                    >\n                        <div className={classes.toolbar} />\n                        {drawer}\n                    </Drawer>\n                </Hidden>\n            </div>\n        );\n    }\n}\nNavbarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    theme: PropTypes.object.isRequired\n};\n\nconst Navbar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTheme(withStyles(styles)(withRouter(NavbarCompoment))));\n\nexport default Navbar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { fade } from \"@material-ui/core/styles/colorManipulator\";\nimport FileIcon from \"@material-ui/icons/InsertDriveFile\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport { connect } from \"react-redux\";\nimport { searchMyFile } from \"../../actions\";\n\nimport {\n    withStyles,\n    InputBase,\n    Popper,\n    Fade,\n    Paper,\n    MenuItem,\n    ListItemIcon,\n    ListItemText,\n    Typography\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\nimport pathHelper from \"../../utils/page\";\nimport { HotKeys, configure } from \"react-hotkeys\";\n\nconfigure({\n    ignoreTags: []\n});\n\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        searchMyFile: keywords => {\n            dispatch(searchMyFile(keywords));\n        }\n    };\n};\n\nconst styles = theme => ({\n    search: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        },\n        position: \"relative\",\n        borderRadius: theme.shape.borderRadius,\n        backgroundColor: fade(theme.palette.common.white, 0.15),\n        \"&:hover\": {\n            backgroundColor: fade(theme.palette.common.white, 0.25)\n        },\n        marginRight: theme.spacing(2),\n        marginLeft: 0,\n        width: \"100%\",\n        [theme.breakpoints.up(\"sm\")]: {\n            marginLeft: theme.spacing(7.2),\n            width: \"auto\"\n        }\n    },\n    searchIcon: {\n        width: theme.spacing(9),\n        height: \"100%\",\n        position: \"absolute\",\n        pointerEvents: \"none\",\n        display: \"flex\",\n        alignItems: \"center\",\n        justifyContent: \"center\"\n    },\n    inputRoot: {\n        color: \"inherit\",\n        width: \"100%\"\n    },\n    inputInput: {\n        paddingTop: theme.spacing(1),\n        paddingRight: theme.spacing(1),\n        paddingBottom: theme.spacing(1),\n        paddingLeft: theme.spacing(7),\n        transition: theme.transitions.create(\"width\"),\n        width: \"100%\",\n        [theme.breakpoints.up(\"md\")]: {\n            width: 200,\n            \"&:focus\": {\n                width: 300\n            }\n        }\n    },\n    suggestBox: {\n        zIndex: \"9999\",\n        width: 364\n    }\n});\n\nconst keyMap = {\n    SEARCH: \"enter\"\n};\n\nclass SearchBarCompoment extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            anchorEl: null,\n            input: \"\"\n        };\n    }\n\n    handlers = {\n        SEARCH: e => {\n            if (pathHelper.isHomePage(this.props.location.pathname)) {\n                this.searchMyFile();\n            } else {\n                this.searchShare();\n            }\n            e.target.blur();\n        }\n    };\n\n    handleChange = event => {\n        const { currentTarget } = event;\n        this.input = event.target.value;\n        this.setState({\n            anchorEl: currentTarget,\n            input: event.target.value\n        });\n    };\n\n    cancelSuggest = () => {\n        this.setState({\n            input: \"\"\n        });\n    };\n\n    searchMyFile = () => {\n        this.props.searchMyFile(\"keywords/\" + this.input);\n    };\n\n    searchShare = () => {\n        this.props.history.push(\n            \"/search?keywords=\" + encodeURIComponent(this.input)\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { anchorEl } = this.state;\n        const id = this.state.input !== \"\" ? \"simple-popper\" : null;\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n\n        return (\n            <div className={classes.search}>\n                <div className={classes.searchIcon}>\n                    <SearchIcon />\n                </div>\n                <HotKeys keyMap={keyMap} handlers={this.handlers}>\n                    <InputBase\n                        placeholder=\"搜索...\"\n                        classes={{\n                            root: classes.inputRoot,\n                            input: classes.inputInput\n                        }}\n                        onChange={this.handleChange}\n                        onBlur={this.cancelSuggest}\n                        value={this.state.input}\n                    />\n                </HotKeys>\n                <Popper\n                    id={id}\n                    open={this.state.input !== \"\"}\n                    anchorEl={anchorEl}\n                    className={classes.suggestBox}\n                    transition\n                >\n                    {({ TransitionProps }) => (\n                        <Fade {...TransitionProps} timeout={350}>\n                            <Paper square={true}>\n                                {isHomePage && (\n                                    <MenuItem onClick={this.searchMyFile}>\n                                        <ListItemIcon className={classes.icon}>\n                                            <FileIcon />\n                                        </ListItemIcon>\n                                        <ListItemText\n                                            classes={{\n                                                primary: classes.primary\n                                            }}\n                                            primary={\n                                                <Typography noWrap>\n                                                    在我的文件中搜索{\" \"}\n                                                    <strong>\n                                                        {this.state.input}\n                                                    </strong>\n                                                </Typography>\n                                            }\n                                        />\n                                    </MenuItem>\n                                )}\n\n                                <MenuItem onClick={this.searchShare}>\n                                    <ListItemIcon className={classes.icon}>\n                                        <ShareIcon />\n                                    </ListItemIcon>\n                                    <ListItemText\n                                        classes={{ primary: classes.primary }}\n                                        primary={\n                                            <Typography noWrap>\n                                                在全站分享中搜索{\" \"}\n                                                <strong>\n                                                    {this.state.input}\n                                                </strong>\n                                            </Typography>\n                                        }\n                                    />\n                                </MenuItem>\n                            </Paper>\n                        </Fade>\n                    )}\n                </Popper>\n            </div>\n        );\n    }\n}\n\nSearchBarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst SearchBar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(SearchBarCompoment)));\n\nexport default SearchBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport StorageIcon from \"@material-ui/icons/Storage\";\nimport { connect } from \"react-redux\";\nimport API from \"../../middleware/Api\";\nimport { sizeToString } from \"../../utils\";\nimport { toggleSnackbar } from \"../../actions\";\n\nimport {\n    withStyles,\n    LinearProgress,\n    Typography,\n    Divider,\n    Tooltip\n} from \"@material-ui/core\";\nimport ButtonBase from \"@material-ui/core/ButtonBase\";\nimport { withRouter } from \"react-router\";\n\nconst mapStateToProps = state => {\n    return {\n        refresh: state.viewUpdate.storageRefresh,\n        isLogin: state.viewUpdate.isLogin\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        }\n    };\n};\n\nconst styles = theme => ({\n    iconFix: {\n        marginLeft: \"32px\",\n        marginRight: \"17px\",\n        color: theme.palette.text.secondary,\n        marginTop: \"2px\"\n    },\n    textFix: {\n        padding: \" 0 0 0 16px\"\n    },\n    storageContainer: {\n        display: \"flex\",\n        marginTop: \"15px\",\n        textAlign: \"left\",\n        marginBottom: \"11px\"\n    },\n    detail: {\n        width: \"100%\",\n        marginRight: \"35px\"\n    },\n    info: {\n        width: \"131px\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n        [theme.breakpoints.down(\"xs\")]: {\n            width: \"162px\"\n        },\n        marginTop: \"5px\"\n    },\n    bar: {\n        marginTop: \"5px\"\n    },\n    stickFooter: {\n        backgroundColor: theme.palette.background.paper\n    }\n});\n\nclass StorageBarCompoment extends Component {\n    state = {\n        percent: 0,\n        used: null,\n        total: null,\n        showExpand: false\n    };\n\n    firstLoad = true;\n\n    componentDidMount = () => {\n        if (this.firstLoad && this.props.isLogin) {\n            this.firstLoad = !this.firstLoad;\n            this.updateStatus();\n        }\n    };\n\n    componentWillUnmount() {\n        this.firstLoad = false;\n    }\n\n    UNSAFE_componentWillReceiveProps = nextProps => {\n        if (\n            (this.props.isLogin && this.props.refresh !== nextProps.refresh) ||\n            (this.props.isLogin !== nextProps.isLogin && nextProps.isLogin)\n        ) {\n            this.updateStatus();\n        }\n    };\n\n    updateStatus = () => {\n        let percent = 0;\n        API.get(\"/user/storage\")\n            .then(response => {\n                if (response.data.used / response.data.total >= 1) {\n                    percent = 100;\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        \"您的已用容量已超过容量配额，请尽快删除多余文件或购买容量\",\n                        \"warning\"\n                    );\n                } else {\n                    percent = (response.data.used / response.data.total) * 100;\n                }\n                this.setState({\n                    percent: percent,\n                    used: sizeToString(response.data.used),\n                    total: sizeToString(response.data.total)\n                });\n            })\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            .catch(() => {});\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div\n                onMouseEnter={() => this.setState({ showExpand: true })}\n                onMouseLeave={() => this.setState({ showExpand: false })}\n                className={classes.stickFooter}\n            >\n                <Divider />\n                <ButtonBase>\n                    <div className={classes.storageContainer}>\n                        <StorageIcon className={classes.iconFix} />\n                        <div className={classes.detail}>\n                            存储空间{\"   \"}\n                            <LinearProgress\n                                className={classes.bar}\n                                color=\"secondary\"\n                                variant=\"determinate\"\n                                value={this.state.percent}\n                            />\n                            <div className={classes.info}>\n                                <Tooltip\n                                    title={\n                                        \"已使用\" +\n                                        (this.state.used === null\n                                            ? \" -- \"\n                                            : this.state.used) +\n                                        \"，共\" +\n                                        (this.state.total === null\n                                            ? \" -- \"\n                                            : this.state.total)\n                                    }\n                                    placement=\"top\"\n                                >\n                                    <Typography\n                                        variant=\"caption\"\n                                        noWrap\n                                        color=\"textSecondary\"\n                                    >\n                                        已使用\n                                        {this.state.used === null\n                                            ? \" -- \"\n                                            : this.state.used}\n                                        ，共\n                                        {this.state.total === null\n                                            ? \" -- \"\n                                            : this.state.total}\n                                    </Typography>\n                                </Tooltip>\n                            </div>\n                        </div>\n                    </div>\n                </ButtonBase>\n            </div>\n        );\n    }\n}\n\nStorageBarCompoment.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst StorageBar = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(StorageBarCompoment)));\n\nexport default StorageBar;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { setUserPopover } from \"../../actions\";\nimport { withStyles, Typography } from \"@material-ui/core\";\nimport Auth from \"../../middleware/Auth\";\nimport DarkModeSwitcher from \"./DarkModeSwitcher\";\nimport Avatar from \"@material-ui/core/Avatar\";\n\nconst mapStateToProps = state => {\n    return {\n        isLogin: state.viewUpdate.isLogin\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        setUserPopover: anchor => {\n            dispatch(setUserPopover(anchor));\n        }\n    };\n};\n\nconst styles = theme => ({\n    userNav: {\n        height: \"170px\",\n        backgroundColor: theme.palette.primary.main,\n        padding: \"20px 20px 2em\",\n        backgroundImage:\n            \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='\" +\n            theme.palette.primary.light.replace(\"#\", \"%23\") +\n            \"' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.main.replace(\"#\", \"%23\") +\n            \"' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\\\")\",\n        backgroundSize: \"cover\"\n    },\n    avatar: {\n        display: \"block\",\n        width: \"70px\",\n        height: \"70px\",\n        border: \" 2px solid #fff\",\n        borderRadius: \"50%\",\n        overflow: \"hidden\",\n        boxShadow: \"0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)\"\n    },\n    avatarImg: {\n        width: \"66px\",\n        height: \"66px\"\n    },\n    nickName: {\n        color: \"#fff\",\n        marginLeft: \"10px\",\n        marginTop: \"15px\",\n        fontSize: \"17px\"\n    },\n    flexAvatar: {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        alignItems: \"end\"\n    },\n    groupName: {\n        marginLeft: \"10px\",\n        color: \"#ffffff\",\n        opacity: \"0.54\"\n    },\n    storageCircle: {\n        width: \"200px\"\n    }\n});\n\nclass UserInfoCompoment extends Component {\n    showUserInfo = e => {\n        this.props.setUserPopover(e.currentTarget);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const isLogin = Auth.Check(this.props.isLogin);\n        const user = Auth.GetUser(this.props.isLogin);\n\n        return (\n            <div className={classes.userNav}>\n                <div className={classes.flexAvatar}>\n                    {/* eslint-disable-next-line */}\n                    <a onClick={this.showUserInfo} className={classes.avatar}>\n                        {isLogin && (\n                            <Avatar\n                                src={\"/api/v3/user/avatar/\" + user.id + \"/l\"}\n                                className={classes.avatarImg}\n                            />\n                        )}\n                        {!isLogin && (\n                            <Avatar\n                                src={\"/api/v3/user/avatar/0/l\"}\n                                className={classes.avatarImg}\n                            />\n                        )}\n                    </a>\n                    <DarkModeSwitcher position=\"left\" />\n                </div>\n                <div className={classes.storageCircle}>\n                    <Typography\n                        className={classes.nickName}\n                        component=\"h2\"\n                        noWrap\n                    >\n                        {isLogin ? user.nickname : \"未登录\"}\n                    </Typography>\n                    <Typography\n                        className={classes.groupName}\n                        component=\"h2\"\n                        color=\"textSecondary\"\n                        noWrap\n                    >\n                        {isLogin ? user.group.name : \"游客\"}\n                    </Typography>\n                </div>\n            </div>\n        );\n    }\n}\n\nUserInfoCompoment.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst UserInfo = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(UserInfoCompoment));\n\nexport default UserInfo;\n","import React, { useCallback, useState, Suspense } from \"react\";\nimport {\n    Divider,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    makeStyles,\n    withStyles\n} from \"@material-ui/core\";\nimport { Clear, KeyboardArrowRight } from \"@material-ui/icons\";\nimport classNames from \"classnames\";\nimport FolderShared from \"@material-ui/icons/FolderShared\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport VideoIcon from \"@material-ui/icons/VideoLibraryOutlined\";\nimport ImageIcon from \"@material-ui/icons/CollectionsOutlined\";\nimport MusicIcon from \"@material-ui/icons/LibraryMusicOutlined\";\nimport DocIcon from \"@material-ui/icons/FileCopyOutlined\";\nimport { useHistory, useLocation } from \"react-router\";\nimport pathHelper from \"../../utils/page\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport { navigateTo, searchMyFile, toggleSnackbar } from \"../../actions\";\nimport { useDispatch } from \"react-redux\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    Circle,\n    CircleOutline,\n    Heart,\n    HeartOutline,\n    Hexagon,\n    HexagonOutline,\n    Hexagram,\n    HexagramOutline,\n    Rhombus,\n    RhombusOutline,\n    Square,\n    SquareOutline,\n    Triangle,\n    TriangleOutline,\n    FolderHeartOutline,\n    TagPlus\n} from \"mdi-material-ui\";\nimport ListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport API from \"../../middleware/Api\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0\n        },\n        \"&:before\": {\n            display: \"none\"\n        },\n        \"&$expanded\": { margin: 0 }\n    },\n    expanded: {}\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 0\n        }\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"block\",\n        \"&$expanded\": {\n            margin: \"0\"\n        }\n    },\n    expanded: {}\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0)\n    }\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles(theme => ({\n    expand: {\n        display: \"none\",\n        transition: \".15s all ease-in-out\"\n    },\n    expanded: {\n        display: \"block\",\n        transform: \"rotate(90deg)\"\n    },\n    iconFix: {\n        marginLeft: \"16px\"\n    },\n    hiddenButton: {\n        display: \"none\"\n    },\n    subMenu: {\n        marginLeft: theme.spacing(2)\n    },\n    overFlow: {\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\"\n    }\n}));\n\nconst icons = {\n    Circle: Circle,\n    CircleOutline: CircleOutline,\n    Heart: Heart,\n    HeartOutline: HeartOutline,\n    Hexagon: Hexagon,\n    HexagonOutline: HexagonOutline,\n    Hexagram: Hexagram,\n    HexagramOutline: HexagramOutline,\n    Rhombus: Rhombus,\n    RhombusOutline: RhombusOutline,\n    Square: Square,\n    SquareOutline: SquareOutline,\n    Triangle: Triangle,\n    TriangleOutline: TriangleOutline,\n    FolderHeartOutline: FolderHeartOutline\n};\n\nconst AddTag = React.lazy(() => import(\"../Modals/AddTag\"));\n\nexport default function FileTag() {\n    const classes = useStyles();\n\n    const location = useLocation();\n    const history = useHistory();\n\n    const isHomePage = pathHelper.isHomePage(location.pathname);\n\n    const [tagOpen, setTagOpen] = useState(true);\n    const [addTagModal, setAddTagModal] = useState(false);\n    const [tagHover, setTagHover] = useState(null);\n    const [tags, setTags] = useState(\n        Auth.GetUser().tags ? Auth.GetUser().tags : []\n    );\n\n    const dispatch = useDispatch();\n    const SearchMyFile = useCallback(k => dispatch(searchMyFile(k)), [\n        dispatch\n    ]);\n    const NavigateTo = useCallback(k => dispatch(navigateTo(k)), [dispatch]);\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const getIcon = (icon, color) => {\n        if (icons[icon]) {\n            const IconComponent = icons[icon];\n            return (\n                <IconComponent\n                    className={[classes.iconFix]}\n                    style={\n                        color\n                            ? {\n                                  color: color\n                              }\n                            : {}\n                    }\n                />\n            );\n        }\n        return <Circle className={[classes.iconFix]} />;\n    };\n\n    const submitSuccess = tag => {\n        const newTags = [...tags, tag];\n        setTags(newTags);\n        const user = Auth.GetUser();\n        user.tags = newTags;\n        Auth.SetUser(user);\n    };\n\n    const submitDelete = id => {\n        API.delete(\"/tag/\" + id)\n            .then(() => {\n                const newTags = tags.filter(v => {\n                    return v.id !== id;\n                });\n                setTags(newTags);\n                const user = Auth.GetUser();\n                user.tags = newTags;\n                Auth.SetUser(user);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    return (\n        <>\n            <Suspense fallback={\"\"}>\n                <AddTag\n                    onSuccess={submitSuccess}\n                    open={addTagModal}\n                    onClose={() => setAddTagModal(false)}\n                />\n            </Suspense>\n            <ExpansionPanel\n                square\n                expanded={tagOpen && isHomePage}\n                onChange={() => isHomePage && setTagOpen(!tagOpen)}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <ListItem\n                        button\n                        key=\"我的文件\"\n                        onClick={() =>\n                            !isHomePage && history.push(\"/home?path=%2F\")\n                        }\n                    >\n                        <ListItemIcon>\n                            <KeyboardArrowRight\n                                className={classNames(\n                                    {\n                                        [classes.expanded]:\n                                            tagOpen && isHomePage,\n                                        [classes.iconFix]: true\n                                    },\n                                    classes.expand\n                                )}\n                            />\n                            {!(tagOpen && isHomePage) && (\n                                <FolderShared className={classes.iconFix} />\n                            )}\n                        </ListItemIcon>\n                        <ListItemText primary=\"我的文件\" />\n                    </ListItem>\n                    <Divider />\n                </ExpansionPanelSummary>\n\n                <ExpansionPanelDetails>\n                    <List onMouseLeave={() => setTagHover(null)}>\n                        <ListItem\n                            button\n                            id=\"pickfiles\"\n                            className={classes.hiddenButton}\n                        >\n                            <ListItemIcon>\n                                <UploadIcon />\n                            </ListItemIcon>\n                            <ListItemText />\n                        </ListItem>\n                        <ListItem\n                            button\n                            id=\"pickfolder\"\n                            className={classes.hiddenButton}\n                        >\n                            <ListItemIcon>\n                                <UploadIcon />\n                            </ListItemIcon>\n                            <ListItemText />\n                        </ListItem>\n                        {[\n                            {\n                                key: \"视频\",\n                                id: \"video\",\n                                icon: (\n                                    <VideoIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconVideo\n                                        ]}\n                                    />\n                                )\n                            },\n                            {\n                                key: \"图片\",\n                                id: \"image\",\n                                icon: (\n                                    <ImageIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconImg\n                                        ]}\n                                    />\n                                )\n                            },\n                            {\n                                key: \"音频\",\n                                id: \"audio\",\n                                icon: (\n                                    <MusicIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconAudio\n                                        ]}\n                                    />\n                                )\n                            },\n                            {\n                                key: \"文档\",\n                                id: \"doc\",\n                                icon: (\n                                    <DocIcon\n                                        className={[\n                                            classes.iconFix,\n                                            classes.iconDoc\n                                        ]}\n                                    />\n                                )\n                            }\n                        ].map(v => (\n                            <ListItem\n                                button\n                                key={v.key}\n                                onClick={() => SearchMyFile(v.id + \"/internal\")}\n                            >\n                                <ListItemIcon className={classes.subMenu}>\n                                    {v.icon}\n                                </ListItemIcon>\n                                <ListItemText primary={v.key} />\n                            </ListItem>\n                        ))}\n                        {tags.map(v => (\n                            <ListItem\n                                button\n                                key={v.id}\n                                onMouseEnter={() => setTagHover(v.id)}\n                                onClick={() => {\n                                    if (v.type === 0) {\n                                        SearchMyFile(\"tag/\" + v.id);\n                                    } else {\n                                        NavigateTo(v.expression);\n                                    }\n                                }}\n                            >\n                                <ListItemIcon className={classes.subMenu}>\n                                    {getIcon(\n                                        v.type === 0\n                                            ? v.icon\n                                            : \"FolderHeartOutline\",\n                                        v.type === 0 ? v.color : null\n                                    )}\n                                </ListItemIcon>\n                                <ListItemText\n                                    className={classes.overFlow}\n                                    primary={v.name}\n                                />\n\n                                {tagHover === v.id && (\n                                    <ListItemSecondaryAction\n                                        onClick={() => submitDelete(v.id)}\n                                    >\n                                        <IconButton\n                                            size={\"small\"}\n                                            edge=\"end\"\n                                            aria-label=\"delete\"\n                                        >\n                                            <Clear />\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                )}\n                            </ListItem>\n                        ))}\n\n                        <ListItem button onClick={() => setAddTagModal(true)}>\n                            <ListItemIcon className={classes.subMenu}>\n                                <TagPlus className={classes.iconFix} />\n                            </ListItemIcon>\n                            <ListItemText primary={\"添加标签...\"} />\n                        </ListItem>\n                    </List>{\" \"}\n                    <Divider />\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { baseURL } from \"../../middleware/Api\";\nimport { showImgPreivew } from \"../../actions/index\";\nimport { imgPreviewSuffix } from \"../../config\";\nimport { withStyles } from \"@material-ui/core\";\nimport pathHelper from \"../../utils/page\";\nimport { withRouter } from \"react-router\";\nimport { PhotoSlider } from \"react-photo-view\";\nimport \"react-photo-view/dist/index.css\";\nimport * as explorer from \"../../redux/explorer/reducer\";\n\nconst styles = () => ({});\n\nconst mapStateToProps = state => {\n    return {\n        first: state.explorer.imgPreview.first,\n        other: state.explorer.imgPreview.other\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        showImgPreivew: first => {\n            dispatch(showImgPreivew(first));\n        }\n    };\n};\n\nclass ImagPreviewComponent extends Component {\n    state = {\n        items: [],\n        photoIndex: 0,\n        isOpen: false\n    };\n\n    UNSAFE_componentWillReceiveProps = nextProps => {\n        const items = [];\n        let firstOne = 0;\n        if (nextProps.first.id !== \"\") {\n            if (\n                pathHelper.isSharePage(this.props.location.pathname) &&\n                !nextProps.first.path\n            ) {\n                const newImg = {\n                    intro: nextProps.first.name,\n                    src: baseURL + \"/share/preview/\" + nextProps.first.key\n                };\n                firstOne = 0;\n                items.push(newImg);\n                this.setState({\n                    photoIndex: firstOne,\n                    items: items,\n                    isOpen: true\n                });\n                return;\n            }\n            // eslint-disable-next-line\n            nextProps.other.map(value => {\n                const fileType = value.name\n                    .split(\".\")\n                    .pop()\n                    .toLowerCase();\n                if (imgPreviewSuffix.indexOf(fileType) !== -1) {\n                    let src = \"\";\n                    if (pathHelper.isSharePage(this.props.location.pathname)) {\n                        src = baseURL + \"/share/preview/\" + value.key;\n                        src =\n                            src +\n                            \"?path=\" +\n                            encodeURIComponent(\n                                value.path === \"/\"\n                                    ? value.path + value.name\n                                    : value.path + \"/\" + value.name\n                            );\n                    } else {\n                        src = baseURL + \"/file/preview/\" + value.id;\n                    }\n                    const newImg = {\n                        intro: value.name,\n                        src: src\n                    };\n                    if (\n                        value.path === nextProps.first.path &&\n                        value.name === nextProps.first.name\n                    ) {\n                        firstOne = items.length;\n                    }\n                    items.push(newImg);\n                }\n            });\n            this.setState({\n                photoIndex: firstOne,\n                items: items,\n                isOpen: true\n            });\n        }\n    };\n\n    handleClose = () => {\n        this.props.showImgPreivew(explorer.initState.imgPreview.first);\n        this.setState({\n            isOpen: false\n        });\n    };\n\n    render() {\n        const { photoIndex, isOpen, items } = this.state;\n\n        return (\n            <div>\n                {isOpen && (\n                    <PhotoSlider\n                        images={items}\n                        visible={isOpen}\n                        onClose={() => this.handleClose()}\n                        index={photoIndex}\n                        onIndexChange={n =>\n                            this.setState({\n                                photoIndex: n\n                            })\n                        }\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nImagPreviewComponent.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nconst ImgPreivew = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ImagPreviewComponent)));\n\nexport default ImgPreivew;\n","export const imgPreviewSuffix = [\n    \"bmp\",\n    \"png\",\n    \"gif\",\n    \"jpg\",\n    \"jpeg\",\n    \"svg\",\n    \"webp\"\n];\nexport const msDocPreviewSuffix = [\n    \"ppt\",\n    \"pptx\",\n    \"pps\",\n    \"doc\",\n    \"docx\",\n    \"xlsx\",\n    \"xls\"\n];\nexport const audioPreviewSuffix = [\"mp3\", \"ogg\"];\nexport const videoPreviewSuffix = [\"mp4\", \"mkv\", \"webm\"];\nexport const pdfPreviewSuffix = [\"pdf\"];\nexport const editSuffix = [\"md\", \"txt\"];\nexport const codePreviewSuffix = {\n    json: \"json\",\n    php: \"php\",\n    bat: \"bat\",\n    cpp: \"cpp\",\n    c: \"cpp\",\n    h: \"cpp\",\n    cs: \"csharp\",\n    css: \"css\",\n    dockerfile: \"dockerfile\",\n    go: \"go\",\n    html: \"html\",\n    ini: \"ini\",\n    java: \"java\",\n    js: \"javascript\",\n    jsx: \"javascript\",\n    less: \"less\",\n    lua: \"lua\",\n    sh: \"shell\",\n    sql: \"sql\",\n    xml: \"xml\",\n    yaml: \"yaml\"\n};\nexport const mediaType = {\n    audio: [\"mp3\", \"flac\", \"ape\", \"wav\", \"acc\", \"ogg\"],\n    video: [\"mp4\", \"flv\", \"avi\", \"wmv\", \"mkv\", \"rm\", \"rmvb\", \"mov\", \"ogv\"],\n    image: [\"bmp\", \"iff\", \"png\", \"gif\", \"jpg\", \"jpeg\", \"psd\", \"svg\", \"webp\"],\n    pdf: [\"pdf\"],\n    word: [\"doc\", \"docx\"],\n    ppt: [\"ppt\", \"pptx\"],\n    excel: [\"xls\", \"xlsx\", \"csv\"],\n    text: [\"txt\", \"md\", \"html\"],\n    torrent: [\"torrent\"],\n    zip: [\"zip\", \"gz\", \"tar\", \"rar\", \"7z\"],\n    excute: [\"exe\"],\n    android: [\"apk\"],\n    php: [\"php\"],\n    go: [\"go\"],\n    python: [\"py\"],\n    cpp: [\"cpp\"],\n    c: [\"c\"],\n    js: [\"js\", \"jsx\"]\n};\nexport const policyTypeMap = {\n    local: \"本机\",\n    remote: \"从机\",\n    qiniu: \"七牛\",\n    upyun: \"又拍云\",\n    oss: \"阿里云 OSS\",\n    cos: \"腾讯云\",\n    onedrive: \"OneDrive\",\n    s3: \"Amazon S3\"\n};\nexport const isPreviewable = name => {\n    const suffix = name\n        .split(\".\")\n        .pop()\n        .toLowerCase();\n    if (imgPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"img\";\n    } else if (msDocPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"msDoc\";\n    } else if (audioPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"audio\";\n    } else if (videoPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"video\";\n    } else if (editSuffix.indexOf(suffix) !== -1) {\n        return \"edit\";\n    } else if (pdfPreviewSuffix.indexOf(suffix) !== -1) {\n        return \"pdf\";\n    } else if (Object.keys(codePreviewSuffix).indexOf(suffix) !== -1) {\n        return \"code\";\n    }\n    return false;\n};\nexport const isTorrent = name => {\n    const suffix = name\n        .split(\".\")\n        .pop()\n        .toLowerCase();\n    if (mediaType.torrent.indexOf(suffix) !== -1) {\n        return true;\n    }\n    return false;\n};\n\nexport const isCompressFile = name => {\n    const suffix = name\n        .split(\".\")\n        .pop()\n        .toLowerCase();\n    return suffix === \"zip\";\n};\n\nconst taskStatus = [\"排队中\", \"处理中\", \"失败\", \"取消\", \"已完成\"];\nconst taskType = [\"压缩\", \"解压缩\", \"文件中转\", \"导入外部目录\"];\nconst taskProgress = [\n    \"等待中\",\n    \"压缩中\",\n    \"解压缩中\",\n    \"下载中\",\n    \"转存中\",\n    \"索引中\",\n    \"插入中\"\n];\n\nexport const getTaskStatus = status => {\n    return taskStatus[status];\n};\n\nexport const getTaskType = status => {\n    return taskType[status];\n};\n\nexport const getTaskProgress = (type, status) => {\n    if (type === 2) {\n        return \"已完成 \" + (status + 1) + \" 个文件\";\n    }\n    return taskProgress[status];\n};\n","export const isDefined = val => val != null;\nexport const isFunction = val => typeof val === \"function\";\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nexport const noop = () => {};\n\nexport const newScript = src => cb => {\n    const scriptElem = document.createElement(\"script\");\n    if (typeof src === \"object\") {\n        // copy every property to the element\n        for (const key in src) {\n            if (Object.prototype.hasOwnProperty.call(src, key)) {\n                scriptElem[key] = src[key];\n            }\n        }\n        src = src.src;\n    } else {\n        scriptElem.src = src;\n    }\n    scriptElem.addEventListener(\"load\", () => cb(null, src));\n    scriptElem.addEventListener(\"error\", () => cb(true, src));\n    document.body.appendChild(scriptElem);\n    return scriptElem;\n};\n\nconst keyIterator = cols => {\n    const keys = Object.keys(cols);\n    let i = -1;\n    return {\n        next() {\n            i++; // inc\n            if (i >= keys.length) return null;\n            else return keys[i];\n        }\n    };\n};\n\n// tasks should be a collection of thunk\nexport const parallel = (...tasks) => each => cb => {\n    let hasError = false;\n    let successed = 0;\n    const ret = [];\n    tasks = tasks.filter(isFunction);\n\n    if (tasks.length <= 0) cb(null);\n    else {\n        tasks.forEach((task, i) => {\n            const thunk = task;\n            thunk((err, ...args) => {\n                if (err) hasError = true;\n                else {\n                    // collect result\n                    if (args.length <= 1) args = args[0];\n\n                    ret[i] = args;\n                    successed++;\n                }\n\n                if (isFunction(each)) each.call(null, err, args, i);\n\n                if (hasError) cb(true);\n                else if (tasks.length === successed) {\n                    cb(null, ret);\n                }\n            });\n        });\n    }\n};\n\n// tasks should be a collection of thunk\nexport const series = (...tasks) => each => cb => {\n    tasks = tasks.filter(val => val != null);\n    const nextKey = keyIterator(tasks);\n    const nextThunk = () => {\n        const key = nextKey.next();\n        let thunk = tasks[key];\n        // eslint-disable-next-line prefer-spread\n        if (Array.isArray(thunk))\n            // eslint-disable-next-line prefer-spread\n            thunk = parallel.apply(null, thunk).call(null, each);\n        return [+key, thunk]; // convert `key` to number\n    };\n    let key, thunk;\n    let next = nextThunk();\n    key = next[0];\n    thunk = next[1];\n    if (thunk == null) return cb(null);\n\n    const ret = [];\n    const iterator = () => {\n        thunk((err, ...args) => {\n            if (args.length <= 1) args = args[0];\n            if (isFunction(each)) each.call(null, err, args, key);\n\n            if (err) cb(err);\n            else {\n                // collect result\n                ret.push(args);\n\n                next = nextThunk();\n                key = next[0];\n                thunk = next[1];\n                if (thunk == null) return cb(null, ret);\n                // finished\n                else iterator();\n            }\n        });\n    };\n    iterator();\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport hoistStatics from \"hoist-non-react-statics\";\nimport { newScript, series, noop } from \"./utils\";\n\nconst loadedScript = [];\nconst pendingScripts = {};\nlet failedScript = [];\n\nconst addCache = entry => {\n    if (loadedScript.indexOf(entry) < 0) {\n        loadedScript.push(entry);\n    }\n};\n\nconst removeFailedScript = () => {\n    if (failedScript.length > 0) {\n        failedScript.forEach(script => {\n            const node = document.querySelector(`script[src='${script}']`);\n            if (node != null) {\n                node.parentNode.removeChild(node);\n            }\n        });\n\n        failedScript = [];\n    }\n};\n\nexport function startLoadingScripts(scripts, onComplete = noop) {\n    // sequence load\n    const loadNewScript = script => {\n        const src = typeof script === \"object\" ? script.src : script;\n        if (loadedScript.indexOf(src) < 0) {\n            return taskComplete => {\n                const callbacks = pendingScripts[src] || [];\n                callbacks.push(taskComplete);\n                pendingScripts[src] = callbacks;\n                if (callbacks.length === 1) {\n                    return newScript(script)(err => {\n                        pendingScripts[src].forEach(cb => cb(err, src));\n                        delete pendingScripts[src];\n                    });\n                }\n            };\n        }\n    };\n    const tasks = scripts.map(src => {\n        if (Array.isArray(src)) {\n            return src.map(loadNewScript);\n        } else return loadNewScript(src);\n    });\n\n    series(...tasks)((err, src) => {\n        if (err) {\n            failedScript.push(src);\n        } else {\n            if (Array.isArray(src)) {\n                src.forEach(addCache);\n            } else addCache(src);\n        }\n    })(err => {\n        removeFailedScript();\n        onComplete(err);\n    });\n}\n\nconst uploaderLoader = () => WrappedComponent => {\n    class ScriptLoader extends Component {\n        static propTypes = {\n            onScriptLoaded: PropTypes.func\n        };\n\n        static defaultProps = {\n            onScriptLoaded: noop\n        };\n\n        constructor(props, context) {\n            super(props, context);\n\n            this.state = {\n                isScriptLoaded: false,\n                isScriptLoadSucceed: false\n            };\n\n            this._isMounted = false;\n        }\n\n        componentDidMount() {\n            this._isMounted = true;\n            const scripts = [\n                [\"/static/js/uploader/moxie.js\"],\n                [\"/static/js/uploader/plupload.dev.js\"],\n                [\"/static/js/uploader/i18n/zh_CN.js\"],\n                [\"/static/js/uploader/ui.js\"],\n                [\"/static/js/uploader/uploader_\" + window.policyType + \".js\"]\n            ];\n            startLoadingScripts(scripts, err => {\n                if (this._isMounted) {\n                    this.setState(\n                        {\n                            isScriptLoaded: true,\n                            isScriptLoadSucceed: !err\n                        },\n                        () => {\n                            if (!err) {\n                                this.props.onScriptLoaded();\n                            }\n                        }\n                    );\n                }\n            });\n        }\n\n        componentWillUnmount() {\n            this._isMounted = false;\n        }\n\n        // getWrappedInstance() {\n        //     return this.refs.wrappedInstance;\n        // }\n\n        render() {\n            const props = {\n                ...this.props,\n                ...this.state,\n                ref: \"wrappedInstance\"\n            };\n\n            return <WrappedComponent {...props} />;\n        }\n    }\n\n    return hoistStatics(ScriptLoader, WrappedComponent);\n};\n\nexport default uploaderLoader;\n","import React, { Component } from \"react\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport AddIcon from \"@material-ui/icons/AddCircleOutline\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport { isWidthDown } from \"@material-ui/core/withWidth\";\nimport { darken, lighten } from \"@material-ui/core/styles/colorManipulator\";\nimport {\n    withStyles,\n    Dialog,\n    ListItemText,\n    ListItem,\n    List,\n    Divider,\n    AppBar,\n    Toolbar,\n    IconButton,\n    Typography,\n    Slide,\n    ListItemSecondaryAction,\n    withWidth,\n    DialogContent\n} from \"@material-ui/core\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport { withTheme } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n    appBar: {\n        position: \"relative\"\n    },\n    flex: {\n        flex: 1\n    },\n    progressBar: {\n        marginTop: 5\n    },\n    minHight: {\n        [theme.breakpoints.up(\"sm\")]: {\n            minWidth: 500\n        },\n        padding: 0\n    },\n    dialogContent: {\n        padding: 0\n    },\n    successStatus: {\n        color: \"#4caf50\"\n    },\n    errorStatus: {\n        color: \"#ff5722\",\n        wordBreak: \"break-all\"\n    },\n    listAction: {\n        marginLeft: 20,\n        marginRight: 20\n    },\n    delete: {\n        zIndex: 9\n    },\n    progressContainer: {\n        position: \"relative\"\n    },\n    progressContent: {\n        position: \"relative\",\n        zIndex: 9\n    },\n    progress: {\n        transition: \"width .4s linear\",\n        zIndex: 1,\n        height: \"100%\",\n        position: \"absolute\",\n        left: 0,\n        top: 0\n    },\n    fileName: {\n        wordBreak: \"break-all\"\n    }\n});\nclass FileList extends Component {\n    state = {\n        open: false,\n        files: []\n    };\n\n    //入队\n    enQueue(files) {\n        this.setState({\n            files: [...this.state.files, ...files]\n        });\n    }\n\n    deQueue(file) {\n        const filesNow = [...this.state.files];\n        const fileID = filesNow.findIndex(f => {\n            return f.id === file.id;\n        });\n        if (fileID !== -1) {\n            filesNow.splice(fileID, 1);\n            this.setState({\n                files: filesNow,\n                open: filesNow.length !== 0\n            });\n        }\n    }\n\n    updateStatus(file) {\n        const filesNow = [...this.state.files];\n        const fileID = filesNow.findIndex(f => {\n            return f.id === file.id;\n        });\n        if (!file.errMsg || file.ignoreMsg) {\n            if (filesNow[fileID] && filesNow[fileID].status !== 4) {\n                filesNow[fileID] = file;\n                this.setState({\n                    files: filesNow\n                });\n            }\n        } else {\n            file.ignoreMsg = true;\n        }\n    }\n\n    setComplete(file) {\n        console.log(\"setComplete\");\n        const filesNow = [...this.state.files];\n        const fileID = filesNow.findIndex(f => {\n            return f.id === file.id;\n        });\n        if (fileID !== -1) {\n            if (filesNow[fileID].status !== 4) {\n                filesNow[fileID].status = 5;\n                this.setState({\n                    files: filesNow\n                });\n            }\n        }\n    }\n\n    setError(file, errMsg) {\n        const filesNow = [...this.state.files];\n        const fileID = filesNow.findIndex(f => {\n            return f.id === file.id;\n        });\n        if (fileID !== -1) {\n            filesNow[fileID].status = 4;\n            filesNow[fileID].errMsg = errMsg;\n        } else {\n            file.status = 4;\n            file.errMsg = errMsg;\n            filesNow.push(file);\n        }\n        this.setState({\n            files: filesNow\n        });\n    }\n\n    Transition(props) {\n        return <Slide direction=\"up\" {...props} />;\n    }\n    openFileList = () => {\n        if (!this.state.open) {\n            this.setState({ open: true });\n        }\n    };\n\n    cancelUpload = file => {\n        this.props.cancelUpload(file);\n        this.deQueue(file);\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    addNewFile = () => {\n        document.getElementsByClassName(\"uploadFileForm\")[0].click();\n    };\n\n    getProgressBackground = () => {\n        return this.props.theme.palette.type === \"light\"\n            ? lighten(this.props.theme.palette.primary.main, 0.8)\n            : darken(this.props.theme.palette.background.paper, 0.2);\n    };\n\n    render() {\n        const { classes } = this.props;\n        const { width } = this.props;\n\n        this.props.inRef({\n            openFileList: this.openFileList.bind(this),\n            enQueue: this.enQueue.bind(this),\n            updateStatus: this.updateStatus.bind(this),\n            setComplete: this.setComplete.bind(this),\n            setError: this.setError.bind(this)\n        });\n\n        return (\n            <Dialog\n                fullScreen={isWidthDown(\"sm\", width)}\n                open={this.state.open}\n                onClose={this.handleClose}\n                TransitionComponent={this.Transition}\n            >\n                <AppBar className={classes.appBar}>\n                    <Toolbar>\n                        <IconButton\n                            color=\"inherit\"\n                            onClick={this.handleClose}\n                            aria-label=\"Close\"\n                        >\n                            <CloseIcon />\n                        </IconButton>\n                        <Typography\n                            variant=\"h6\"\n                            color=\"inherit\"\n                            className={classes.flex}\n                        >\n                            上传队列\n                        </Typography>\n                        <IconButton color=\"inherit\" onClick={this.addNewFile}>\n                            <AddIcon />\n                        </IconButton>\n                    </Toolbar>\n                </AppBar>\n                <DialogContent className={classes.dialogContent}>\n                    <List className={classes.minHight}>\n                        {this.state.files.map((item, i) => (\n                            <div key={i} className={classes.progressContainer}>\n                                {item.status === 2 && (\n                                    <div\n                                        style={{\n                                            backgroundColor: this.getProgressBackground(),\n                                            width: item.percent + \"%\"\n                                        }}\n                                        className={classes.progress}\n                                    />\n                                )}\n                                <ListItem\n                                    className={classes.progressContent}\n                                    button\n                                >\n                                    <TypeIcon fileName={item.name} isUpload />\n                                    {item.status === 1 && (\n                                        <ListItemText\n                                            className={classes.listAction}\n                                            primary={\n                                                <span\n                                                    className={classes.fileName}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            }\n                                            secondary={<div>排队中...</div>}\n                                        />\n                                    )}\n                                    {item.status === 2 && (\n                                        <ListItemText\n                                            className={classes.listAction}\n                                            primary={\n                                                <span\n                                                    className={classes.fileName}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            }\n                                            secondary={\n                                                <div>\n                                                    {item.percent <= 99 && (\n                                                        <>\n                                                            {window.plupload\n                                                                .formatSize(\n                                                                    item.speed\n                                                                )\n                                                                .toUpperCase()}\n                                                            /s 已上传{\" \"}\n                                                            {window.plupload\n                                                                .formatSize(\n                                                                    item.loaded\n                                                                )\n                                                                .toUpperCase()}{\" \"}\n                                                            , 共{\" \"}\n                                                            {window.plupload\n                                                                .formatSize(\n                                                                    item.size\n                                                                )\n                                                                .toUpperCase()}{\" \"}\n                                                            - {item.percent}%{\" \"}\n                                                        </>\n                                                    )}\n                                                    {item.percent > 99 && (\n                                                        <div>处理中...</div>\n                                                    )}\n                                                </div>\n                                            }\n                                        />\n                                    )}\n                                    {item.status === 3 && (\n                                        <ListItemText\n                                            className={classes.listAction}\n                                            primary={\n                                                <span\n                                                    className={classes.fileName}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            }\n                                            secondary={item.status}\n                                        />\n                                    )}\n                                    {item.status === 4 && (\n                                        <ListItemText\n                                            className={classes.listAction}\n                                            primary={\n                                                <span\n                                                    className={classes.fileName}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            }\n                                            secondary={\n                                                <div\n                                                    className={\n                                                        classes.errorStatus\n                                                    }\n                                                >\n                                                    {item.errMsg}\n                                                    <br />\n                                                </div>\n                                            }\n                                        />\n                                    )}\n                                    {item.status === 5 && (\n                                        <ListItemText\n                                            className={classes.listAction}\n                                            primary={\n                                                <span\n                                                    className={classes.fileName}\n                                                >\n                                                    {item.name}\n                                                </span>\n                                            }\n                                            secondary={\n                                                <div\n                                                    className={\n                                                        classes.successStatus\n                                                    }\n                                                >\n                                                    已完成\n                                                    <br />\n                                                </div>\n                                            }\n                                        />\n                                    )}\n                                    <ListItemSecondaryAction\n                                        className={classes.delete}\n                                    >\n                                        <IconButton\n                                            aria-label=\"Delete\"\n                                            onClick={() =>\n                                                this.cancelUpload(item)\n                                            }\n                                        >\n                                            <DeleteIcon />\n                                        </IconButton>\n                                    </ListItemSecondaryAction>\n                                </ListItem>\n                                <Divider />\n                            </div>\n                        ))}\n                    </List>\n                </DialogContent>\n            </Dialog>\n        );\n    }\n}\nFileList.propTypes = {};\n\nexport default withStyles(styles)(withWidth()(withTheme(FileList)));\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { makeStyles, Badge } from \"@material-ui/core\";\nimport SpeedDial from \"@material-ui/lab/SpeedDial\";\nimport SpeedDialIcon from \"@material-ui/lab/SpeedDialIcon\";\nimport SpeedDialAction from \"@material-ui/lab/SpeedDialAction\";\nimport CreateNewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport PublishIcon from \"@material-ui/icons/Publish\";\nimport {\n    openCreateFileDialog,\n    openCreateFolderDialog,\n    toggleSnackbar\n} from \"../../actions\";\nimport { useDispatch } from \"react-redux\";\nimport AutoHidden from \"./AutoHidden\";\nimport statusHelper from \"../../utils/page\";\nimport Backdrop from \"@material-ui/core/Backdrop\";\nimport { FolderUpload, FilePlus } from \"mdi-material-ui\";\n\nconst useStyles = makeStyles(() => ({\n    fab: {\n        margin: 0,\n        top: \"auto\",\n        right: 20,\n        bottom: 20,\n        left: \"auto\",\n        zIndex: 5,\n        position: \"fixed\"\n    },\n    badge: {\n        position: \"absolute\",\n        bottom: 26,\n        top: \"auto\",\n        zIndex: 9999,\n        right: 7\n    },\n    \"@global\": {\n        \".MuiSpeedDialAction-staticTooltipLabel\": {\n            width: 100\n        }\n    }\n}));\n\nexport default function UploadButton(props) {\n    const [open, setOpen] = useState(false);\n    const [queued, setQueued] = useState(5);\n\n    const classes = useStyles();\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const OpenNewFolderDialog = useCallback(\n        () => dispatch(openCreateFolderDialog()),\n        [dispatch]\n    );\n    const OpenNewFileDialog = useCallback(\n        () => dispatch(openCreateFileDialog()),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setQueued(props.Queued);\n    }, [props.Queued]);\n\n    const openUpload = id => {\n        const uploadButton = document.getElementsByClassName(id)[0];\n        if (document.body.contains(uploadButton)) {\n            uploadButton.click();\n        } else {\n            ToggleSnackbar(\"top\", \"right\", \"上传组件还未加载完成\", \"warning\");\n        }\n    };\n    const uploadClicked = () => {\n        if (open) {\n            if (queued !== 0) {\n                props.openFileList();\n            } else {\n                openUpload(\"uploadFileForm\");\n            }\n        }\n    };\n\n    const handleOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n    };\n\n    return (\n        <AutoHidden enable>\n            <Badge\n                badgeContent={queued}\n                classes={{\n                    badge: classes.badge // class name, e.g. `root-x`\n                }}\n                className={classes.fab}\n                invisible={queued === 0}\n                color=\"primary\"\n            >\n                <Backdrop open={open && statusHelper.isMobile()} />\n                <SpeedDial\n                    ariaLabel=\"SpeedDial openIcon example\"\n                    hidden={false}\n                    tooltipTitle=\"上传文件\"\n                    icon={\n                        <SpeedDialIcon\n                            openIcon={\n                                !statusHelper.isMobile() && <PublishIcon />\n                            }\n                        />\n                    }\n                    onClose={handleClose}\n                    FabProps={{\n                        onClick: () =>\n                            !statusHelper.isMobile() && uploadClicked(),\n                        color: \"secondary\"\n                    }}\n                    onOpen={handleOpen}\n                    open={open}\n                >\n                    {statusHelper.isMobile() && (\n                        <SpeedDialAction\n                            key=\"UploadFile\"\n                            icon={<PublishIcon />}\n                            tooltipOpen\n                            tooltipTitle=\"上传文件\"\n                            onClick={() => uploadClicked()}\n                            title={\"上传文件\"}\n                        />\n                    )}\n                    {!statusHelper.isMobile() && (\n                        <SpeedDialAction\n                            key=\"UploadFolder\"\n                            icon={<FolderUpload />}\n                            tooltipOpen\n                            tooltipTitle=\"上传目录\"\n                            onClick={() => openUpload(\"uploadFolderForm\")}\n                            title={\"上传目录\"}\n                        />\n                    )}\n                    <SpeedDialAction\n                        key=\"NewFolder\"\n                        icon={<CreateNewFolderIcon />}\n                        tooltipOpen\n                        tooltipTitle=\"新建目录\"\n                        onClick={() => OpenNewFolderDialog()}\n                        title={\"新建目录\"}\n                    />\n                    <SpeedDialAction\n                        key=\"NewFile\"\n                        icon={<FilePlus />}\n                        tooltipOpen\n                        tooltipTitle=\"新建文件\"\n                        onClick={() => OpenNewFileDialog()}\n                        title={\"新建文件\"}\n                    />\n                </SpeedDial>\n            </Badge>\n        </AutoHidden>\n    );\n}\n","import React, { Component } from \"react\";\nimport uploaderLoader from \"../../loader\";\nimport { connect } from \"react-redux\";\nimport { refreshFileList, refreshStorage, toggleSnackbar } from \"../../actions\";\nimport FileList from \"./FileList.js\";\nimport Auth from \"../../middleware/Auth\";\nimport UploadButton from \"../Dial/Create.js\";\nimport { basename, pathJoin } from \"../../utils\";\n\nlet loaded = false;\n\nconst mapStateToProps = state => {\n    return {\n        path: state.navigator.path,\n        keywords: state.explorer.keywords\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        refreshStorage: () => {\n            dispatch(refreshStorage());\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        }\n    };\n};\n\nclass UploaderComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            queued: 0\n        };\n    }\n\n    setRef(val) {\n        window.fileList = val;\n    }\n\n    cancelUpload(file) {\n        this.uploader.removeFile(file);\n    }\n\n    getChunkSize(policyType) {\n        if (policyType === \"qiniu\") {\n            return 4 * 1024 * 1024;\n        }\n        if (policyType === \"onedrive\") {\n            return 100 * 1024 * 1024;\n        }\n        return 0;\n    }\n\n    fileAdd = (up, files) => {\n        const path = window.currntPath ? window.currntPath : this.props.path;\n        if (\n            this.props.keywords === \"\" &&\n            window.location.pathname.toLowerCase().startsWith(\"/home\")\n        ) {\n            window.fileList[\"openFileList\"]();\n            const enqueFiles = files\n                // 不上传Mac下的布局文件 .DS_Store\n                .filter(file => {\n                    const isDsStore = file.name.toLowerCase() === \".ds_store\";\n                    if (isDsStore) {\n                        up.removeFile(file);\n                    }\n                    return !isDsStore;\n                })\n                .map(file => {\n                    const source = file.getSource();\n                    if (source.relativePath && source.relativePath !== \"\") {\n                        file.path = basename(\n                            pathJoin([path, source.relativePath])\n                        );\n                        window.pathCache[file.id] = basename(\n                            pathJoin([path, source.relativePath])\n                        );\n                    } else {\n                        window.pathCache[file.id] = path;\n                        file.path = path;\n                    }\n                    return file;\n                });\n            window.fileList[\"enQueue\"](enqueFiles);\n        } else {\n            window.plupload.each(files, files => {\n                up.removeFile(files);\n            });\n        }\n    };\n\n    UNSAFE_componentWillReceiveProps({ isScriptLoaded, isScriptLoadSucceed }) {\n        if (isScriptLoaded && !this.props.isScriptLoaded) {\n            // load finished\n            if (isScriptLoadSucceed) {\n                if (loaded) {\n                    return;\n                }\n                loaded = true;\n                const user = Auth.GetUser();\n                this.uploader = window.Qiniu.uploader({\n                    runtimes: \"html5\",\n                    browse_button: [\"pickfiles\", \"pickfolder\"],\n                    container: \"container\",\n                    drop_element: \"container\",\n                    max_file_size:\n                        user.policy.maxSize === \"0.00mb\"\n                            ? 0\n                            : user.policy.maxSize,\n                    dragdrop: true,\n                    chunk_size: this.getChunkSize(user.policy.saveType),\n                    filters: {\n                        mime_types:\n                            user.policy.allowedType === null ||\n                            user.policy.allowedType.length === 0\n                                ? []\n                                : [\n                                      {\n                                          title: \"files\",\n                                          extensions: user.policy.allowedType.join(\n                                              \",\"\n                                          )\n                                      }\n                                  ]\n                    },\n                    // iOS不能多选？\n                    multi_selection: true,\n                    uptoken_url: \"/api/v3/file/upload/credential\",\n                    uptoken: user.policy.saveType === \"local\" ? \"token\" : null,\n                    domain: \"s\",\n                    max_retries: 0,\n                    get_new_uptoken: true,\n                    auto_start: true,\n                    log_level: 5,\n                    init: {\n                        FilesAdded: this.fileAdd,\n\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\n                        BeforeUpload: function() {},\n                        QueueChanged: up => {\n                            this.setState({ queued: up.total.queued });\n                        },\n                        UploadProgress: (up, file) => {\n                            window.fileList[\"updateStatus\"](file);\n                        },\n                        UploadComplete: (up, file) => {\n                            if (file.length === 0) {\n                                return;\n                            }\n                            console.log(\n                                \"UploadComplete\",\n                                file[0].status,\n                                file[0]\n                            );\n                            for (let i = 0; i < file.length; i++) {\n                                if (file[i].status === 5) {\n                                    window.fileList[\"setComplete\"](file[i]);\n                                }\n                            }\n                            // 无异步操作的策略，直接刷新\n                            if (\n                                user.policy.saveType !== \"onedrive\" &&\n                                user.policy.saveType !== \"cos\"\n                            ) {\n                                this.props.refreshFileList();\n                                this.props.refreshStorage();\n                            }\n                        },\n                        Fresh: () => {\n                            this.props.refreshFileList();\n                            this.props.refreshStorage();\n                        },\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\n                        FileUploaded: function() {},\n                        Error: (up, err, errTip) => {\n                            window.fileList[\"openFileList\"]();\n                            window.fileList[\"setError\"](err.file, errTip);\n                        },\n                        // eslint-disable-next-line @typescript-eslint/no-empty-function\n                        FilesRemoved: () => {}\n                    }\n                });\n                // this.fileList[\"openFileList\"]();\n            } else this.onError();\n        }\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onError() {}\n\n    openFileList = () => {\n        window.fileList[\"openFileList\"]();\n    };\n\n    render() {\n        return (\n            <div>\n                <FileList\n                    inRef={this.setRef.bind(this)}\n                    cancelUpload={this.cancelUpload.bind(this)}\n                />\n                {this.props.keywords === \"\" && (\n                    <UploadButton\n                        Queued={this.state.queued}\n                        openFileList={this.openFileList}\n                    />\n                )}\n            </div>\n        );\n    }\n}\n\nconst Uploader = connect(mapStateToProps, mapDispatchToProps, null, {\n    forwardRef: true\n})(uploaderLoader()(UploaderComponent));\n\nexport default Uploader;\n","import { isMac } from \"../utils\";\n\nexport const removeSelectedTargets = fileIds => {\n    return {\n        type: \"RMOVE_SELECTED_TARGETS\",\n        fileIds\n    };\n};\n\nexport const addSelectedTargets = targets => {\n    return {\n        type: \"ADD_SELECTED_TARGETS\",\n        targets\n    };\n};\n\nexport const setSelectedTarget = targets => {\n    return {\n        type: \"SET_SELECTED_TARGET\",\n        targets\n    };\n};\n\nexport const setLastSelect = (file, index) => {\n    return {\n        type: \"SET_LAST_SELECT\",\n        file,\n        index\n    };\n};\n\nexport const setShiftSelectedIds = shiftSelectedIds => {\n    return {\n        type: \"SET_SHIFT_SELECTED_IDS\",\n        shiftSelectedIds\n    };\n};\n\nexport const selectFile = (file, event, fileIndex) => {\n    const { ctrlKey, metaKey, shiftKey } = event;\n    return (dispatch, getState) => {\n        // 多种组合操作忽略\n        if ([ctrlKey, metaKey, shiftKey].filter(Boolean).length > 1) {\n            return;\n        }\n        const isMacbook = isMac();\n        const { explorer } = getState();\n        const { selected, lastSelect, dirList, fileList } = explorer;\n        if (\n            shiftKey &&\n            !ctrlKey &&\n            !metaKey &&\n            selected.length !== 0 &&\n            // 点击类型一样\n            file.type === lastSelect.file.type\n        ) {\n            // shift 多选\n            // 取消原有选择\n            dispatch(removeSelectedTargets(selected.map(v => v.id)));\n            // 添加新选择\n            const begin = Math.min(lastSelect.index, fileIndex);\n            const end = Math.max(lastSelect.index, fileIndex);\n            const list = file.type === \"dir\" ? dirList : fileList;\n            const newShiftSelected = list.slice(begin, end + 1);\n            return dispatch(addSelectedTargets(newShiftSelected));\n        }\n        dispatch(setLastSelect(file, fileIndex));\n        dispatch(setShiftSelectedIds([]));\n        if ((ctrlKey && !isMacbook) || (metaKey && isMacbook)) {\n            // Ctrl/Command 单击添加/删除\n            const presentIndex = selected.findIndex(value => {\n                return value.id === file.id;\n            });\n            if (presentIndex !== -1) {\n                return dispatch(removeSelectedTargets([file.id]));\n            }\n            return dispatch(addSelectedTargets([file]));\n        }\n        // 单选\n        return dispatch(setSelectedTarget([file]));\n    };\n};\n","export * from \"./explorer\";\n\nexport const setNavigator = (path, navigatorLoading) => {\n    return {\n        type: \"SET_NAVIGATOR\",\n        path,\n        navigatorLoading\n    };\n};\n\nexport const navigateTo = path => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const navigatorLoading = path !== state.navigator.path;\n        dispatch(setNavigator(path, navigatorLoading));\n    };\n};\n\nexport const navigateUp = () => {\n    return (dispatch, getState) => {\n        const state = getState();\n        const pathSplit = state.navigator.path.split(\"/\");\n        pathSplit.pop();\n        const newPath = pathSplit.length === 1 ? \"/\" : pathSplit.join(\"/\");\n        const navigatorLoading = newPath !== state.navigator.path;\n        dispatch(setNavigator(newPath, navigatorLoading));\n    };\n};\n\nexport const drawerToggleAction = open => {\n    return {\n        type: \"DRAWER_TOGGLE\",\n        open: open\n    };\n};\n\nexport const dragAndDrop = (source, target) => {\n    return {\n        type: \"DRAG_AND_DROP\",\n        source: source,\n        target: target\n    };\n};\n\nexport const changeViewMethod = method => {\n    return {\n        type: \"CHANGE_VIEW_METHOD\",\n        method: method\n    };\n};\n\nexport const toggleDaylightMode = () => {\n    return {\n        type: \"TOGGLE_DAYLIGHT_MODE\"\n    };\n};\n\nexport const changeContextMenu = (type, open) => {\n    return {\n        type: \"CHANGE_CONTEXT_MENU\",\n        menuType: type,\n        open: open\n    };\n};\n\nexport const setNavigatorLoadingStatus = status => {\n    return {\n        type: \"SET_NAVIGATOR_LOADING_STATUE\",\n        status: status\n    };\n};\n\nexport const setNavigatorError = (status, msg) => {\n    return {\n        type: \"SET_NAVIGATOR_ERROR\",\n        status: status,\n        msg: msg\n    };\n};\n\nexport const openCreateFolderDialog = () => {\n    return {\n        type: \"OPEN_CREATE_FOLDER_DIALOG\"\n    };\n};\n\nexport const openCreateFileDialog = () => {\n    return {\n        type: \"OPEN_CREATE_FILE_DIALOG\"\n    };\n};\n\nexport const setUserPopover = anchor => {\n    return {\n        type: \"SET_USER_POPOVER\",\n        anchor: anchor\n    };\n};\n\nexport const setShareUserPopover = anchor => {\n    return {\n        type: \"SET_SHARE_USER_POPOVER\",\n        anchor: anchor\n    };\n};\n\nexport const openRenameDialog = () => {\n    return {\n        type: \"OPEN_RENAME_DIALOG\"\n    };\n};\n\nexport const openResaveDialog = key => {\n    return {\n        type: \"OPEN_RESAVE_DIALOG\",\n        key: key\n    };\n};\n\nexport const openMoveDialog = () => {\n    return {\n        type: \"OPEN_MOVE_DIALOG\"\n    };\n};\n\nexport const openRemoveDialog = () => {\n    return {\n        type: \"OPEN_REMOVE_DIALOG\"\n    };\n};\n\nexport const openShareDialog = () => {\n    return {\n        type: \"OPEN_SHARE_DIALOG\"\n    };\n};\n\nexport const applyThemes = theme => {\n    return {\n        type: \"APPLY_THEME\",\n        theme: theme\n    };\n};\n\nexport const setSessionStatus = status => {\n    return {\n        type: \"SET_SESSION_STATUS\",\n        status: status\n    };\n};\n\nexport const openMusicDialog = () => {\n    return {\n        type: \"OPEN_MUSIC_DIALOG\"\n    };\n};\n\nexport const openRemoteDownloadDialog = () => {\n    return {\n        type: \"OPEN_REMOTE_DOWNLOAD_DIALOG\"\n    };\n};\n\nexport const openTorrentDownloadDialog = () => {\n    return {\n        type: \"OPEN_TORRENT_DOWNLOAD_DIALOG\"\n    };\n};\n\nexport const openDecompressDialog = () => {\n    return {\n        type: \"OPEN_DECOMPRESS_DIALOG\"\n    };\n};\n\nexport const openCompressDialog = () => {\n    return {\n        type: \"OPEN_COMPRESS_DIALOG\"\n    };\n};\n\nexport const openGetSourceDialog = () => {\n    return {\n        type: \"OPEN_GET_SOURCE_DIALOG\"\n    };\n};\n\nexport const openCopyDialog = () => {\n    return {\n        type: \"OPEN_COPY_DIALOG\"\n    };\n};\n\nexport const openLoadingDialog = text => {\n    return {\n        type: \"OPEN_LOADING_DIALOG\",\n        text: text\n    };\n};\n\nexport const closeAllModals = () => {\n    return {\n        type: \"CLOSE_ALL_MODALS\"\n    };\n};\n\nexport const toggleSnackbar = (vertical, horizontal, msg, color) => {\n    return {\n        type: \"TOGGLE_SNACKBAR\",\n        vertical: vertical,\n        horizontal: horizontal,\n        msg: msg,\n        color: color\n    };\n};\n\nexport const enableLoadUploader = () => {\n    return {\n        type: \"ENABLE_LOAD_UPLOADER\"\n    };\n};\n\nexport const setModalsLoading = status => {\n    return {\n        type: \"SET_MODALS_LOADING\",\n        status: status\n    };\n};\n\nexport const refreshFileList = () => {\n    return {\n        type: \"REFRESH_FILE_LIST\"\n    };\n};\n\nexport const searchMyFile = keywords => {\n    return {\n        type: \"SEARCH_MY_FILE\",\n        keywords: keywords\n    };\n};\n\nexport const showImgPreivew = first => {\n    return {\n        type: \"SHOW_IMG_PREIVEW\",\n        first: first\n    };\n};\n\nexport const refreshStorage = () => {\n    return {\n        type: \"REFRESH_STORAGE\"\n    };\n};\n\nexport const saveFile = () => {\n    return {\n        type: \"SAVE_FILE\"\n    };\n};\n\nexport const setSiteConfig = config => {\n    return {\n        type: \"SET_SITE_CONFIG\",\n        config: config\n    };\n};\n","import React from \"react\";\nimport { mediaType } from \"../../config\";\nimport ImageIcon from \"@material-ui/icons/PhotoSizeSelectActual\";\nimport VideoIcon from \"@material-ui/icons/Videocam\";\nimport AudioIcon from \"@material-ui/icons/Audiotrack\";\nimport PdfIcon from \"@material-ui/icons/PictureAsPdf\";\nimport {\n    Android,\n    FileExcelBox,\n    FilePowerpointBox,\n    FileWordBox,\n    LanguageC,\n    LanguageCpp,\n    LanguageGo,\n    LanguageJavascript,\n    LanguagePhp,\n    LanguagePython,\n    MagnetOn,\n    ScriptText,\n    WindowRestore,\n    ZipBox\n} from \"mdi-material-ui\";\nimport FileShowIcon from \"@material-ui/icons/InsertDriveFile\";\nimport { lighten } from \"@material-ui/core/styles\";\nimport useTheme from \"@material-ui/core/styles/useTheme\";\nimport { Avatar } from \"@material-ui/core\";\n\nconst icons = {\n    audio: {\n        color: \"#651fff\",\n        icon: AudioIcon\n    },\n    video: {\n        color: \"#d50000\",\n        icon: VideoIcon\n    },\n    image: {\n        color: \"#d32f2f\",\n        icon: ImageIcon\n    },\n    pdf: {\n        color: \"#f44336\",\n        icon: PdfIcon\n    },\n    word: {\n        color: \"#538ce5\",\n        icon: FileWordBox\n    },\n    ppt: {\n        color: \"rgb(239, 99, 63)\",\n        icon: FilePowerpointBox\n    },\n    excel: {\n        color: \"#4caf50\",\n        icon: FileExcelBox\n    },\n    text: {\n        color: \"#607d8b\",\n        icon: ScriptText\n    },\n    torrent: {\n        color: \"#5c6bc0\",\n        icon: MagnetOn\n    },\n    zip: {\n        color: \"#f9a825\",\n        icon: ZipBox\n    },\n    excute: {\n        color: \"#1a237e\",\n        icon: WindowRestore\n    },\n    android: {\n        color: \"#8bc34a\",\n        icon: Android\n    },\n    file: {\n        color: \"#607d8b\",\n        icon: FileShowIcon\n    },\n    php: {\n        color: \"#777bb3\",\n        icon: LanguagePhp\n    },\n    go: {\n        color: \"#16b3da\",\n        icon: LanguageGo\n    },\n    python: {\n        color: \"#3776ab\",\n        icon: LanguagePython\n    },\n    c: {\n        color: \"#a8b9cc\",\n        icon: LanguageC\n    },\n    cpp: {\n        color: \"#004482\",\n        icon: LanguageCpp\n    },\n    js: {\n        color: \"#f4d003\",\n        icon: LanguageJavascript\n    }\n};\n\nconst getColor = (theme, color) =>\n    theme.palette.type === \"light\" ? color : lighten(color, 0.2);\n\nlet color;\n\nconst TypeIcon = props => {\n    const theme = useTheme();\n\n    const fileSuffix = props.fileName\n        .split(\".\")\n        .pop()\n        .toLowerCase();\n    let fileType = \"file\";\n    Object.keys(mediaType).forEach(k => {\n        if (mediaType[k].indexOf(fileSuffix) !== -1) {\n            fileType = k;\n        }\n    });\n    const IconComponent = icons[fileType].icon;\n    color = getColor(theme, icons[fileType].color);\n    if (props.getColorValue) {\n        props.getColorValue(color);\n    }\n\n    return (\n        <>\n            {props.isUpload && (\n                <Avatar\n                    className={props.className}\n                    style={{\n                        backgroundColor: color\n                    }}\n                >\n                    <IconComponent\n                        style={{\n                            color: theme.palette.background.paper\n                        }}\n                    />\n                </Avatar>\n            )}\n            {!props.isUpload && (\n                <IconComponent\n                    className={props.className}\n                    style={{\n                        color: color\n                    }}\n                />\n            )}\n        </>\n    );\n};\n\nexport default TypeIcon;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === \"installed\") {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                \"New content is available and will be used when all \" +\n                                    \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log(\"Content is cached for offline use.\");\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error(\"Error during service worker registration:\", error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get(\"content-type\");\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf(\"javascript\") === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                \"No internet connection found. App is running in offline mode.\"\n            );\n        });\n}\n\nconst isLocalhost = Boolean(\n    window.location.hostname === \"localhost\" ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === \"[::1]\" ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener(\"load\", () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        \"This web app is being served cache-first by a service \" +\n                            \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nexport function unregister() {\n    if (\"serviceWorker\" in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import React from \"react\";\nimport Auth from \"./Auth\";\nimport { Route, Redirect } from \"react-router-dom\";\n\nfunction AuthRoute({ children, ...rest }) {\n    return (\n        <Route\n            {...rest}\n            render={({ location }) =>\n                Auth.Check(rest.isLogin) ? (\n                    children\n                ) : (\n                    <Redirect\n                        to={{\n                            pathname: \"/login\",\n                            state: { from: location }\n                        }}\n                    />\n                )\n            }\n        />\n    );\n}\n\nexport default AuthRoute;\n","import React from \"react\";\nimport SentimentVeryDissatisfiedIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    icon: {\n        fontSize: \"160px\"\n    },\n    emptyContainer: {\n        bottom: \"0\",\n        height: \"300px\",\n        margin: \"50px auto\",\n        width: \"300px\",\n        color: lighten(theme.palette.text.disabled, 0.4),\n        textAlign: \"center\",\n        paddingTop: \"20px\"\n    },\n    emptyInfoBig: {\n        fontSize: \"25px\",\n        color: lighten(theme.palette.text.disabled, 0.4)\n    }\n}));\n\nexport default function Notice(props) {\n    const classes = useStyles();\n    return (\n        <div className={classes.emptyContainer}>\n            <SentimentVeryDissatisfiedIcon className={classes.icon} />\n            <div className={classes.emptyInfoBig}>{props.msg}</div>\n        </div>\n    );\n}\n","import React from \"react\";\nimport ContentLoader from \"react-content-loader\";\n\nconst MyLoader = () => (\n    <ContentLoader\n        height={80}\n        width={200}\n        speed={2}\n        primaryColor=\"#f3f3f3\"\n        secondaryColor=\"#e4e4e4\"\n    >\n        <rect x=\"4\" y=\"4\" rx=\"7\" ry=\"7\" width=\"392\" height=\"116\" />\n    </ContentLoader>\n);\n\nfunction captchaPlacholder() {\n    return <MyLoader />;\n}\n\nexport default captchaPlacholder;\n","import {\n    setSiteConfig,\n    toggleSnackbar,\n    enableLoadUploader,\n    changeViewMethod\n} from \"../actions/index\";\nimport API from \"./Api\";\nimport Auth from \"./Auth\";\nimport pathHelper from \"../utils/page\";\n\nconst initUserConfig = siteConfig => {\n    if (siteConfig.user !== undefined && !siteConfig.user.anonymous) {\n        const themes = JSON.parse(siteConfig.themes);\n        const user = siteConfig.user;\n        delete siteConfig.user;\n\n        //更换用户自定配色\n        if (\n            user[\"preferred_theme\"] !== \"\" &&\n            themes[user[\"preferred_theme\"]] !== undefined\n        ) {\n            siteConfig.theme = themes[user[\"preferred_theme\"]];\n        }\n\n        // 更新登录态\n        Auth.authenticate(user);\n    }\n    if (siteConfig.user !== undefined && siteConfig.user.anonymous) {\n        Auth.SetUser(siteConfig.user);\n    }\n    return siteConfig;\n};\n\nexport const InitSiteConfig = rawStore => {\n    // 从缓存获取默认配置\n    const configCache = JSON.parse(localStorage.getItem(\"siteConfigCache\"));\n    if (configCache != null) {\n        rawStore.siteConfig = configCache;\n    }\n    // 检查是否有path参数\n    const url = new URL(window.location.href);\n    const c = url.searchParams.get(\"path\");\n    rawStore.navigator.path = c === null ? \"/\" : c;\n    // 初始化用户个性配置\n    rawStore.siteConfig = initUserConfig(rawStore.siteConfig);\n\n    // 更改站点标题\n    document.title = rawStore.siteConfig.title;\n    return rawStore;\n};\n\nexport function enableUploaderLoad() {\n    // 开启上传组件加载\n    const user = Auth.GetUser();\n    window.policyType = user !== null ? user.policy.saveType : \"local\";\n    window.uploadConfig = user !== null ? user.policy : {};\n    window.pathCache = [];\n}\n\nexport async function UpdateSiteConfig(store) {\n    API.get(\"/site/config\")\n        .then(function(response) {\n            const themes = JSON.parse(response.data.themes);\n            response.data.theme = themes[response.data.defaultTheme];\n            response.data = initUserConfig(response.data);\n            store.dispatch(setSiteConfig(response.data));\n            localStorage.setItem(\n                \"siteConfigCache\",\n                JSON.stringify(response.data)\n            );\n\n            // 偏爱的列表样式\n            const preferListMethod = Auth.GetPreference(\"view_method\");\n            if (preferListMethod) {\n                store.dispatch(changeViewMethod(preferListMethod));\n            } else {\n                if (pathHelper.isSharePage(window.location.pathname)) {\n                    store.dispatch(\n                        changeViewMethod(response.data.share_view_method)\n                    );\n                } else {\n                    store.dispatch(\n                        changeViewMethod(response.data.home_view_method)\n                    );\n                }\n            }\n        })\n        .catch(function(error) {\n            store.dispatch(\n                toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法加载站点配置：\" + error.message,\n                    \"error\"\n                )\n            );\n        })\n        .then(function() {\n            enableUploaderLoad(store);\n            store.dispatch(enableLoadUploader());\n        });\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class ReCAPTCHA extends React.Component {\n    constructor() {\n        super();\n        this.handleExpired = this.handleExpired.bind(this);\n        this.handleErrored = this.handleErrored.bind(this);\n        this.handleChange = this.handleChange.bind(this);\n        this.handleRecaptchaRef = this.handleRecaptchaRef.bind(this);\n    }\n\n    getValue() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            return this.props.grecaptcha.getResponse(this._widgetId);\n        }\n        return null;\n    }\n\n    getWidgetId() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            return this._widgetId;\n        }\n        return null;\n    }\n\n    execute() {\n        const { grecaptcha } = this.props;\n\n        if (grecaptcha && this._widgetId !== undefined) {\n            return grecaptcha.execute(this._widgetId);\n        } else {\n            this._executeRequested = true;\n        }\n    }\n\n    reset() {\n        if (this.props.grecaptcha && this._widgetId !== undefined) {\n            this.props.grecaptcha.reset(this._widgetId);\n        }\n    }\n\n    handleExpired() {\n        if (this.props.onExpired) {\n            this.props.onExpired();\n        } else {\n            this.handleChange(null);\n        }\n    }\n\n    handleErrored() {\n        if (this.props.onErrored) this.props.onErrored();\n    }\n\n    handleChange(token) {\n        if (this.props.onChange) this.props.onChange(token);\n    }\n\n    explicitRender() {\n        if (\n            this.props.grecaptcha &&\n            this.props.grecaptcha.render &&\n            this._widgetId === undefined\n        ) {\n            const wrapper = document.createElement(\"div\");\n            this._widgetId = this.props.grecaptcha.render(wrapper, {\n                sitekey: this.props.sitekey,\n                callback: this.handleChange,\n                theme: this.props.theme,\n                type: this.props.type,\n                tabindex: this.props.tabindex,\n                \"expired-callback\": this.handleExpired,\n                \"error-callback\": this.handleErrored,\n                size: this.props.size,\n                stoken: this.props.stoken,\n                hl: this.props.hl,\n                badge: this.props.badge\n            });\n            this.captcha.appendChild(wrapper);\n        }\n        if (\n            this._executeRequested &&\n            this.props.grecaptcha &&\n            this._widgetId !== undefined\n        ) {\n            this._executeRequested = false;\n            this.execute();\n        }\n    }\n\n    componentDidMount() {\n        this.explicitRender();\n    }\n\n    componentDidUpdate() {\n        this.explicitRender();\n    }\n\n    componentWillUnmount() {\n        if (this._widgetId !== undefined) {\n            this.delayOfCaptchaIframeRemoving();\n            this.reset();\n        }\n    }\n\n    delayOfCaptchaIframeRemoving() {\n        const temporaryNode = document.createElement(\"div\");\n        document.body.appendChild(temporaryNode);\n        temporaryNode.style.display = \"none\";\n\n        // move of the recaptcha to a temporary node\n        while (this.captcha.firstChild) {\n            temporaryNode.appendChild(this.captcha.firstChild);\n        }\n\n        // delete the temporary node after reset will be done\n        setTimeout(() => {\n            document.body.removeChild(temporaryNode);\n        }, 5000);\n    }\n\n    handleRecaptchaRef(elem) {\n        this.captcha = elem;\n    }\n\n    render() {\n        // consume properties owned by the reCATPCHA, pass the rest to the div so the user can style it.\n        /* eslint-disable no-unused-vars */\n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        const {\n            sitekey,\n            onChange,\n            theme,\n            type,\n            tabindex,\n            onExpired,\n            onErrored,\n            size,\n            stoken,\n            grecaptcha,\n            badge,\n            hl,\n            ...childProps\n        } = this.props;\n        /* eslint-enable no-unused-vars */\n        return <div {...childProps} ref={this.handleRecaptchaRef} />;\n    }\n}\n\nReCAPTCHA.displayName = \"ReCAPTCHA\";\nReCAPTCHA.propTypes = {\n    sitekey: PropTypes.string.isRequired,\n    onChange: PropTypes.func,\n    grecaptcha: PropTypes.object,\n    theme: PropTypes.oneOf([\"dark\", \"light\"]),\n    type: PropTypes.oneOf([\"image\", \"audio\"]),\n    tabindex: PropTypes.number,\n    onExpired: PropTypes.func,\n    onErrored: PropTypes.func,\n    size: PropTypes.oneOf([\"compact\", \"normal\", \"invisible\"]),\n    stoken: PropTypes.string,\n    hl: PropTypes.string,\n    badge: PropTypes.oneOf([\"bottomright\", \"bottomleft\", \"inline\"])\n};\nReCAPTCHA.defaultProps = {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    onChange: () => {},\n    theme: \"light\",\n    type: \"image\",\n    tabindex: 0,\n    size: \"normal\",\n    badge: \"bottomright\"\n};\n","import ReCAPTCHA from \"./ReCaptchaWrapper\";\nimport makeAsyncScriptLoader from \"react-async-script\";\n\nconst callbackName = \"onloadcallback\";\nconst globalName = \"grecaptcha\";\n\nfunction getURL() {\n    const hostname = \"recaptcha.net\";\n    return `https://${hostname}/recaptcha/api.js?onload=${callbackName}&render=explicit`;\n}\n\nexport default makeAsyncScriptLoader(getURL, {\n    callbackName,\n    globalName\n})(ReCAPTCHA);\n","import { Link, makeStyles } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { useLocation } from \"react-router\";\nimport pageHelper from \"../../utils/page\";\n\nconst useStyles = makeStyles(() => ({\n    icp: {\n        padding: \"8px 24px\",\n        position: \"absolute\",\n        bottom: 0\n    }\n}));\n\nexport const ICPFooter = () => {\n    const siteICPId = useSelector(state => state.siteConfig.siteICPId);\n    const classes = useStyles();\n    const location = useLocation();\n    const [show, setShow] = useState(true);\n\n    useEffect(() => {\n        // 只在分享和登录界面显示\n        const isSharePage = pageHelper.isSharePage(location.pathname);\n        const isLoginPage = pageHelper.isLoginPage(location.pathname);\n        setShow(siteICPId && (isSharePage || isLoginPage));\n    }, [siteICPId, location]);\n\n    if (!show) {\n        return <></>;\n    }\n    return (\n        <div className={classes.icp}>\n            {`备案号: `}\n            <Link\n                href=\"https://beian.miit.gov.cn/\"\n                rel=\"noopener noreferrer\"\n                target=\"_blank\"\n            >\n                {siteICPId}\n            </Link>\n        </div>\n    );\n};\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    toggleSnackbar,\n    applyThemes,\n    setSessionStatus\n} from \"../../actions/index\";\nimport Placeholder from \"../Placeholder/Captcha\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport Auth from \"../../middleware/Auth\";\nimport {\n    Button,\n    FormControl,\n    Divider,\n    Link,\n    Input,\n    InputLabel,\n    Paper,\n    Avatar,\n    Typography\n} from \"@material-ui/core\";\nimport { bufferDecode, bufferEncode } from \"../../utils/index\";\nimport { enableUploaderLoad } from \"../../middleware/Init\";\nimport { Fingerprint, VpnKey } from \"@material-ui/icons\";\nimport VpnIcon from \"@material-ui/icons/VpnKeyOutlined\";\nimport { useLocation } from \"react-router\";\nimport ReCaptcha from \"./ReCaptcha\";\nimport { ICPFooter } from \"../Common/ICPFooter\";\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: 110\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1)\n    },\n    submit: {\n        marginTop: theme.spacing(3)\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\"\n    },\n    captchaContainer: {\n        display: \"flex\",\n        marginTop: \"10px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"block\"\n        }\n    },\n    captchaPlaceholder: {\n        width: 200\n    },\n    buttonContainer: {\n        display: \"flex\"\n    },\n    authnLink: {\n        textAlign: \"center\",\n        marginTop: 16\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction LoginForm() {\n    const [email, setEmail] = useState(\"\");\n    const [pwd, setPwd] = useState(\"\");\n    const [captcha, setCaptcha] = useState(\"\");\n    const [loading, setLoading] = useState(false);\n    const [useAuthn, setUseAuthn] = useState(false);\n    const [captchaData, setCaptchaData] = useState(null);\n    const [twoFA, setTwoFA] = useState(false);\n    const [faCode, setFACode] = useState(\"\");\n\n    const loginCaptcha = useSelector(state => state.siteConfig.loginCaptcha);\n    const title = useSelector(state => state.siteConfig.title);\n    const authn = useSelector(state => state.siteConfig.authn);\n    const useReCaptcha = useSelector(\n        state => state.siteConfig.captcha_IsUseReCaptcha\n    );\n    const reCaptchaKey = useSelector(\n        state => state.siteConfig.captcha_ReCaptchaKey\n    );\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const ApplyThemes = useCallback(theme => dispatch(applyThemes(theme)), [\n        dispatch\n    ]);\n    const SetSessionStatus = useCallback(\n        status => dispatch(setSessionStatus(status)),\n        [dispatch]\n    );\n\n    const history = useHistory();\n    const location = useLocation();\n    const query = useQuery();\n\n    const classes = useStyles();\n\n    const refreshCaptcha = useCallback(() => {\n        API.get(\"/site/captcha\")\n            .then(response => {\n                setCaptchaData(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法加载验证码：\" + error.message,\n                    \"error\"\n                );\n            });\n    }, []);\n\n    useEffect(() => {\n        setEmail(query.get(\"username\"));\n        if (loginCaptcha && !useReCaptcha) {\n            refreshCaptcha();\n        }\n    }, [location, loginCaptcha]);\n\n    const afterLogin = data => {\n        Auth.authenticate(data);\n\n        // 设置用户主题色\n        if (data[\"preferred_theme\"] !== \"\") {\n            ApplyThemes(data[\"preferred_theme\"]);\n        }\n        enableUploaderLoad();\n\n        // 设置登录状态\n        SetSessionStatus(true);\n\n        history.push(\"/home\");\n        ToggleSnackbar(\"top\", \"right\", \"登录成功\", \"success\");\n\n        localStorage.removeItem(\"siteConfigCache\");\n    };\n\n    const authnLogin = e => {\n        e.preventDefault();\n        if (!navigator.credentials) {\n            ToggleSnackbar(\"top\", \"right\", \"当前浏览器或环境不支持\", \"warning\");\n\n            return;\n        }\n\n        setLoading(true);\n\n        API.get(\"/user/authn/\" + email)\n            .then(response => {\n                const credentialRequestOptions = response.data;\n                console.log(credentialRequestOptions);\n                credentialRequestOptions.publicKey.challenge = bufferDecode(\n                    credentialRequestOptions.publicKey.challenge\n                );\n                credentialRequestOptions.publicKey.allowCredentials.forEach(\n                    function(listItem) {\n                        listItem.id = bufferDecode(listItem.id);\n                    }\n                );\n\n                return navigator.credentials.get({\n                    publicKey: credentialRequestOptions.publicKey\n                });\n            })\n            .then(assertion => {\n                const authData = assertion.response.authenticatorData;\n                const clientDataJSON = assertion.response.clientDataJSON;\n                const rawId = assertion.rawId;\n                const sig = assertion.response.signature;\n                const userHandle = assertion.response.userHandle;\n\n                return API.post(\n                    \"/user/authn/finish/\" + email,\n                    JSON.stringify({\n                        id: assertion.id,\n                        rawId: bufferEncode(rawId),\n                        type: assertion.type,\n                        response: {\n                            authenticatorData: bufferEncode(authData),\n                            clientDataJSON: bufferEncode(clientDataJSON),\n                            signature: bufferEncode(sig),\n                            userHandle: bufferEncode(userHandle)\n                        }\n                    })\n                );\n            })\n            .then(response => {\n                afterLogin(response.data);\n            })\n            .catch(error => {\n                console.log(error);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const login = e => {\n        e.preventDefault();\n        setLoading(true);\n        API.post(\"/user/session\", {\n            userName: email,\n            Password: pwd,\n            captchaCode: captcha\n        })\n            .then(response => {\n                setLoading(false);\n                if (response.rawData.code === 203) {\n                    setTwoFA(true);\n                } else {\n                    afterLogin(response.data);\n                }\n            })\n            .catch(error => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                if (!useReCaptcha) {\n                    refreshCaptcha();\n                }\n            });\n    };\n\n    const twoFALogin = e => {\n        e.preventDefault();\n        setLoading(true);\n        API.post(\"/user/2fa\", {\n            code: faCode\n        })\n            .then(response => {\n                setLoading(false);\n                afterLogin(response.data);\n            })\n            .catch(error => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            });\n    };\n\n    return (\n        <div className={classes.layout}>\n            {!twoFA && (\n                <>\n                    <Paper className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <LockOutlinedIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            登录 {title}\n                        </Typography>\n                        {!useAuthn && (\n                            <form className={classes.form} onSubmit={login}>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <InputLabel htmlFor=\"email\">\n                                        电子邮箱\n                                    </InputLabel>\n                                    <Input\n                                        id=\"email\"\n                                        type=\"email\"\n                                        name=\"email\"\n                                        onChange={e => setEmail(e.target.value)}\n                                        autoComplete\n                                        value={email}\n                                        autoFocus\n                                    />\n                                </FormControl>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <InputLabel htmlFor=\"password\">\n                                        密码\n                                    </InputLabel>\n                                    <Input\n                                        name=\"password\"\n                                        onChange={e => setPwd(e.target.value)}\n                                        type=\"password\"\n                                        id=\"password\"\n                                        value={pwd}\n                                        autoComplete\n                                    />\n                                </FormControl>\n                                {loginCaptcha && !useReCaptcha && (\n                                    <div className={classes.captchaContainer}>\n                                        <FormControl\n                                            margin=\"normal\"\n                                            required\n                                            fullWidth\n                                        >\n                                            <InputLabel htmlFor=\"captcha\">\n                                                验证码\n                                            </InputLabel>\n                                            <Input\n                                                name=\"captcha\"\n                                                onChange={e =>\n                                                    setCaptcha(e.target.value)\n                                                }\n                                                type=\"text\"\n                                                id=\"captcha\"\n                                                value={captcha}\n                                                autoComplete\n                                            />\n                                        </FormControl>{\" \"}\n                                        <div>\n                                            {captchaData === null && (\n                                                <div\n                                                    className={\n                                                        classes.captchaPlaceholder\n                                                    }\n                                                >\n                                                    <Placeholder />\n                                                </div>\n                                            )}\n                                            {captchaData !== null && (\n                                                <img\n                                                    src={captchaData}\n                                                    alt=\"captcha\"\n                                                    onClick={refreshCaptcha}\n                                                />\n                                            )}\n                                        </div>\n                                    </div>\n                                )}\n\n                                {loginCaptcha && useReCaptcha && (\n                                    <div className={classes.captchaContainer}>\n                                        <FormControl\n                                            margin=\"normal\"\n                                            required\n                                            fullWidth\n                                        >\n                                            <div>\n                                                <ReCaptcha\n                                                    style={{\n                                                        display: \"inline-block\"\n                                                    }}\n                                                    sitekey={reCaptchaKey}\n                                                    onChange={value =>\n                                                        setCaptcha(value)\n                                                    }\n                                                    id=\"captcha\"\n                                                    name=\"captcha\"\n                                                />\n                                            </div>\n                                        </FormControl>{\" \"}\n                                    </div>\n                                )}\n\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={loading}\n                                    className={classes.submit}\n                                >\n                                    登录\n                                </Button>\n                            </form>\n                        )}\n                        {useAuthn && (\n                            <form className={classes.form}>\n                                <FormControl margin=\"normal\" required fullWidth>\n                                    <InputLabel htmlFor=\"email\">\n                                        电子邮箱\n                                    </InputLabel>\n                                    <Input\n                                        id=\"email\"\n                                        type=\"email\"\n                                        name=\"email\"\n                                        onChange={e => setEmail(e.target.value)}\n                                        autoComplete\n                                        value={email}\n                                        autoFocus\n                                    />\n                                </FormControl>\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    disabled={loading}\n                                    onClick={authnLogin}\n                                    className={classes.submit}\n                                >\n                                    下一步\n                                </Button>\n                            </form>\n                        )}\n                        <Divider />\n                        <div className={classes.link}>\n                            <div>\n                                <Link href={\"/forget\"}>忘记密码</Link>\n                            </div>\n                            <div>\n                                <Link href={\"/signup\"}>注册账号</Link>\n                            </div>\n                        </div>\n\n                        <ICPFooter />\n                    </Paper>\n\n                    {authn && (\n                        <div className={classes.authnLink}>\n                            <Button\n                                color=\"primary\"\n                                onClick={() => setUseAuthn(!useAuthn)}\n                            >\n                                {!useAuthn && (\n                                    <>\n                                        <Fingerprint\n                                            style={{\n                                                marginRight: 8\n                                            }}\n                                        />\n                                        使用外部验证器登录\n                                    </>\n                                )}\n                                {useAuthn && (\n                                    <>\n                                        <VpnKey\n                                            style={{\n                                                marginRight: 8\n                                            }}\n                                        />\n                                        使用密码登录\n                                    </>\n                                )}\n                            </Button>\n                        </div>\n                    )}\n                </>\n            )}\n            {twoFA && (\n                <Paper className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <VpnIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        二步验证\n                    </Typography>\n                    <form className={classes.form} onSubmit={twoFALogin}>\n                        <FormControl margin=\"normal\" required fullWidth>\n                            <InputLabel htmlFor=\"code\">\n                                请输入六位二步验证代码\n                            </InputLabel>\n                            <Input\n                                id=\"code\"\n                                type=\"number\"\n                                name=\"code\"\n                                onChange={event =>\n                                    setFACode(event.target.value)\n                                }\n                                autoComplete\n                                value={faCode}\n                                autoFocus\n                            />\n                        </FormControl>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            disabled={loading}\n                            className={classes.submit}\n                        >\n                            继续登录\n                        </Button>{\" \"}\n                    </form>{\" \"}\n                    <Divider />\n                </Paper>\n            )}\n        </div>\n    );\n}\n\nexport default LoginForm;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { withStyles, ButtonBase, Typography, Tooltip } from \"@material-ui/core\";\nimport TypeIcon from \"./TypeIcon\";\nimport { lighten } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n    container: {\n        padding: \"7px\"\n    },\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\"\n        },\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? \"#fff\"\n                : lighten(theme.palette.primary.main, 0.8)\n    },\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\"\n        },\n        backgroundColor: theme.palette.background.paper\n    },\n\n    button: {\n        height: \"50px\",\n        border: \"1px solid \" + theme.palette.divider,\n        width: \"100%\",\n        borderRadius: \"6px\",\n        boxSizing: \"border-box\",\n        transition:\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        display: \"flex\",\n        justifyContent: \"left\",\n        alignItems: \"initial\"\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        paddingTop: \"2px\",\n        color: theme.palette.text.secondary\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\"\n                ? theme.palette.background.paper\n                : theme.palette.primary.dark,\n        fontWeight: \"500\"\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"20px\"\n    }\n});\n\nconst mapStateToProps = state => {\n    return {\n        selected: state.explorer.selected\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nclass SmallIconCompoment extends Component {\n    state = {};\n\n    render() {\n        const { classes } = this.props;\n\n        const isSelected =\n            this.props.selected.findIndex(value => {\n                return value === this.props.file;\n            }) !== -1;\n\n        return (\n            <ButtonBase\n                focusRipple\n                className={classNames(\n                    {\n                        [classes.selected]: isSelected,\n                        [classes.notSelected]: !isSelected\n                    },\n                    classes.button\n                )}\n            >\n                <div\n                    className={classNames(classes.icon, {\n                        [classes.iconSelected]: isSelected,\n                        [classes.iconNotSelected]: !isSelected\n                    })}\n                >\n                    <TypeIcon fileName={this.props.file.name} />\n                </div>\n                <Tooltip\n                    title={this.props.file.name}\n                    aria-label={this.props.file.name}\n                >\n                    <Typography\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected\n                        })}\n                        variant=\"body2\"\n                    >\n                        {this.props.file.name}\n                    </Typography>\n                </Tooltip>\n            </ButtonBase>\n        );\n    }\n}\n\nSmallIconCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired\n};\n\nconst SmallIcon = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(SmallIconCompoment));\n\nexport default SmallIcon;\n","import {\n    ButtonBase,\n    Divider,\n    Tooltip,\n    Typography,\n    withStyles\n} from \"@material-ui/core\";\nimport { lighten } from \"@material-ui/core/styles\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport ContentLoader from \"react-content-loader\";\nimport { LazyLoadImage } from \"react-lazy-load-image-component\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router\";\nimport { baseURL } from \"../../middleware/Api\";\nimport pathHelper from \"../../utils/page\";\nimport TypeIcon from \"./TypeIcon\";\n\nconst styles = theme => ({\n    container: {\n        padding: \"7px\"\n    },\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\"\n        },\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? \"#fff\"\n                : lighten(theme.palette.primary.main, 0.8)\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\"\n        },\n        backgroundColor: theme.palette.background.paper\n    },\n\n    button: {\n        border: \"1px solid \" + theme.palette.divider,\n        width: \"100%\",\n        borderRadius: \"6px\",\n        boxSizing: \"border-box\",\n        transition:\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        alignItems: \"initial\",\n        display: \"initial\"\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\"\n                ? theme.palette.background.paper\n                : theme.palette.primary.dark,\n        fontWeight: \"500\"\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"20px\"\n    },\n    preview: {\n        overflow: \"hidden\",\n        height: \"150px\",\n        width: \"100%\",\n        borderRadius: \"6px 6px 0 0\",\n        backgroundColor: theme.palette.background.default\n    },\n    previewIcon: {\n        overflow: \"hidden\",\n        height: \"149px\",\n        width: \"100%\",\n        borderRadius: \"5px 5px 0 0\",\n        backgroundColor: theme.palette.background.paper,\n        paddingTop: \"50px\"\n    },\n    iconBig: {\n        fontSize: 50\n    },\n    picPreview: {\n        objectFit: \"cover\",\n        width: \"100%\",\n        height: \"100%\"\n    },\n    fileInfo: {\n        height: \"50px\",\n        display: \"flex\"\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        paddingTop: \"2px\",\n        color: theme.palette.text.secondary\n    },\n    hide: {\n        display: \"none\"\n    },\n    loadingAnimation: {\n        borderRadius: \"6px 6px 0 0\",\n        height: \"100%\",\n        width: \"100%\"\n    },\n    shareFix: {\n        marginLeft: \"20px\"\n    }\n});\n\nconst mapStateToProps = state => {\n    return {\n        path: state.navigator.path,\n        selected: state.explorer.selected\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nclass FileIconCompoment extends Component {\n    static defaultProps = {\n        share: false\n    };\n\n    state = {\n        loading: false,\n        showPicIcon: false\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        const isSelected =\n            this.props.selected.findIndex(value => {\n                return value === this.props.file;\n            }) !== -1;\n\n        const isSharePage = pathHelper.isSharePage(\n            this.props.location.pathname\n        );\n\n        return (\n            <div className={classes.container}>\n                <ButtonBase\n                    focusRipple\n                    className={classNames(\n                        {\n                            [classes.selected]: isSelected,\n                            [classes.notSelected]: !isSelected\n                        },\n                        classes.button\n                    )}\n                >\n                    {this.props.file.pic !== \"\" &&\n                        !this.state.showPicIcon &&\n                        this.props.file.pic !== \" \" &&\n                        this.props.file.pic !== \"null,null\" && (\n                            <div className={classes.preview}>\n                                <LazyLoadImage\n                                    className={classNames({\n                                        [classes.hide]: this.state.loading,\n                                        [classes.picPreview]: !this.state\n                                            .loading\n                                    })}\n                                    src={\n                                        baseURL +\n                                        (isSharePage\n                                            ? \"/share/thumb/\" +\n                                              window.shareInfo.key +\n                                              \"/\" +\n                                              this.props.file.id +\n                                              \"?path=\" +\n                                              encodeURIComponent(\n                                                  this.props.file.path\n                                              )\n                                            : \"/file/thumb/\" +\n                                              this.props.file.id)\n                                    }\n                                    afterLoad={() =>\n                                        this.setState({ loading: false })\n                                    }\n                                    beforeLoad={() =>\n                                        this.setState({ loading: true })\n                                    }\n                                    onError={() =>\n                                        this.setState({ showPicIcon: true })\n                                    }\n                                />\n                                <ContentLoader\n                                    height={150}\n                                    width={170}\n                                    className={classNames(\n                                        {\n                                            [classes.hide]: !this.state.loading\n                                        },\n                                        classes.loadingAnimation\n                                    )}\n                                >\n                                    <rect\n                                        x=\"0\"\n                                        y=\"0\"\n                                        width=\"100%\"\n                                        height=\"150\"\n                                    />\n                                </ContentLoader>\n                            </div>\n                        )}\n                    {(this.props.file.pic === \"\" ||\n                        this.state.showPicIcon ||\n                        this.props.file.pic === \" \" ||\n                        this.props.file.pic === \"null,null\") && (\n                        <div className={classes.previewIcon}>\n                            <TypeIcon\n                                className={classes.iconBig}\n                                fileName={this.props.file.name}\n                            />\n                        </div>\n                    )}\n                    {(this.props.file.pic === \"\" ||\n                        this.state.showPicIcon ||\n                        this.props.file.pic === \" \" ||\n                        this.props.file.pic === \"null,null\") && <Divider />}\n                    <div className={classes.fileInfo}>\n                        {!this.props.share && (\n                            <div\n                                className={classNames(classes.icon, {\n                                    [classes.iconSelected]: isSelected,\n                                    [classes.iconNotSelected]: !isSelected\n                                })}\n                            >\n                                <TypeIcon fileName={this.props.file.name} />\n                            </div>\n                        )}\n                        <Tooltip\n                            title={this.props.file.name}\n                            aria-label={this.props.file.name}\n                        >\n                            <Typography\n                                variant=\"body2\"\n                                className={classNames(classes.folderName, {\n                                    [classes.folderNameSelected]: isSelected,\n                                    [classes.folderNameNotSelected]: !isSelected,\n                                    [classes.shareFix]: this.props.share\n                                })}\n                            >\n                                {this.props.file.name}\n                            </Typography>\n                        </Tooltip>\n                    </div>\n                </ButtonBase>\n            </div>\n        );\n    }\n}\n\nFileIconCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired\n};\n\nconst FileIcon = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(FileIconCompoment)));\n\nexport default FileIcon;\n","import React from \"react\";\nimport SmallIcon from \"../SmallIcon\";\nimport FileIcon from \"../FileIcon\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\n\nconst useStyles = makeStyles(() => ({\n    dragging: {\n        width: \"200px\"\n    },\n    cardDragged: {\n        position: \"absolute\",\n        \"transform-origin\": \"bottom left\"\n    }\n}));\n\nconst diliverIcon = (object, viewMethod, classes) => {\n    return (\n        <>\n            {object.type === \"dir\" && viewMethod !== \"list\" && (\n                <div className={classes.dragging}>\n                    <SmallIcon file={object} />\n                </div>\n            )}\n            {object.type === \"file\" && viewMethod === \"icon\" && (\n                <div className={classes.dragging}>\n                    <FileIcon file={object} />\n                </div>\n            )}\n            {object.type === \"file\" && viewMethod === \"smallIcon\" && (\n                <div className={classes.dragging}>\n                    <SmallIcon file={object} />\n                </div>\n            )}\n        </>\n    );\n};\n\nconst Preview = props => {\n    const selected = useSelector(state => state.explorer.selected);\n    const viewMethod = useSelector(\n        state => state.viewUpdate.explorerViewMethod\n    );\n    const classes = useStyles();\n    return (\n        <>\n            {selected.length === 0 &&\n                diliverIcon(props.object, viewMethod, classes)}\n            {selected.length > 0 && (\n                <>\n                    {selected.slice(0, 3).map((card, i) => (\n                        <div\n                            key={card.id}\n                            className={classes.cardDragged}\n                            style={{\n                                zIndex: selected.length - i,\n                                transform: `rotateZ(${-i * 2.5}deg)`\n                            }}\n                        >\n                            {diliverIcon(card, viewMethod, classes)}\n                        </div>\n                    ))}\n                </>\n            )}\n        </>\n    );\n};\nexport default Preview;\n","import React from \"react\";\nimport { useDragLayer } from \"react-dnd\";\nimport Preview from \"./Preview\";\nconst layerStyles = {\n    position: \"fixed\",\n    pointerEvents: \"none\",\n    zIndex: 100,\n    left: 0,\n    top: 0,\n    width: \"100%\",\n    height: \"100%\"\n};\nfunction snapToGrid(x, y) {\n    const snappedX = Math.round(x / 32) * 32;\n    const snappedY = Math.round(y / 32) * 32;\n    return [snappedX, snappedY];\n}\nfunction getItemStyles(initialOffset, currentOffset, isSnapToGrid) {\n    if (!initialOffset || !currentOffset) {\n        return {\n            display: \"none\"\n        };\n    }\n    let { x, y } = currentOffset;\n    if (isSnapToGrid) {\n        x -= initialOffset.x;\n        y -= initialOffset.y;\n        [x, y] = snapToGrid(x, y);\n        x += initialOffset.x;\n        y += initialOffset.y;\n    }\n    const transform = `translate(${x}px, ${y}px)`;\n    return {\n        transform,\n        WebkitTransform: transform,\n        opacity: y > 200 ? 1 : 0.4\n    };\n}\nconst CustomDragLayer = props => {\n    const {\n        itemType,\n        isDragging,\n        item,\n        initialOffset,\n        currentOffset\n    } = useDragLayer(monitor => ({\n        item: monitor.getItem(),\n        itemType: monitor.getItemType(),\n        initialOffset: monitor.getInitialSourceClientOffset(),\n        currentOffset: monitor.getSourceClientOffset(),\n        isDragging: monitor.isDragging()\n    }));\n    function renderItem() {\n        switch (itemType) {\n            case \"object\":\n                return <Preview object={item.object} />;\n            default:\n                return null;\n        }\n    }\n    if (!isDragging) {\n        return null;\n    }\n    return (\n        <div style={layerStyles}>\n            <div\n                style={getItemStyles(\n                    initialOffset,\n                    currentOffset,\n                    props.snapToGrid\n                )}\n            >\n                {renderItem()}\n            </div>\n        </div>\n    );\n};\nexport default CustomDragLayer;\n","import { AnyAction } from \"redux\";\nimport { ThunkAction } from \"redux-thunk\";\nimport { CloudreveFile, SortMethod } from \"./../../types/index\";\n\nexport interface ActionSetFileList extends AnyAction {\n    type: \"SET_FILE_LIST\";\n    list: CloudreveFile[];\n}\nexport const setFileList = (list: CloudreveFile[]): ActionSetFileList => {\n    return {\n        type: \"SET_FILE_LIST\",\n        list\n    };\n};\n\nexport interface ActionSetDirList extends AnyAction {\n    type: \"SET_DIR_LIST\";\n    list: CloudreveFile[];\n}\nexport const setDirList = (list: CloudreveFile[]): ActionSetDirList => {\n    return {\n        type: \"SET_DIR_LIST\",\n        list\n    };\n};\n\nexport interface ActionSetSortMethod extends AnyAction {\n    type: \"SET_SORT_METHOD\";\n    method: SortMethod;\n}\nexport const setSortMethod = (method: SortMethod): ActionSetSortMethod => {\n    return {\n        type: \"SET_SORT_METHOD\",\n        method\n    };\n};\ntype SortFunc = (a: CloudreveFile, b: CloudreveFile) => number;\nconst sortMethodFuncs: Record<SortMethod, SortFunc> = {\n    sizePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return a.size - b.size;\n    },\n    sizeRes: (a: CloudreveFile, b: CloudreveFile) => {\n        return b.size - a.size;\n    },\n    namePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return a.name.localeCompare(\n            b.name,\n            navigator.languages[0] || navigator.language,\n            { numeric: true, ignorePunctuation: true }\n        );\n    },\n    nameRev: (a: CloudreveFile, b: CloudreveFile) => {\n        return b.name.localeCompare(\n            a.name,\n            navigator.languages[0] || navigator.language,\n            { numeric: true, ignorePunctuation: true }\n        );\n    },\n    timePos: (a: CloudreveFile, b: CloudreveFile) => {\n        return Date.parse(a.date) - Date.parse(b.date);\n    },\n    timeRev: (a: CloudreveFile, b: CloudreveFile) => {\n        return Date.parse(b.date) - Date.parse(a.date);\n    }\n};\n\nexport const updateFileList = (\n    list: CloudreveFile[]\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const state = getState();\n        // TODO: define state type\n        const { sortMethod } = state.viewUpdate;\n        const dirList = list.filter(x => {\n            return x.type === \"dir\";\n        });\n        const fileList = list.filter(x => {\n            return x.type === \"file\";\n        });\n        const sortFunc = sortMethodFuncs[sortMethod as SortMethod];\n        dispatch(setDirList(dirList.sort(sortFunc)));\n        dispatch(setFileList(fileList.sort(sortFunc)));\n    };\n};\n\nexport const changeSortMethod = (\n    method: SortMethod\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState): void => {\n        const state = getState();\n        const { fileList, dirList } = state.explorer;\n        const sortFunc = sortMethodFuncs[method];\n        dispatch(setSortMethod(method));\n        dispatch(setDirList(dirList.sort(sortFunc)));\n        dispatch(setFileList(fileList.sort(sortFunc)));\n    };\n};\n","import * as actions from \"./action\";\nimport * as reducers from \"./reducer\";\n\nexport default {\n    actions,\n    reducers\n};\n","import {\n    Divider,\n    ListItemIcon,\n    MenuItem,\n    Typography,\n    withStyles\n} from \"@material-ui/core\";\nimport Menu from \"@material-ui/core/Menu\";\nimport { Archive, Unarchive } from \"@material-ui/icons\";\nimport RenameIcon from \"@material-ui/icons/BorderColor\";\nimport DownloadIcon from \"@material-ui/icons/CloudDownload\";\nimport UploadIcon from \"@material-ui/icons/CloudUpload\";\nimport NewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FileCopyIcon from \"@material-ui/icons/FileCopy\";\nimport OpenFolderIcon from \"@material-ui/icons/FolderOpen\";\nimport MoveIcon from \"@material-ui/icons/Input\";\nimport LinkIcon from \"@material-ui/icons/InsertLink\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport { FolderUpload, MagnetOn, FilePlus } from \"mdi-material-ui\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n    openCompressDialog,\n    openCreateFileDialog,\n    refreshFileList\n} from \"../../actions\";\nimport {\n    changeContextMenu,\n    navigateTo,\n    openCopyDialog,\n    openCreateFolderDialog,\n    openDecompressDialog,\n    openGetSourceDialog,\n    openLoadingDialog,\n    openMoveDialog,\n    openMusicDialog,\n    openRemoteDownloadDialog,\n    openRemoveDialog,\n    openRenameDialog,\n    openShareDialog,\n    openTorrentDownloadDialog,\n    setNavigatorLoadingStatus,\n    setSelectedTarget,\n    showImgPreivew,\n    toggleSnackbar\n} from \"../../actions/index\";\nimport { isCompressFile, isPreviewable, isTorrent } from \"../../config\";\nimport Auth from \"../../middleware/Auth\";\nimport { allowSharePreview } from \"../../utils/index\";\nimport pathHelper from \"../../utils/page\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nconst styles = () => ({\n    propover: {\n        minWidth: \"200px!important\"\n    },\n    divider: {\n        marginTop: 4,\n        marginBottom: 4\n    }\n});\n\nconst mapStateToProps = state => {\n    return {\n        menuType: state.viewUpdate.contextType,\n        menuOpen: state.viewUpdate.contextOpen,\n        isMultiple: state.explorer.selectProps.isMultiple,\n        withFolder: state.explorer.selectProps.withFolder,\n        withFile: state.explorer.selectProps.withFile,\n        path: state.navigator.path,\n        selected: state.explorer.selected,\n        keywords: state.explorer.keywords\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeContextMenu: (type, open) => {\n            dispatch(changeContextMenu(type, open));\n        },\n        setNavigatorLoadingStatus: status => {\n            dispatch(setNavigatorLoadingStatus(status));\n        },\n        setSelectedTarget: targets => {\n            dispatch(setSelectedTarget(targets));\n        },\n        navigateTo: path => {\n            dispatch(navigateTo(path));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        openCreateFileDialog: () => {\n            dispatch(openCreateFileDialog());\n        },\n        openRenameDialog: () => {\n            dispatch(openRenameDialog());\n        },\n        openMoveDialog: () => {\n            dispatch(openMoveDialog());\n        },\n        openRemoveDialog: () => {\n            dispatch(openRemoveDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        showImgPreivew: first => {\n            dispatch(showImgPreivew(first));\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openRemoteDownloadDialog: () => {\n            dispatch(openRemoteDownloadDialog());\n        },\n        openTorrentDownloadDialog: () => {\n            dispatch(openTorrentDownloadDialog());\n        },\n        openGetSourceDialog: () => {\n            dispatch(openGetSourceDialog());\n        },\n        openCopyDialog: () => {\n            dispatch(openCopyDialog());\n        },\n        openLoadingDialog: text => {\n            dispatch(openLoadingDialog(text));\n        },\n        openDecompressDialog: () => {\n            dispatch(openDecompressDialog());\n        },\n        openCompressDialog: () => {\n            dispatch(openCompressDialog());\n        },\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        }\n    };\n};\n\nclass ContextMenuCompoment extends Component {\n    X = 0;\n    Y = 0;\n\n    state = {};\n\n    componentDidMount = () => {\n        window.document.addEventListener(\"mousemove\", this.setPoint);\n    };\n\n    setPoint = e => {\n        this.Y = e.clientY;\n        this.X = e.clientX;\n    };\n\n    openArchiveDownload = () => {\n        this.props.changeContextMenu(\"file\", false);\n        this.props.openLoadingDialog(\"打包中...\");\n    };\n\n    openDownload = () => {\n        if (!allowSharePreview()) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"未登录用户无法预览\",\n                \"warning\"\n            );\n            this.props.changeContextMenu(\"file\", false);\n            return;\n        }\n        this.props.changeContextMenu(\"file\", false);\n        this.props.openLoadingDialog(\"获取下载地址...\");\n    };\n\n    enterFolder = () => {\n        this.props.navigateTo(\n            this.props.path === \"/\"\n                ? this.props.path + this.props.selected[0].name\n                : this.props.path + \"/\" + this.props.selected[0].name\n        );\n    };\n\n    clickUpload = id => {\n        this.props.changeContextMenu(\"empty\", false);\n        const uploadButton = document.getElementsByClassName(id)[0];\n        if (document.body.contains(uploadButton)) {\n            uploadButton.click();\n        } else {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"上传组件还未加载完成\",\n                \"warning\"\n            );\n        }\n    };\n\n    openPreview = () => {\n        const isShare = pathHelper.isSharePage(this.props.location.pathname);\n        if (isShare) {\n            const user = Auth.GetUser();\n            if (!Auth.Check() && user && !user.group.shareDownload) {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"请先登录\",\n                    \"warning\"\n                );\n                this.props.changeContextMenu(\"file\", false);\n                return;\n            }\n        }\n        this.props.changeContextMenu(\"file\", false);\n        const previewPath =\n            this.props.selected[0].path === \"/\"\n                ? this.props.selected[0].path + this.props.selected[0].name\n                : this.props.selected[0].path +\n                  \"/\" +\n                  this.props.selected[0].name;\n        switch (isPreviewable(this.props.selected[0].name)) {\n            case \"img\":\n                this.props.showImgPreivew(this.props.selected[0]);\n                return;\n            case \"msDoc\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/doc?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/doc?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        this.props.selected[0].id\n                );\n                return;\n            case \"audio\":\n                this.props.openMusicDialog();\n                return;\n            case \"video\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/video?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/video?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        this.props.selected[0].id\n                );\n                return;\n            case \"pdf\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/pdf?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/pdf?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        this.props.selected[0].id\n                );\n                return;\n            case \"edit\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/text?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/text?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        this.props.selected[0].id\n                );\n                return;\n            case \"code\":\n                if (isShare) {\n                    this.props.history.push(\n                        this.props.selected[0].key +\n                            \"/code?name=\" +\n                            encodeURIComponent(this.props.selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                this.props.history.push(\n                    \"/code?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        this.props.selected[0].id\n                );\n                return;\n            default:\n                return;\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser();\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n\n        return (\n            <div>\n                <Menu\n                    keepMounted\n                    open={this.props.menuOpen}\n                    onClose={() =>\n                        this.props.changeContextMenu(this.props.menuType, false)\n                    }\n                    anchorReference=\"anchorPosition\"\n                    anchorPosition={{ top: this.Y, left: this.X }}\n                    anchorOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"left\"\n                    }}\n                    transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"left\"\n                    }}\n                >\n                    {this.props.menuType === \"empty\" && (\n                        <div>\n                            <MenuItem\n                                onClick={() => {\n                                    this.props.refreshFileList();\n                                    this.props.changeContextMenu(\n                                        this.props.menuType,\n                                        false\n                                    );\n                                }}\n                            >\n                                <ListItemIcon>\n                                    <RefreshIcon />\n                                </ListItemIcon>\n                                <Typography variant=\"inherit\">刷新</Typography>\n                            </MenuItem>\n                            <Divider className={classes.divider} />\n                            <MenuItem\n                                onClick={() =>\n                                    this.clickUpload(\"uploadFileForm\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <UploadIcon />\n                                </ListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    上传文件\n                                </Typography>\n                            </MenuItem>\n                            <MenuItem\n                                onClick={() =>\n                                    this.clickUpload(\"uploadFolderForm\")\n                                }\n                            >\n                                <ListItemIcon>\n                                    <FolderUpload />\n                                </ListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    上传目录\n                                </Typography>\n                            </MenuItem>\n                            {user.group.allowRemoteDownload && (\n                                <MenuItem\n                                    onClick={() =>\n                                        this.props.openRemoteDownloadDialog()\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <DownloadIcon />\n                                    </ListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        离线下载\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            <Divider className={classes.divider} />\n                            <MenuItem\n                                onClick={() =>\n                                    this.props.openCreateFolderDialog()\n                                }\n                            >\n                                <ListItemIcon>\n                                    <NewFolderIcon />\n                                </ListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    创建文件夹\n                                </Typography>\n                            </MenuItem>\n                            <MenuItem\n                                onClick={() =>\n                                    this.props.openCreateFileDialog()\n                                }\n                            >\n                                <ListItemIcon>\n                                    <FilePlus />\n                                </ListItemIcon>\n                                <Typography variant=\"inherit\">\n                                    创建文件\n                                </Typography>\n                            </MenuItem>\n                        </div>\n                    )}\n                    {this.props.menuType !== \"empty\" && (\n                        <div>\n                            {!this.props.isMultiple && this.props.withFolder && (\n                                <div>\n                                    <MenuItem onClick={this.enterFolder}>\n                                        <ListItemIcon>\n                                            <OpenFolderIcon />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            进入\n                                        </Typography>\n                                    </MenuItem>\n                                    {isHomePage && (\n                                        <Divider className={classes.divider} />\n                                    )}\n                                </div>\n                            )}\n                            {!this.props.isMultiple &&\n                                this.props.withFile &&\n                                (!this.props.share ||\n                                    this.props.share.preview) &&\n                                isPreviewable(this.props.selected[0].name) && (\n                                    <div>\n                                        <MenuItem\n                                            onClick={() => this.openPreview()}\n                                        >\n                                            <ListItemIcon>\n                                                <OpenIcon />\n                                            </ListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                打开\n                                            </Typography>\n                                        </MenuItem>\n                                    </div>\n                                )}\n\n                            {!this.props.isMultiple && this.props.withFile && (\n                                <div>\n                                    <MenuItem\n                                        onClick={() => this.openDownload()}\n                                    >\n                                        <ListItemIcon>\n                                            <DownloadIcon />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            下载\n                                        </Typography>\n                                    </MenuItem>\n                                    {isHomePage && (\n                                        <Divider className={classes.divider} />\n                                    )}\n                                </div>\n                            )}\n\n                            {(this.props.isMultiple || this.props.withFolder) &&\n                                (user.group.allowArchiveDownload ||\n                                    !isHomePage) && (\n                                    <MenuItem\n                                        onClick={() =>\n                                            this.openArchiveDownload()\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <DownloadIcon />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            打包下载\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n\n                            {!this.props.isMultiple &&\n                                this.props.withFile &&\n                                isHomePage &&\n                                user.policy.allowSource && (\n                                    <MenuItem\n                                        onClick={() =>\n                                            this.props.openGetSourceDialog()\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <LinkIcon />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            获取外链\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n\n                            {!this.props.isMultiple &&\n                                isHomePage &&\n                                user.group.allowRemoteDownload &&\n                                this.props.withFile &&\n                                isTorrent(this.props.selected[0].name) && (\n                                    <MenuItem\n                                        onClick={() =>\n                                            this.props.openTorrentDownloadDialog()\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <MagnetOn />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            创建离线下载任务\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n                            {!this.props.isMultiple &&\n                                isHomePage &&\n                                user.group.compress &&\n                                this.props.withFile &&\n                                isCompressFile(this.props.selected[0].name) && (\n                                    <MenuItem\n                                        onClick={() =>\n                                            this.props.openDecompressDialog()\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <Unarchive />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            解压缩\n                                        </Typography>\n                                    </MenuItem>\n                                )}\n\n                            {isHomePage && user.group.compress && (\n                                <MenuItem\n                                    onClick={() =>\n                                        this.props.openCompressDialog()\n                                    }\n                                >\n                                    <ListItemIcon>\n                                        <Archive />\n                                    </ListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        创建压缩文件\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <MenuItem\n                                    onClick={() => this.props.openShareDialog()}\n                                >\n                                    <ListItemIcon>\n                                        <ShareIcon />\n                                    </ListItemIcon>\n                                    <Typography variant=\"inherit\">\n                                        创建分享链接\n                                    </Typography>\n                                </MenuItem>\n                            )}\n\n                            {!this.props.isMultiple && isHomePage && (\n                                <div>\n                                    <MenuItem\n                                        onClick={() =>\n                                            this.props.openRenameDialog()\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <RenameIcon />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            重命名\n                                        </Typography>\n                                    </MenuItem>\n                                    {this.props.keywords === \"\" && (\n                                        <MenuItem\n                                            onClick={() =>\n                                                this.props.openCopyDialog()\n                                            }\n                                        >\n                                            <ListItemIcon>\n                                                <FileCopyIcon />\n                                            </ListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                复制\n                                            </Typography>\n                                        </MenuItem>\n                                    )}\n                                </div>\n                            )}\n                            {isHomePage && (\n                                <div>\n                                    {this.props.keywords === \"\" && (\n                                        <MenuItem\n                                            onClick={() =>\n                                                this.props.openMoveDialog()\n                                            }\n                                        >\n                                            <ListItemIcon>\n                                                <MoveIcon />\n                                            </ListItemIcon>\n                                            <Typography variant=\"inherit\">\n                                                移动\n                                            </Typography>\n                                        </MenuItem>\n                                    )}\n\n                                    <Divider className={classes.divider} />\n                                    <MenuItem\n                                        className={classes.propover}\n                                        onClick={() =>\n                                            this.props.openRemoveDialog()\n                                        }\n                                    >\n                                        <ListItemIcon>\n                                            <DeleteIcon />\n                                        </ListItemIcon>\n                                        <Typography variant=\"inherit\">\n                                            删除\n                                        </Typography>\n                                    </MenuItem>\n                                </div>\n                            )}\n                        </div>\n                    )}\n                </Menu>\n            </div>\n        );\n    }\n}\n\nContextMenuCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    menuType: PropTypes.string.isRequired\n};\n\nconst ContextMenu = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ContextMenuCompoment)));\n\nexport default ContextMenu;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport classNames from \"classnames\";\nimport { sizeToString } from \"../../utils/index\";\nimport { withStyles, TableCell, TableRow, Typography } from \"@material-ui/core\";\nimport TypeIcon from \"./TypeIcon\";\nimport { lighten } from \"@material-ui/core/styles\";\nimport pathHelper from \"../../utils/page\";\nimport { withRouter } from \"react-router\";\nimport KeyboardReturnIcon from \"@material-ui/icons/KeyboardReturn\";\n\nconst styles = theme => ({\n    selected: {\n        \"&:hover\": {},\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? theme.palette.background.paper\n                : lighten(theme.palette.primary.main, 0.8)\n    },\n\n    selectedShared: {\n        \"&:hover\": {},\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? lighten(theme.palette.background.paper, 0.15)\n                : lighten(theme.palette.primary.main, 0.8)\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default\n        }\n    },\n    icon: {\n        verticalAlign: \"middle\",\n        marginRight: \"20px\",\n        color: theme.palette.text.secondary\n    },\n    tableIcon: {\n        marginRight: \"20px\",\n        verticalAlign: \"middle\"\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\" ? \"#fff\" : theme.palette.primary.dark,\n        fontWeight: \"500\",\n        userSelect: \"none\"\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary,\n        userSelect: \"none\"\n    },\n    folderName: {\n        marginRight: \"20px\",\n        display: \"flex\"\n    },\n    hideAuto: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    tableRow: {\n        padding: \"10px 16px\"\n    }\n});\n\nconst mapStateToProps = state => {\n    return {\n        selected: state.explorer.selected\n    };\n};\n\nconst mapDispatchToProps = () => {\n    return {};\n};\n\nclass TableRowCompoment extends Component {\n    state = {};\n\n    render() {\n        const { classes } = this.props;\n        const isShare = pathHelper.isSharePage(this.props.location.pathname);\n\n        let icon;\n        if (this.props.file.type === \"dir\") {\n            icon = <FolderIcon className={classes.icon} />;\n        } else if (this.props.file.type === \"up\") {\n            icon = <KeyboardReturnIcon className={classes.icon} />;\n        } else {\n            icon = (\n                <TypeIcon\n                    className={classes.tableIcon}\n                    fileName={this.props.file.name}\n                />\n            );\n        }\n\n        const isSelected =\n            this.props.selected.findIndex(value => {\n                return value === this.props.file;\n            }) !== -1;\n\n        return (\n            <TableRow\n                onContextMenu={this.props.contextMenu}\n                onClick={this.props.handleClick}\n                onDoubleClick={this.props.handleDoubleClick.bind(this)}\n                className={classNames({\n                    [classes.selected]: isSelected && !isShare,\n                    [classes.selectedShared]: isSelected && isShare,\n                    [classes.notSelected]: !isSelected\n                })}\n            >\n                <TableCell\n                    component=\"th\"\n                    scope=\"row\"\n                    className={classes.tableRow}\n                >\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected\n                        })}\n                    >\n                        {icon}\n                        {this.props.file.name}\n                    </Typography>\n                </TableCell>\n                <TableCell\n                    className={classNames(classes.hideAuto, classes.tableRow)}\n                >\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected\n                        })}\n                    >\n                        {\" \"}\n                        {this.props.file.type !== \"dir\" &&\n                            this.props.file.type !== \"up\" &&\n                            sizeToString(this.props.file.size)}\n                    </Typography>\n                </TableCell>\n                <TableCell\n                    className={classNames(classes.hideAuto, classes.tableRow)}\n                >\n                    <Typography\n                        variant=\"body2\"\n                        className={classNames(classes.folderName, {\n                            [classes.folderNameSelected]: isSelected,\n                            [classes.folderNameNotSelected]: !isSelected\n                        })}\n                    >\n                        {\" \"}\n                        {this.props.file.date}\n                    </Typography>\n                </TableCell>\n            </TableRow>\n        );\n    }\n}\n\nTableRowCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    file: PropTypes.object.isRequired\n};\n\nconst TableItem = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(TableRowCompoment)));\n\nexport default TableItem;\n","import React from \"react\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport classNames from \"classnames\";\nimport { ButtonBase, Typography, Tooltip, makeStyles } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport { lighten } from \"@material-ui/core/styles\";\nconst useStyles = makeStyles(theme => ({\n    container: {\n        padding: \"7px\"\n    },\n\n    selected: {\n        \"&:hover\": {\n            border: \"1px solid #d0d0d0\"\n        },\n        backgroundColor:\n            theme.palette.type === \"dark\"\n                ? \"#fff\"\n                : lighten(theme.palette.primary.main, 0.8)\n    },\n\n    notSelected: {\n        \"&:hover\": {\n            backgroundColor: theme.palette.background.default,\n            border: \"1px solid #d0d0d0\"\n        },\n        backgroundColor: theme.palette.background.paper\n    },\n\n    button: {\n        height: \"50px\",\n        border: \"1px solid \" + theme.palette.divider,\n        width: \"100%\",\n        borderRadius: \"6px\",\n        boxSizing: \"border-box\",\n        transition:\n            \"background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms,border 250ms cubic-bezier(0.4, 0, 0.2, 1) 0ms\",\n        display: \"flex\",\n        justifyContent: \"left\",\n        alignItems: \"initial\"\n    },\n    icon: {\n        margin: \"10px 10px 10px 16px\",\n        height: \"30px\",\n        minWidth: \"30px\",\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: \"90%\",\n        paddingTop: \"2px\",\n        color: theme.palette.text.secondary\n    },\n    folderNameSelected: {\n        color:\n            theme.palette.type === \"dark\"\n                ? theme.palette.background.paper\n                : theme.palette.primary.dark,\n        fontWeight: \"500\"\n    },\n    folderNameNotSelected: {\n        color: theme.palette.text.secondary\n    },\n    folderName: {\n        marginTop: \"15px\",\n        textOverflow: \"ellipsis\",\n        whiteSpace: \"nowrap\",\n        overflow: \"hidden\",\n        marginRight: \"20px\"\n    },\n    active: {\n        border: \"2px solid \" + theme.palette.primary.light\n    }\n}));\n\nexport default function Folder({ folder, isActive }) {\n    const selected = useSelector(state => state.explorer.selected);\n\n    const classes = useStyles();\n\n    const isSelected =\n        selected.findIndex(value => {\n            return value === folder;\n        }) !== -1;\n\n    return (\n        <ButtonBase\n            focusRipple\n            className={classNames(\n                {\n                    [classes.selected]: isSelected,\n                    [classes.notSelected]: !isSelected,\n                    [classes.active]: isActive\n                },\n                classes.button\n            )}\n        >\n            <div\n                className={classNames(classes.icon, {\n                    [classes.iconSelected]: isSelected,\n                    [classes.iconNotSelected]: !isSelected\n                })}\n            >\n                <FolderIcon />\n            </div>\n            <Tooltip title={folder.name} aria-label={folder.name}>\n                <Typography\n                    variant=\"body2\"\n                    className={classNames(classes.folderName, {\n                        [classes.folderNameSelected]: isSelected,\n                        [classes.folderNameNotSelected]: !isSelected\n                    })}\n                >\n                    {folder.name}\n                </Typography>\n            </Tooltip>\n        </ButtonBase>\n    );\n}\n","import React from \"react\";\nimport { useDrop } from \"react-dnd\";\nimport Folder from \"../Folder\";\nexport default function FolderDropWarpper({ folder }) {\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => ({ folder }),\n        collect: monitor => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop()\n        })\n    });\n    const isActive = canDrop && isOver;\n    return (\n        <div ref={drop}>\n            <Folder folder={folder} isActive={isActive} />\n        </div>\n    );\n}\n","import React, { useCallback, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n    changeContextMenu,\n    setSelectedTarget,\n    selectFile as selectFileAction,\n    navigateTo,\n    showImgPreivew,\n    openMusicDialog,\n    toggleSnackbar,\n    dragAndDrop,\n    openLoadingDialog\n} from \"../../actions/index\";\nimport statusHelper from \"../../utils/page\";\nimport FileIcon from \"./FileIcon\";\nimport SmallIcon from \"./SmallIcon\";\nimport TableItem from \"./TableRow\";\nimport classNames from \"classnames\";\nimport { isPreviewable } from \"../../config\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDrag } from \"react-dnd\";\nimport { getEmptyImage } from \"react-dnd-html5-backend\";\nimport DropWarpper from \"./DnD/DropWarpper\";\nimport { useHistory, useLocation } from \"react-router-dom\";\nimport Auth from \"../../middleware/Auth\";\nimport { pathBack } from \"../../utils\";\n\nconst useStyles = makeStyles(() => ({\n    container: {\n        padding: \"7px\"\n    },\n    fixFlex: {\n        minWidth: 0\n    },\n    dragging: {\n        opacity: 0.4\n    }\n}));\n\nexport default function ObjectIcon(props) {\n    const path = useSelector(state => state.navigator.path);\n    const selected = useSelector(state => state.explorer.selected);\n    const viewMethod = useSelector(\n        state => state.viewUpdate.explorerViewMethod\n    );\n    const navigatorPath = useSelector(state => state.navigator.path);\n    const location = useLocation();\n    const history = useHistory();\n\n    const dispatch = useDispatch();\n    const ContextMenu = useCallback(\n        (type, open) => dispatch(changeContextMenu(type, open)),\n        [dispatch]\n    );\n    const SetSelectedTarget = useCallback(\n        targets => dispatch(setSelectedTarget(targets)),\n        [dispatch]\n    );\n\n    const NavitateTo = useCallback(targets => dispatch(navigateTo(targets)), [\n        dispatch\n    ]);\n    const ShowImgPreivew = useCallback(\n        targets => dispatch(showImgPreivew(targets)),\n        [dispatch]\n    );\n    const OpenMusicDialog = useCallback(() => dispatch(openMusicDialog()), [\n        dispatch\n    ]);\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const DragAndDrop = useCallback(\n        (source, target) => dispatch(dragAndDrop(source, target)),\n        [dispatch]\n    );\n    const OpenLoadingDialog = useCallback(\n        text => dispatch(openLoadingDialog(text)),\n        [dispatch]\n    );\n\n    const classes = useStyles();\n\n    const contextMenu = e => {\n        if (props.file.type === \"up\") {\n            return;\n        }\n        e.preventDefault();\n        if (\n            selected.findIndex(value => {\n                return value === props.file;\n            }) === -1\n        ) {\n            SetSelectedTarget([props.file]);\n        }\n        ContextMenu(\"file\", true);\n    };\n\n    const selectFile = e => {\n        dispatch(selectFileAction(props.file, e, props.index));\n    };\n    const enterFolder = () => {\n        NavitateTo(\n            path === \"/\" ? path + props.file.name : path + \"/\" + props.file.name\n        );\n    };\n    const handleClick = e => {\n        if (props.file.type === \"up\") {\n            NavitateTo(pathBack(navigatorPath));\n        }\n        if (\n            statusHelper.isMobile() ||\n            statusHelper.isSharePage(location.pathname)\n        ) {\n            selectFile(e);\n            if (props.file.type === \"dir\" && !e.ctrlKey) {\n                enterFolder();\n                return;\n            }\n        } else {\n            selectFile(e);\n        }\n    };\n\n    const handleDoubleClick = () => {\n        if (props.file.type === \"up\") {\n            return;\n        }\n        if (props.file.type === \"dir\") {\n            enterFolder();\n            return;\n        }\n        const isShare = statusHelper.isSharePage(location.pathname);\n        if (isShare) {\n            const user = Auth.GetUser();\n            if (!Auth.Check() && user && !user.group.shareDownload) {\n                ToggleSnackbar(\"top\", \"right\", \"请先登录\", \"warning\");\n                return;\n            }\n        }\n        if (window.shareInfo && !window.shareInfo.preview) {\n            OpenLoadingDialog(\"获取下载地址...\");\n            return;\n        }\n        const previewPath =\n            selected[0].path === \"/\"\n                ? selected[0].path + selected[0].name\n                : selected[0].path + \"/\" + selected[0].name;\n        switch (isPreviewable(selected[0].name)) {\n            case \"img\":\n                ShowImgPreivew(selected[0]);\n                return;\n            case \"msDoc\":\n                if (isShare) {\n                    history.push(\n                        selected[0].key +\n                            \"/doc?name=\" +\n                            encodeURIComponent(selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                history.push(\n                    \"/doc?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        selected[0].id\n                );\n                return;\n            case \"audio\":\n                OpenMusicDialog();\n                return;\n            case \"video\":\n                if (isShare) {\n                    history.push(\n                        selected[0].key +\n                            \"/video?name=\" +\n                            encodeURIComponent(selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                history.push(\n                    \"/video?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        selected[0].id\n                );\n                return;\n            case \"edit\":\n                if (isShare) {\n                    history.push(\n                        selected[0].key +\n                            \"/text?name=\" +\n                            encodeURIComponent(selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                history.push(\n                    \"/text?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        selected[0].id\n                );\n                return;\n            case \"pdf\":\n                if (isShare) {\n                    history.push(\n                        selected[0].key +\n                            \"/pdf?name=\" +\n                            encodeURIComponent(selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                history.push(\n                    \"/pdf?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        selected[0].id\n                );\n                return;\n            case \"code\":\n                if (isShare) {\n                    history.push(\n                        selected[0].key +\n                            \"/code?name=\" +\n                            encodeURIComponent(selected[0].name) +\n                            \"&share_path=\" +\n                            encodeURIComponent(previewPath)\n                    );\n                    return;\n                }\n                history.push(\n                    \"/code?p=\" +\n                        encodeURIComponent(previewPath) +\n                        \"&id=\" +\n                        selected[0].id\n                );\n                return;\n            default:\n                OpenLoadingDialog(\"获取下载地址...\");\n                return;\n        }\n    };\n\n    const [{ isDragging }, drag, preview] = useDrag({\n        item: {\n            object: props.file,\n            type: \"object\",\n            selected: [...selected],\n            viewMethod: viewMethod\n        },\n        end: (item, monitor) => {\n            const dropResult = monitor.getDropResult();\n            if (item && dropResult) {\n                if (dropResult.folder) {\n                    if (\n                        item.object.id !== dropResult.folder.id ||\n                        item.object.type !== dropResult.folder.type\n                    ) {\n                        DragAndDrop(item.object, dropResult.folder);\n                    }\n                }\n            }\n        },\n        canDrag: () => {\n            return (\n                !statusHelper.isMobile() &&\n                statusHelper.isHomePage(location.pathname)\n            );\n        },\n        collect: monitor => ({\n            isDragging: monitor.isDragging()\n        })\n    });\n\n    useEffect(() => {\n        preview(getEmptyImage(), { captureDraggingState: true });\n        // eslint-disable-next-line\n    }, []);\n\n    if (viewMethod === \"list\") {\n        return (\n            <TableItem\n                contextMenu={contextMenu}\n                handleClick={handleClick}\n                handleDoubleClick={handleDoubleClick.bind(this)}\n                file={props.file}\n            />\n        );\n    }\n\n    return (\n        <div\n            ref={drag}\n            className={classNames({\n                [classes.container]: viewMethod !== \"list\",\n                [classes.dragging]: isDragging\n            })}\n        >\n            <div\n                className={classes.fixFlex}\n                onContextMenu={contextMenu}\n                onClick={handleClick}\n                onDoubleClick={handleDoubleClick.bind(this)}\n            >\n                {props.file.type === \"dir\" && viewMethod !== \"list\" && (\n                    <DropWarpper folder={props.file} />\n                )}\n                {props.file.type === \"file\" && viewMethod === \"icon\" && (\n                    <FileIcon ref={drag} file={props.file} />\n                )}\n                {props.file.type === \"file\" && viewMethod === \"smallIcon\" && (\n                    <SmallIcon file={props.file} />\n                )}\n            </div>\n        </div>\n    );\n}\n","import {\n    CircularProgress,\n    Grid,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Typography,\n    withStyles\n} from \"@material-ui/core\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport SadIcon from \"@material-ui/icons/SentimentVeryDissatisfied\";\nimport EmptyIcon from \"@material-ui/icons/Unarchive\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\nimport React, { Component } from \"react\";\nimport { configure, GlobalHotKeys } from \"react-hotkeys\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n    changeContextMenu,\n    navigateTo,\n    navigateUp,\n    openRemoveDialog,\n    setSelectedTarget\n} from \"../../actions/index\";\nimport explorer from \"../../redux/explorer\";\nimport { isMac } from \"../../utils\";\nimport pathHelper from \"../../utils/page\";\nimport ContextMenu from \"./ContextMenu\";\nimport ImgPreivew from \"./ImgPreview\";\nimport ObjectIcon from \"./ObjectIcon\";\n\nconst styles = theme => ({\n    paper: {\n        padding: theme.spacing(2),\n        textAlign: \"center\",\n        color: theme.palette.text.secondary,\n        margin: \"10px\"\n    },\n    root: {\n        flexGrow: 1,\n        padding: \"10px\",\n        overflowY: \"auto\",\n        height: \"calc(100vh - 113px)\",\n        [theme.breakpoints.up(\"sm\")]: {\n            overflowY: \"auto\",\n            height: \"calc(100vh - 113px)\"\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            height: \"100%\"\n        }\n    },\n    rootTable: {\n        padding: \"0px\",\n        backgroundColor: theme.palette.background.paper.white,\n        [theme.breakpoints.up(\"sm\")]: {\n            overflowY: \"auto\",\n            height: \"calc(100vh - 113px)\"\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            height: \"100%\"\n        }\n    },\n    typeHeader: {\n        margin: \"10px 25px\",\n        color: \"#6b6b6b\",\n        fontWeight: \"500\"\n    },\n    loading: {\n        justifyContent: \"center\",\n        display: \"flex\",\n        marginTop: \"40px\"\n    },\n    errorBox: {\n        padding: theme.spacing(4)\n    },\n    errorMsg: {\n        marginTop: \"10px\"\n    },\n    emptyContainer: {\n        bottom: \"0\",\n        height: \"300px\",\n        margin: \"50px auto\",\n        width: \"300px\",\n        color: theme.palette.text.disabled,\n        textAlign: \"center\",\n        paddingTop: \"20px\"\n    },\n    emptyIcon: {\n        fontSize: \"160px\"\n    },\n    emptyInfoBig: {\n        fontSize: \"25px\",\n        color: theme.palette.text.disabled\n    },\n    emptyInfoSmall: {\n        color: theme.palette.text.hint\n    },\n    hideAuto: {\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    flexFix: {\n        minWidth: 0\n    },\n    upButton: {\n        marginLeft: \"20px\",\n        marginTop: \"10px\",\n        marginBottom: \"10px\"\n    },\n    clickAway: {\n        height: \"100%\",\n        width: \"100%\"\n    },\n    rootShare: {\n        height: \"100%\",\n        minHeight: 500\n    },\n    visuallyHidden: {\n        border: 0,\n        clip: \"rect(0 0 0 0)\",\n        height: 1,\n        margin: -1,\n        overflow: \"hidden\",\n        padding: 0,\n        position: \"absolute\",\n        top: 20,\n        width: 1\n    }\n});\n\nconst mapStateToProps = state => {\n    return {\n        path: state.navigator.path,\n        drawerDesktopOpen: state.viewUpdate.open,\n        viewMethod: state.viewUpdate.explorerViewMethod,\n        sortMethod: state.viewUpdate.sortMethod,\n        fileList: state.explorer.fileList,\n        dirList: state.explorer.dirList,\n        loading: state.viewUpdate.navigatorLoading,\n        navigatorError: state.viewUpdate.navigatorError,\n        navigatorErrorMsg: state.viewUpdate.navigatorErrorMsg,\n        keywords: state.explorer.keywords,\n        selected: state.explorer.selected\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        navigateToPath: path => {\n            dispatch(navigateTo(path));\n        },\n\n        changeContextMenu: (type, open) => {\n            dispatch(changeContextMenu(type, open));\n        },\n        navigateUp: () => {\n            dispatch(navigateUp());\n        },\n        setSelectedTarget: targets => {\n            dispatch(setSelectedTarget(targets));\n        },\n        openRemoveDialog: () => {\n            dispatch(openRemoveDialog());\n        },\n        changeSort: method => {\n            dispatch(explorer.actions.changeSortMethod(method));\n        }\n    };\n};\n\nclass ExplorerCompoment extends Component {\n    constructor() {\n        super();\n        this.keyMap = {\n            DELETE_FILE: \"del\",\n            SELECT_ALL: `${isMac() ? \"command\" : \"ctrl\"}+a`\n        };\n\n        this.handlers = {\n            DELETE_FILE: () => {\n                if (this.props.selected.length > 0 && !this.props.share) {\n                    this.props.openRemoveDialog();\n                }\n            },\n            SELECT_ALL: e => {\n                e.preventDefault();\n                if (\n                    this.props.selected.length >=\n                    this.props.dirList.length + this.props.fileList.length\n                ) {\n                    this.props.setSelectedTarget([]);\n                } else {\n                    this.props.setSelectedTarget([\n                        ...this.props.dirList,\n                        ...this.props.fileList\n                    ]);\n                }\n            }\n        };\n\n        configure({\n            ignoreTags: [\"input\", \"select\", \"textarea\"]\n        });\n    }\n\n    contextMenu = e => {\n        e.preventDefault();\n        if (\n            this.props.keywords === \"\" &&\n            !pathHelper.isSharePage(this.props.location.pathname)\n        ) {\n            if (!this.props.loading) {\n                this.props.changeContextMenu(\"empty\", true);\n            }\n        }\n    };\n\n    componentDidUpdate() {\n        this.away = 0;\n    }\n\n    ClickAway = e => {\n        const element = e.target;\n        if (element.dataset.clickaway) {\n            this.props.setSelectedTarget([]);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n\n        const showView =\n            !this.props.loading &&\n            (this.props.dirList.length !== 0 ||\n                this.props.fileList.length !== 0);\n        const listView = (\n            <Table className={classes.table}>\n                <TableHead>\n                    <TableRow>\n                        <TableCell>\n                            <TableSortLabel\n                                active={\n                                    this.props.sortMethod === \"namePos\" ||\n                                    this.props.sortMethod === \"nameRev\"\n                                }\n                                direction={\n                                    this.props.sortMethod === \"namePos\"\n                                        ? \"asc\"\n                                        : \"des\"\n                                }\n                                onClick={() => {\n                                    this.props.changeSort(\n                                        this.props.sortMethod === \"namePos\"\n                                            ? \"nameRev\"\n                                            : \"namePos\"\n                                    );\n                                }}\n                            >\n                                名称\n                                {this.props.sortMethod === \"namePos\" ||\n                                this.props.sortMethod === \"nameRev\" ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {this.props.sortMethod === \"nameRev\"\n                                            ? \"sorted descending\"\n                                            : \"sorted ascending\"}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                        <TableCell className={classes.hideAuto}>\n                            <TableSortLabel\n                                active={\n                                    this.props.sortMethod === \"sizePos\" ||\n                                    this.props.sortMethod === \"sizeRes\"\n                                }\n                                direction={\n                                    this.props.sortMethod === \"sizePos\"\n                                        ? \"asc\"\n                                        : \"des\"\n                                }\n                                onClick={() => {\n                                    this.props.changeSort(\n                                        this.props.sortMethod === \"sizePos\"\n                                            ? \"sizeRes\"\n                                            : \"sizePos\"\n                                    );\n                                }}\n                            >\n                                大小\n                                {this.props.sortMethod === \"sizePos\" ||\n                                this.props.sortMethod === \"sizeRes\" ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {this.props.sortMethod === \"sizeRes\"\n                                            ? \"sorted descending\"\n                                            : \"sorted ascending\"}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                        <TableCell className={classes.hideAuto}>\n                            <TableSortLabel\n                                active={\n                                    this.props.sortMethod === \"timePos\" ||\n                                    this.props.sortMethod === \"timeRev\"\n                                }\n                                direction={\n                                    this.props.sortMethod === \"timePos\"\n                                        ? \"asc\"\n                                        : \"des\"\n                                }\n                                onClick={() => {\n                                    this.props.changeSort(\n                                        this.props.sortMethod === \"timePos\"\n                                            ? \"timeRev\"\n                                            : \"timePos\"\n                                    );\n                                }}\n                            >\n                                日期\n                                {this.props.sortMethod === \"timePos\" ||\n                                this.props.sortMethod === \"timeRev\" ? (\n                                    <span className={classes.visuallyHidden}>\n                                        {this.props.sortMethod === \"sizeRes\"\n                                            ? \"sorted descending\"\n                                            : \"sorted ascending\"}\n                                    </span>\n                                ) : null}\n                            </TableSortLabel>\n                        </TableCell>\n                    </TableRow>\n                </TableHead>\n                <TableBody>\n                    {pathHelper.isMobile() && this.props.path !== \"/\" && (\n                        <ObjectIcon\n                            file={{\n                                type: \"up\",\n                                name: \"上级目录\"\n                            }}\n                        />\n                    )}\n                    {this.props.dirList.map((value, index) => (\n                        <ObjectIcon key={value.id} file={value} index={index} />\n                    ))}\n                    {this.props.fileList.map((value, index) => (\n                        <ObjectIcon key={value.id} file={value} index={index} />\n                    ))}\n                </TableBody>\n            </Table>\n        );\n\n        const normalView = (\n            <div className={classes.flexFix}>\n                {this.props.dirList.length !== 0 && (\n                    <>\n                        <Typography\n                            data-clickAway={\"true\"}\n                            variant=\"body2\"\n                            className={classes.typeHeader}\n                        >\n                            文件夹\n                        </Typography>\n                        <Grid\n                            data-clickAway={\"true\"}\n                            container\n                            spacing={0}\n                            alignItems=\"flex-start\"\n                        >\n                            {this.props.dirList.map((value, index) => (\n                                <Grid\n                                    key={value.id}\n                                    item\n                                    xs={6}\n                                    md={3}\n                                    sm={4}\n                                    lg={2}\n                                >\n                                    <ObjectIcon\n                                        key={value.id}\n                                        file={value}\n                                        index={index}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </>\n                )}\n                {this.props.fileList.length !== 0 && (\n                    <>\n                        <Typography\n                            data-clickAway={\"true\"}\n                            variant=\"body2\"\n                            className={classes.typeHeader}\n                        >\n                            文件\n                        </Typography>\n                        <Grid\n                            data-clickAway={\"true\"}\n                            container\n                            spacing={0}\n                            alignItems=\"flex-start\"\n                        >\n                            {this.props.fileList.map((value, index) => (\n                                <Grid\n                                    key={value.id}\n                                    item\n                                    xs={6}\n                                    md={3}\n                                    sm={4}\n                                    lg={2}\n                                >\n                                    <ObjectIcon\n                                        key={value.id}\n                                        index={index}\n                                        file={value}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </>\n                )}\n            </div>\n        );\n        const view = this.props.viewMethod === \"list\" ? listView : normalView;\n        return (\n            <div\n                onContextMenu={this.contextMenu}\n                onClick={this.ClickAway}\n                className={classNames(\n                    {\n                        [classes.root]: this.props.viewMethod !== \"list\",\n                        [classes.rootTable]: this.props.viewMethod === \"list\",\n                        [classes.rootShare]: this.props.share\n                    },\n                    classes.button\n                )}\n            >\n                <GlobalHotKeys handlers={this.handlers} keyMap={this.keyMap} />\n                <ContextMenu share={this.props.share} />\n                <ImgPreivew />\n                {this.props.navigatorError && (\n                    <Paper elevation={1} className={classes.errorBox}>\n                        <Typography variant=\"h5\" component=\"h3\">\n                            :( 请求时出现错误\n                        </Typography>\n                        <Typography\n                            color={\"textSecondary\"}\n                            className={classes.errorMsg}\n                        >\n                            {this.props.navigatorErrorMsg.message}\n                        </Typography>\n                    </Paper>\n                )}\n\n                {this.props.loading && !this.props.navigatorError && (\n                    <div className={classes.loading}>\n                        <CircularProgress />\n                    </div>\n                )}\n\n                {this.props.keywords === \"\" &&\n                    isHomePage &&\n                    this.props.dirList.length === 0 &&\n                    this.props.fileList.length === 0 &&\n                    !this.props.loading &&\n                    !this.props.navigatorError && (\n                        <div className={classes.emptyContainer}>\n                            <EmptyIcon className={classes.emptyIcon} />\n                            <div className={classes.emptyInfoBig}>\n                                拖拽文件至此\n                            </div>\n                            <div className={classes.emptyInfoSmall}>\n                                或点击右下方“上传文件”按钮添加文件\n                            </div>\n                        </div>\n                    )}\n                {((this.props.keywords !== \"\" &&\n                    this.props.dirList.length === 0 &&\n                    this.props.fileList.length === 0 &&\n                    !this.props.loading &&\n                    !this.props.navigatorError) ||\n                    (this.props.dirList.length === 0 &&\n                        this.props.fileList.length === 0 &&\n                        !this.props.loading &&\n                        !this.props.navigatorError &&\n                        !isHomePage)) && (\n                    <div className={classes.emptyContainer}>\n                        <SadIcon className={classes.emptyIcon} />\n                        <div className={classes.emptyInfoBig}>\n                            什么都没有找到\n                        </div>\n                    </div>\n                )}\n                {showView && view}\n            </div>\n        );\n    }\n}\n\nExplorerCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    path: PropTypes.string.isRequired\n};\n\nconst Explorer = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ExplorerCompoment)));\n\nexport default Explorer;\n","import React, { useEffect } from \"react\";\nimport ExpandMore from \"@material-ui/icons/ExpandMore\";\nimport { Button } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { useDrop } from \"react-dnd\";\nimport classNames from \"classnames\";\nimport MoreIcon from \"@material-ui/icons/MoreHoriz\";\n\nconst useStyles = makeStyles(theme => ({\n    expandMore: {\n        color: \"#8d8d8d\"\n    },\n    active: {\n        border: \"2px solid \" + theme.palette.primary.light\n    },\n    button: {\n        textTransform: \"none\"\n    }\n}));\n\nexport default function PathButton(props) {\n    const inputRef = React.useRef(null);\n\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => {\n            if (props.more) {\n                inputRef.current.click();\n            } else {\n                return {\n                    folder: {\n                        id: -1,\n                        path: props.path,\n                        name: props.folder === \"/\" ? \"\" : props.folder\n                    }\n                };\n            }\n        },\n        collect: monitor => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop()\n        })\n    });\n\n    const isActive = canDrop && isOver;\n\n    useEffect(() => {\n        if (props.more && isActive) {\n            inputRef.current.click();\n        }\n        // eslint-disable-next-line\n    }, [isActive]);\n\n    const classes = useStyles();\n    return (\n        <span onClick={props.onClick} ref={inputRef}>\n            <Button\n                ref={drop}\n                className={classNames(\n                    {\n                        [classes.active]: isActive\n                    },\n                    classes.button\n                )}\n                component=\"span\"\n                title={props.title}\n            >\n                {props.more && <MoreIcon />}\n                {!props.more && (\n                    <>\n                        {props.folder}\n                        {props.last && (\n                            <ExpandMore className={classes.expandMore} />\n                        )}\n                    </>\n                )}\n            </Button>\n        </span>\n    );\n}\n","import React, { useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport { MenuItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport { useDrop } from \"react-dnd\";\nimport classNames from \"classnames\";\n\nconst useStyles = makeStyles(theme => ({\n    active: {\n        border: \"2px solid \" + theme.palette.primary.light\n    }\n}));\n\nexport default function DropDownItem(props) {\n    const [{ canDrop, isOver }, drop] = useDrop({\n        accept: \"object\",\n        drop: () => {\n            console.log({\n                folder: {\n                    id: -1,\n                    path: props.path,\n                    name: props.folder === \"/\" ? \"\" : props.folder\n                }\n            });\n        },\n        collect: monitor => ({\n            isOver: monitor.isOver(),\n            canDrop: monitor.canDrop()\n        })\n    });\n\n    const isActive = canDrop && isOver;\n\n    useEffect(() => {\n        props.setActiveStatus(props.id, isActive);\n        // eslint-disable-next-line\n    }, [isActive]);\n\n    const classes = useStyles();\n    return (\n        <MenuItem\n            ref={drop}\n            className={classNames({\n                [classes.active]: isActive\n            })}\n            onClick={e => props.navigateTo(e, props.id)}\n        >\n            <ListItemIcon>\n                <FolderIcon />\n            </ListItemIcon>\n            <ListItemText primary={props.folder} />\n        </MenuItem>\n    );\n}\n","import React from \"react\";\nimport DropDownItem from \"./DropDownItem\";\n\nexport default function DropDown(props) {\n    let timer;\n    let first = props.folders.length;\n    const status = [];\n    for (let index = 0; index < props.folders.length; index++) {\n        status[index] = false;\n    }\n\n    const setActiveStatus = (id, value) => {\n        status[id] = value;\n        if (value) {\n            clearTimeout(timer);\n        } else {\n            let shouldClose = true;\n            status.forEach(element => {\n                if (element) {\n                    shouldClose = false;\n                }\n            });\n            if (shouldClose) {\n                if (first <= 0) {\n                    timer = setTimeout(() => {\n                        props.onClose();\n                    }, 100);\n                } else {\n                    first--;\n                }\n            }\n        }\n        console.log(status);\n    };\n\n    return (\n        <>\n            {props.folders.map((folder, id) => (\n                <DropDownItem\n                    key={id}\n                    path={\"/\" + props.folders.slice(0, id).join(\"/\")}\n                    navigateTo={props.navigateTo}\n                    id={id}\n                    setActiveStatus={setActiveStatus}\n                    folder={folder}\n                />\n            ))}\n        </>\n    );\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport ViewListIcon from \"@material-ui/icons/ViewList\";\nimport ViewModuleIcon from \"@material-ui/icons/ViewModule\";\nimport ViewSmallIcon from \"@material-ui/icons/ViewComfy\";\nimport TextTotateVerticalIcon from \"@material-ui/icons/TextRotateVertical\";\nimport ShareIcon from \"@material-ui/icons/Share\";\nimport NewFolderIcon from \"@material-ui/icons/CreateNewFolder\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport {\n    navigateTo,\n    navigateUp,\n    changeViewMethod,\n    setNavigatorError,\n    setNavigatorLoadingStatus,\n    refreshFileList,\n    setSelectedTarget,\n    openCreateFolderDialog,\n    openShareDialog,\n    drawerToggleAction,\n    setShareUserPopover,\n    openResaveDialog,\n    openCompressDialog\n} from \"../../../actions/index\";\nimport explorer from \"../../../redux/explorer\";\nimport API from \"../../../middleware/Api\";\nimport { setCookie, setGetParameter, fixUrlHash } from \"../../../utils/index\";\nimport {\n    withStyles,\n    Divider,\n    Menu,\n    MenuItem,\n    ListItemIcon,\n    IconButton\n} from \"@material-ui/core\";\nimport PathButton from \"./PathButton\";\nimport DropDown from \"./DropDown\";\nimport pathHelper from \"../../../utils/page\";\nimport classNames from \"classnames\";\nimport Auth from \"../../../middleware/Auth\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { Archive } from \"@material-ui/icons\";\nimport { FilePlus } from \"mdi-material-ui\";\nimport { openCreateFileDialog } from \"../../../actions\";\n\nconst mapStateToProps = state => {\n    return {\n        path: state.navigator.path,\n        refresh: state.navigator.refresh,\n        drawerDesktopOpen: state.viewUpdate.open,\n        viewMethod: state.viewUpdate.explorerViewMethod,\n        keywords: state.explorer.keywords,\n        sortMethod: state.viewUpdate.sortMethod\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        navigateToPath: path => {\n            dispatch(navigateTo(path));\n        },\n        navigateUp: () => {\n            dispatch(navigateUp());\n        },\n        changeView: method => {\n            dispatch(changeViewMethod(method));\n        },\n        changeSort: method => {\n            dispatch(explorer.actions.changeSortMethod(method));\n        },\n        setNavigatorError: (status, msg) => {\n            dispatch(setNavigatorError(status, msg));\n        },\n        updateFileList: list => {\n            dispatch(explorer.actions.updateFileList(list));\n        },\n        setNavigatorLoadingStatus: status => {\n            dispatch(setNavigatorLoadingStatus(status));\n        },\n        refreshFileList: () => {\n            dispatch(refreshFileList());\n        },\n        setSelectedTarget: target => {\n            dispatch(setSelectedTarget(target));\n        },\n        openCreateFolderDialog: () => {\n            dispatch(openCreateFolderDialog());\n        },\n        openCreateFileDialog: () => {\n            dispatch(openCreateFileDialog());\n        },\n        openShareDialog: () => {\n            dispatch(openShareDialog());\n        },\n        handleDesktopToggle: open => {\n            dispatch(drawerToggleAction(open));\n        },\n        setShareUserPopover: e => {\n            dispatch(setShareUserPopover(e));\n        },\n        openResave: key => {\n            dispatch(openResaveDialog(key));\n        },\n        openCompressDialog: () => {\n            dispatch(openCompressDialog());\n        }\n    };\n};\n\nconst delay = ms => new Promise(resolve => setTimeout(resolve, ms));\n\nconst sortOptions = [\n    \"文件名称正序\",\n    \"文件名称倒序\",\n    \"上传时间正序\",\n    \"上传时间倒序\",\n    \"文件大小正序\",\n    \"文件大小倒序\"\n];\n\nconst styles = theme => ({\n    container: {\n        [theme.breakpoints.down(\"xs\")]: {\n            display: \"none\"\n        },\n        height: \"49px\",\n        overflow: \"hidden\",\n        backgroundColor: theme.palette.background.paper\n    },\n    navigatorContainer: {\n        display: \"flex\",\n        justifyContent: \"space-between\"\n    },\n    nav: {\n        height: \"48px\",\n        padding: \"5px 15px\",\n        display: \"flex\"\n    },\n    optionContainer: {\n        paddingTop: \"6px\",\n        marginRight: \"10px\"\n    },\n    rightIcon: {\n        marginTop: \"6px\",\n        verticalAlign: \"top\",\n        color: \"#868686\"\n    },\n    expandMore: {\n        color: \"#8d8d8d\"\n    },\n    sideButton: {\n        padding: \"8px\",\n        marginRight: \"5px\"\n    },\n    roundBorder: {\n        borderRadius: \"4px 4px 0 0\"\n    }\n});\n\nclass NavigatorComponent extends Component {\n    keywords = \"\";\n    currentID = 0;\n\n    state = {\n        hidden: false,\n        hiddenFolders: [],\n        folders: [],\n        anchorEl: null,\n        hiddenMode: false,\n        anchorHidden: null,\n        anchorSort: null,\n        selectedIndex: 0\n    };\n\n    constructor(props) {\n        super(props);\n        this.element = React.createRef();\n    }\n\n    componentDidMount = () => {\n        const url = new URL(fixUrlHash(window.location.href));\n        const c = url.searchParams.get(\"path\");\n        this.renderPath(c === null ? \"/\" : c);\n\n        if (!this.props.isShare) {\n            // 如果是在个人文件管理页，首次加载时打开侧边栏\n            this.props.handleDesktopToggle(true);\n        }\n\n        // 后退操作时重新导航\n        window.onpopstate = () => {\n            const url = new URL(fixUrlHash(window.location.href));\n            const c = url.searchParams.get(\"path\");\n            if (c !== null) {\n                this.props.navigateToPath(c);\n            }\n        };\n    };\n\n    renderPath = (path = null) => {\n        this.props.setNavigatorError(false, null);\n        this.setState({\n            folders:\n                path !== null\n                    ? path.substr(1).split(\"/\")\n                    : this.props.path.substr(1).split(\"/\")\n        });\n        let newPath = path !== null ? path : this.props.path;\n        const apiURL = this.props.share\n            ? \"/share/list/\" + this.props.share.key\n            : this.keywords === \"\"\n            ? \"/directory\"\n            : \"/file/search/\";\n        newPath = this.keywords === \"\" ? newPath : this.keywords;\n\n        API.get(apiURL + encodeURIComponent(newPath))\n            .then(response => {\n                this.currentID = response.data.parent;\n                this.props.updateFileList(response.data.objects);\n                this.props.setNavigatorLoadingStatus(false);\n                const pathTemp = (path !== null\n                    ? path.substr(1).split(\"/\")\n                    : this.props.path.substr(1).split(\"/\")\n                ).join(\",\");\n                setCookie(\"path_tmp\", encodeURIComponent(pathTemp), 1);\n                if (this.keywords === \"\") {\n                    setGetParameter(\"path\", encodeURIComponent(newPath));\n                }\n            })\n            .catch(error => {\n                this.props.setNavigatorError(true, error);\n            });\n\n        this.checkOverFlow(true);\n    };\n\n    redresh = path => {\n        this.props.setNavigatorLoadingStatus(true);\n        this.props.setNavigatorError(false, \"error\");\n        this.renderPath(path);\n    };\n\n    UNSAFE_componentWillReceiveProps = nextProps => {\n        if (this.props.keywords !== nextProps.keywords) {\n            this.keywords = nextProps.keywords;\n        }\n        if (this.props.path !== nextProps.path) {\n            this.renderPath(nextProps.path);\n        }\n        if (this.props.refresh !== nextProps.refresh) {\n            this.redresh(nextProps.path);\n        }\n    };\n\n    componentWillUnmount() {\n        this.props.updateFileList([]);\n    }\n\n    componentDidUpdate = (prevProps, prevStates) => {\n        if (this.state.folders !== prevStates.folders) {\n            this.checkOverFlow(true);\n        }\n        if (this.props.drawerDesktopOpen !== prevProps.drawerDesktopOpen) {\n            delay(500).then(() => this.checkOverFlow());\n        }\n    };\n\n    checkOverFlow = force => {\n        if (this.overflowInitLock && !force) {\n            return;\n        }\n        if (this.element.current !== null) {\n            const hasOverflowingChildren =\n                this.element.current.offsetHeight <\n                    this.element.current.scrollHeight ||\n                this.element.current.offsetWidth <\n                    this.element.current.scrollWidth;\n            if (hasOverflowingChildren) {\n                this.overflowInitLock = true;\n                this.setState({ hiddenMode: true });\n            }\n            if (!hasOverflowingChildren && this.state.hiddenMode) {\n                this.setState({ hiddenMode: false });\n            }\n        }\n    };\n\n    navigateTo = (event, id) => {\n        if (id === this.state.folders.length - 1) {\n            //最后一个路径\n            this.setState({ anchorEl: event.currentTarget });\n        } else if (\n            id === -1 &&\n            this.state.folders.length === 1 &&\n            this.state.folders[0] === \"\"\n        ) {\n            this.props.refreshFileList();\n            this.handleClose();\n        } else if (id === -1) {\n            this.props.navigateToPath(\"/\");\n            this.handleClose();\n        } else {\n            this.props.navigateToPath(\n                \"/\" + this.state.folders.slice(0, id + 1).join(\"/\")\n            );\n            this.handleClose();\n        }\n    };\n\n    handleClose = () => {\n        this.setState({ anchorEl: null, anchorHidden: null, anchorSort: null });\n    };\n\n    showHiddenPath = e => {\n        this.setState({ anchorHidden: e.currentTarget });\n    };\n\n    showSortOptions = e => {\n        this.setState({ anchorSort: e.currentTarget });\n    };\n\n    performAction = e => {\n        this.handleClose();\n        if (e === \"refresh\") {\n            this.redresh();\n            return;\n        }\n        const presentPath = this.props.path.split(\"/\");\n        const newTarget = [\n            {\n                id: this.currentID,\n                type: \"dir\",\n                name: presentPath.pop(),\n                path: presentPath.length === 1 ? \"/\" : presentPath.join(\"/\")\n            }\n        ];\n        //this.props.navitateUp();\n        switch (e) {\n            case \"share\":\n                this.props.setSelectedTarget(newTarget);\n                this.props.openShareDialog();\n                break;\n            case \"newfolder\":\n                this.props.openCreateFolderDialog();\n                break;\n            case \"compress\":\n                this.props.setSelectedTarget(newTarget);\n                this.props.openCompressDialog();\n                break;\n            case \"newFile\":\n                this.props.openCreateFileDialog();\n                break;\n            default:\n                break;\n        }\n    };\n\n    toggleViewMethod = () => {\n        const newMethod =\n            this.props.viewMethod === \"icon\"\n                ? \"list\"\n                : this.props.viewMethod === \"list\"\n                ? \"smallIcon\"\n                : \"icon\";\n        Auth.SetPreference(\"view_method\", newMethod);\n        this.props.changeView(newMethod);\n    };\n\n    handleMenuItemClick = (e, index) => {\n        this.setState({ selectedIndex: index, anchorEl: null });\n        const optionsTable = {\n            0: \"namePos\",\n            1: \"nameRev\",\n            2: \"timePos\",\n            3: \"timeRev\",\n            4: \"sizePos\",\n            5: \"sizeRes\"\n        };\n        this.props.changeSort(optionsTable[index]);\n        this.handleClose();\n    };\n\n    render() {\n        const { classes } = this.props;\n        const isHomePage = pathHelper.isHomePage(this.props.location.pathname);\n        const user = Auth.GetUser();\n\n        const presentFolderMenu = (\n            <Menu\n                id=\"presentFolderMenu\"\n                anchorEl={this.state.anchorEl}\n                open={Boolean(this.state.anchorEl)}\n                onClose={this.handleClose}\n                disableAutoFocusItem={true}\n            >\n                <MenuItem onClick={() => this.performAction(\"refresh\")}>\n                    <ListItemIcon>\n                        <RefreshIcon />\n                    </ListItemIcon>\n                    刷新\n                </MenuItem>\n                {this.props.keywords === \"\" && isHomePage && (\n                    <div>\n                        <Divider />\n                        <MenuItem onClick={() => this.performAction(\"share\")}>\n                            <ListItemIcon>\n                                <ShareIcon />\n                            </ListItemIcon>\n                            分享\n                        </MenuItem>\n                        {user.group.compress && (\n                            <MenuItem\n                                onClick={() => this.performAction(\"compress\")}\n                            >\n                                <ListItemIcon>\n                                    <Archive />\n                                </ListItemIcon>\n                                压缩\n                            </MenuItem>\n                        )}\n                        <Divider />\n                        <MenuItem\n                            onClick={() => this.performAction(\"newfolder\")}\n                        >\n                            <ListItemIcon>\n                                <NewFolderIcon />\n                            </ListItemIcon>\n                            创建文件夹\n                        </MenuItem>\n                        <MenuItem onClick={() => this.performAction(\"newFile\")}>\n                            <ListItemIcon>\n                                <FilePlus />\n                            </ListItemIcon>\n                            创建文件\n                        </MenuItem>\n                    </div>\n                )}\n            </Menu>\n        );\n\n        return (\n            <div\n                className={classNames(\n                    {\n                        [classes.roundBorder]: this.props.isShare\n                    },\n                    classes.container\n                )}\n            >\n                <div className={classes.navigatorContainer}>\n                    <div className={classes.nav} ref={this.element}>\n                        <span>\n                            <PathButton\n                                folder=\"/\"\n                                path=\"/\"\n                                onClick={e => this.navigateTo(e, -1)}\n                            />\n                            <RightIcon className={classes.rightIcon} />\n                        </span>\n                        {this.state.hiddenMode && (\n                            <span>\n                                <PathButton\n                                    more\n                                    title=\"显示路径\"\n                                    onClick={this.showHiddenPath}\n                                />\n                                <Menu\n                                    id=\"hiddenPathMenu\"\n                                    anchorEl={this.state.anchorHidden}\n                                    open={Boolean(this.state.anchorHidden)}\n                                    onClose={this.handleClose}\n                                    disableAutoFocusItem={true}\n                                >\n                                    <DropDown\n                                        onClose={this.handleClose}\n                                        folders={this.state.folders.slice(\n                                            0,\n                                            -1\n                                        )}\n                                        navigateTo={this.navigateTo}\n                                    />\n                                </Menu>\n                                <RightIcon className={classes.rightIcon} />\n                                {/* <Button component=\"span\" onClick={(e)=>this.navigateTo(e,this.state.folders.length-1)}>\n                                    {this.state.folders.slice(-1)}  \n                                    <ExpandMore className={classes.expandMore}/>\n                                </Button> */}\n                                <PathButton\n                                    folder={this.state.folders.slice(-1)}\n                                    path={\n                                        \"/\" +\n                                        this.state.folders\n                                            .slice(0, -1)\n                                            .join(\"/\")\n                                    }\n                                    last={true}\n                                    onClick={e =>\n                                        this.navigateTo(\n                                            e,\n                                            this.state.folders.length - 1\n                                        )\n                                    }\n                                />\n                                {presentFolderMenu}\n                            </span>\n                        )}\n                        {!this.state.hiddenMode &&\n                            this.state.folders.map((folder, id, folders) => (\n                                <span key={id}>\n                                    {folder !== \"\" && (\n                                        <span>\n                                            <PathButton\n                                                folder={folder}\n                                                path={\n                                                    \"/\" +\n                                                    folders\n                                                        .slice(0, id)\n                                                        .join(\"/\")\n                                                }\n                                                last={id === folders.length - 1}\n                                                onClick={e =>\n                                                    this.navigateTo(e, id)\n                                                }\n                                            />\n                                            {id === folders.length - 1 &&\n                                                presentFolderMenu}\n                                            {id !== folders.length - 1 && (\n                                                <RightIcon\n                                                    className={\n                                                        classes.rightIcon\n                                                    }\n                                                />\n                                            )}\n                                        </span>\n                                    )}\n                                </span>\n                            ))}\n                    </div>\n                    <div className={classes.optionContainer}>\n                        {this.props.viewMethod === \"icon\" && (\n                            <IconButton\n                                title=\"列表展示\"\n                                className={classes.sideButton}\n                                onClick={this.toggleViewMethod}\n                            >\n                                <ViewListIcon fontSize=\"small\" />\n                            </IconButton>\n                        )}\n                        {this.props.viewMethod === \"list\" && (\n                            <IconButton\n                                title=\"小图标展示\"\n                                className={classes.sideButton}\n                                onClick={this.toggleViewMethod}\n                            >\n                                <ViewSmallIcon fontSize=\"small\" />\n                            </IconButton>\n                        )}\n                        {this.props.viewMethod === \"smallIcon\" && (\n                            <IconButton\n                                title=\"大图标展示\"\n                                className={classes.sideButton}\n                                onClick={this.toggleViewMethod}\n                            >\n                                <ViewModuleIcon fontSize=\"small\" />\n                            </IconButton>\n                        )}\n\n                        <IconButton\n                            title=\"排序方式\"\n                            className={classes.sideButton}\n                            onClick={this.showSortOptions}\n                        >\n                            <TextTotateVerticalIcon fontSize=\"small\" />\n                        </IconButton>\n                        <Menu\n                            id=\"sort-menu\"\n                            anchorEl={this.state.anchorSort}\n                            open={Boolean(this.state.anchorSort)}\n                            onClose={this.handleClose}\n                        >\n                            {sortOptions.map((option, index) => (\n                                <MenuItem\n                                    key={option}\n                                    selected={\n                                        index === this.state.selectedIndex\n                                    }\n                                    onClick={event =>\n                                        this.handleMenuItemClick(event, index)\n                                    }\n                                >\n                                    {option}\n                                </MenuItem>\n                            ))}\n                        </Menu>\n                        {this.props.share && (\n                            <IconButton\n                                title={\n                                    \"由 \" +\n                                    this.props.share.creator.nick +\n                                    \" 创建\"\n                                }\n                                className={classes.sideButton}\n                                onClick={e =>\n                                    this.props.setShareUserPopover(\n                                        e.currentTarget\n                                    )\n                                }\n                                style={{ padding: 5 }}\n                            >\n                                <Avatar\n                                    style={{ height: 23, width: 23 }}\n                                    src={\n                                        \"/api/v3/user/avatar/\" +\n                                        this.props.share.creator.key +\n                                        \"/s\"\n                                    }\n                                />\n                            </IconButton>\n                        )}\n                    </div>\n                </div>\n                <Divider />\n            </div>\n        );\n    }\n}\n\nNavigatorComponent.propTypes = {\n    classes: PropTypes.object.isRequired,\n    path: PropTypes.string.isRequired\n};\n\nconst Navigator = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(NavigatorComponent)));\n\nexport default Navigator;\n","import React, { Component } from \"react\";\nimport { DndProvider } from \"react-dnd\";\nimport HTML5Backend from \"react-dnd-html5-backend\";\nimport { connect } from \"react-redux\";\nimport { withRouter } from \"react-router-dom\";\nimport {\n    closeAllModals,\n    navigateTo,\n    setSelectedTarget,\n    toggleSnackbar\n} from \"../../actions\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport pathHelper from \"../../utils/page\";\nimport DragLayer from \"./DnD/DragLayer\";\nimport Explorer from \"./Explorer\";\nimport Modals from \"./Modals\";\nimport Navigator from \"./Navigator/Navigator\";\n\nconst mapStateToProps = () => ({});\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeSubTitle: text => {\n            dispatch(changeSubTitle(text));\n        },\n        setSelectedTarget: targets => {\n            dispatch(setSelectedTarget(targets));\n        },\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        closeAllModals: () => {\n            dispatch(closeAllModals());\n        },\n        navigateTo: path => {\n            dispatch(navigateTo(path));\n        }\n    };\n};\n\nclass FileManager extends Component {\n    constructor(props) {\n        super(props);\n        this.image = React.createRef();\n    }\n    componentWillUnmount() {\n        this.props.setSelectedTarget([]);\n        this.props.closeAllModals();\n        this.props.navigateTo(\"/\");\n    }\n\n    componentDidMount() {\n        if (pathHelper.isHomePage(this.props.location.pathname)) {\n            this.props.changeSubTitle(null);\n        }\n    }\n    render() {\n        return (\n            <DndProvider backend={HTML5Backend}>\n                <Modals share={this.props.share} />\n                <Navigator\n                    isShare={this.props.isShare}\n                    share={this.props.share}\n                />\n                <Explorer share={this.props.share} />\n                <DragLayer />\n            </DndProvider>\n        );\n    }\n}\n\nFileManager.propTypes = {};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withRouter(FileManager));\n","import React, { useCallback, useEffect } from \"react\";\nimport DPlayer from \"react-dplayer\";\nimport { Paper } from \"@material-ui/core\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport { getBaseURL } from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport pathHelper from \"../../utils/page\";\n\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: 50\n    },\n    player: {\n        borderRadius: \"4px\",\n        maxHeight: 600\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function VideoViewer() {\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n    const dispatch = useDispatch();\n    const SetSubTitle = useCallback(title => dispatch(changeSubTitle(title)), [\n        dispatch\n    ]);\n    useEffect(() => {\n        if (!pathHelper.isSharePage(location.pathname)) {\n            const path = query.get(\"p\").split(\"/\");\n            SetSubTitle(path[path.length - 1]);\n        } else {\n            SetSubTitle(query.get(\"name\"));\n        }\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    const classes = useStyles();\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.root} elevation={1}>\n                <DPlayer\n                    className={classes.player}\n                    options={{\n                        video: {\n                            url:\n                                getBaseURL() +\n                                (pathHelper.isSharePage(location.pathname)\n                                    ? \"/share/preview/\" +\n                                      id +\n                                      (query.get(\"share_path\") !== \"\"\n                                          ? \"?path=\" +\n                                            encodeURIComponent(\n                                                query.get(\"share_path\")\n                                            )\n                                          : \"\")\n                                    : \"/file/preview/\" + query.get(\"id\"))\n                        }\n                    }}\n                />\n            </Paper>\n        </div>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\n\nimport {\n    Tooltip,\n    Card,\n    Avatar,\n    CardHeader,\n    Typography,\n    Grid,\n    IconButton\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { useHistory } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation } from \"react-router\";\nimport TimeAgo from \"timeago-react\";\n\nconst useStyles = makeStyles(theme => ({\n    cardContainer: {\n        padding: theme.spacing(1)\n    },\n    card: {\n        maxWidth: 400,\n        margin: \"0 auto\"\n    },\n    actions: {\n        display: \"flex\"\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        }\n    },\n    shareTitle: {\n        maxWidth: \"200px\"\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light\n    },\n    gird: {\n        marginTop: \"30px\"\n    },\n    loadMore: {\n        textAlign: \"right\",\n        marginTop: \"20px\",\n        marginBottom: \"40px\"\n    },\n    badge: {\n        marginLeft: theme.spacing(1),\n        height: 17\n    },\n    orderSelect: {\n        textAlign: \"right\",\n        marginTop: 5\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function SearchResult() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const query = useQuery();\n    const location = useLocation();\n    const history = useHistory();\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const [page, setPage] = useState(1);\n    const [total, setTotal] = useState(0);\n    const [shareList, setShareList] = useState([]);\n    const [orderBy, setOrderBy] = useState(\"created_at DESC\");\n\n    const search = useCallback((keywords, page, orderBy) => {\n        const order = orderBy.split(\" \");\n        API.get(\n            \"/share/search?page=\" +\n                page +\n                \"&order_by=\" +\n                order[0] +\n                \"&order=\" +\n                order[1] +\n                \"&keywords=\" +\n                encodeURIComponent(keywords)\n        )\n            .then(response => {\n                if (response.data.items.length === 0) {\n                    ToggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        \"找不到符合条件的分享\",\n                        \"info\"\n                    );\n                }\n                setTotal(response.data.total);\n                setShareList(response.data.items);\n            })\n            .catch(() => {\n                ToggleSnackbar(\"top\", \"right\", \"加载失败\", \"error\");\n            });\n    }, []);\n\n    useEffect(() => {\n        const keywords = query.get(\"keywords\");\n        if (keywords) {\n            search(keywords, page, orderBy);\n        } else {\n            ToggleSnackbar(\"top\", \"right\", \"请输入搜索关键词\", \"warning\");\n        }\n    }, [location]);\n\n    const handlePageChange = (event, value) => {\n        setPage(value);\n        const keywords = query.get(\"keywords\");\n        search(keywords, value, orderBy);\n    };\n\n    const handleOrderChange = event => {\n        setOrderBy(event.target.value);\n        const keywords = query.get(\"keywords\");\n        search(keywords, page, event.target.value);\n    };\n\n    return (\n        <div className={classes.layout}>\n            <Grid container>\n                <Grid sm={6} xs={6}>\n                    <Typography color=\"textSecondary\" variant=\"h4\">\n                        搜索结果\n                    </Typography>\n                </Grid>\n                <Grid sm={6} xs={6} className={classes.orderSelect}>\n                    <FormControl>\n                        <Select\n                            color={\"secondary\"}\n                            onChange={handleOrderChange}\n                            value={orderBy}\n                        >\n                            <MenuItem value={\"created_at DESC\"}>\n                                创建日期由晚到早\n                            </MenuItem>\n                            <MenuItem value={\"created_at ASC\"}>\n                                创建日期由早到晚\n                            </MenuItem>\n                            <MenuItem value={\"downloads DESC\"}>\n                                下载次数由大到小\n                            </MenuItem>\n                            <MenuItem value={\"downloads ASC\"}>\n                                下载次数由小到大\n                            </MenuItem>\n                            <MenuItem value={\"views DESC\"}>\n                                浏览次数由大到小\n                            </MenuItem>\n                            <MenuItem value={\"views ASC\"}>\n                                浏览次数由小到大\n                            </MenuItem>\n                        </Select>\n                    </FormControl>\n                </Grid>\n            </Grid>\n            <Grid container spacing={24} className={classes.gird}>\n                {shareList.map(value => (\n                    <Grid\n                        item\n                        xs={12}\n                        sm={4}\n                        key={value.id}\n                        className={classes.cardContainer}\n                    >\n                        <Card className={classes.card}>\n                            <CardHeader\n                                avatar={\n                                    <div>\n                                        {!value.is_dir && (\n                                            <TypeIcon\n                                                fileName={\n                                                    value.source\n                                                        ? value.source.name\n                                                        : \"\"\n                                                }\n                                                isUpload\n                                            />\n                                        )}{\" \"}\n                                        {value.is_dir && (\n                                            <Avatar\n                                                className={classes.avatarFolder}\n                                            >\n                                                <FolderIcon />\n                                            </Avatar>\n                                        )}\n                                    </div>\n                                }\n                                action={\n                                    <Tooltip placement=\"top\" title=\"打开\">\n                                        <IconButton\n                                            onClick={() =>\n                                                history.push(\"/s/\" + value.key)\n                                            }\n                                        >\n                                            <OpenIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                }\n                                title={\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={\n                                            value.source\n                                                ? value.source.name\n                                                : \"[原始对象不存在]\"\n                                        }\n                                    >\n                                        <Typography\n                                            noWrap\n                                            className={classes.shareTitle}\n                                        >\n                                            {value.source\n                                                ? value.source.name\n                                                : \"[原始对象不存在]\"}{\" \"}\n                                        </Typography>\n                                    </Tooltip>\n                                }\n                                subheader={\n                                    <span>\n                                        分享于{\" \"}\n                                        <TimeAgo\n                                            datetime={value.create_date}\n                                            locale=\"zh_CN\"\n                                        />\n                                    </span>\n                                }\n                            />\n                        </Card>\n                    </Grid>\n                ))}\n            </Grid>\n            <div className={classes.loadMore}>\n                <Pagination\n                    count={Math.ceil(total / 18)}\n                    onChange={handlePageChange}\n                    color=\"secondary\"\n                />\n            </div>{\" \"}\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport OpenIcon from \"@material-ui/icons/OpenInNew\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport UnlockIcon from \"@material-ui/icons/LockOpen\";\nimport EyeIcon from \"@material-ui/icons/RemoveRedEye\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport {\n    withStyles,\n    Tooltip,\n    Card,\n    Avatar,\n    CardHeader,\n    CardActions,\n    Typography,\n    Grid,\n    IconButton,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Button,\n    TextField\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport Chip from \"@material-ui/core/Chip\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { VisibilityOff, VpnKey } from \"@material-ui/icons\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { withRouter } from \"react-router-dom\";\n\nconst styles = theme => ({\n    cardContainer: {\n        padding: theme.spacing(1)\n    },\n    card: {\n        maxWidth: 400,\n        margin: \"0 auto\"\n    },\n    actions: {\n        display: \"flex\"\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        }\n    },\n    shareTitle: {\n        maxWidth: \"200px\"\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light\n    },\n    gird: {\n        marginTop: \"30px\"\n    },\n    loadMore: {\n        textAlign: \"right\",\n        marginTop: \"20px\",\n        marginBottom: \"40px\"\n    },\n    badge: {\n        marginLeft: theme.spacing(1),\n        height: 17\n    },\n    orderSelect: {\n        textAlign: \"right\",\n        marginTop: 5\n    }\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        }\n    };\n};\n\nclass MyShareCompoment extends Component {\n    state = {\n        page: 1,\n        total: 0,\n        shareList: [],\n        showPwd: null,\n        orderBy: \"created_at DESC\"\n    };\n\n    componentDidMount = () => {\n        this.loadList(1, this.state.orderBy);\n    };\n\n    showPwd = pwd => {\n        this.setState({ showPwd: pwd });\n    };\n\n    handleClose = () => {\n        this.setState({ showPwd: null });\n    };\n\n    removeShare = id => {\n        API.delete(\"/share/\" + id)\n            .then(() => {\n                let oldList = this.state.shareList;\n                oldList = oldList.filter(value => {\n                    return value.key !== id;\n                });\n                this.setState({\n                    shareList: oldList,\n                    total: this.state.total - 1\n                });\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"分享已取消\",\n                    \"success\"\n                );\n                if (oldList.length === 0) {\n                    this.loadList(1, this.state.orderBy);\n                }\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    changePermission = id => {\n        const newPwd = Math.random()\n            .toString(36)\n            .substr(2)\n            .slice(2, 8);\n        const oldList = this.state.shareList;\n        const shareIndex = oldList.findIndex(value => {\n            return value.key === id;\n        });\n        API.patch(\"/share/\" + id, {\n            prop: \"password\",\n            value: oldList[shareIndex].password === \"\" ? newPwd : \"\"\n        })\n            .then(response => {\n                oldList[shareIndex].password = response.data;\n                this.setState({\n                    shareList: oldList\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    changePreviewOption = id => {\n        const oldList = this.state.shareList;\n        const shareIndex = oldList.findIndex(value => {\n            return value.key === id;\n        });\n        API.patch(\"/share/\" + id, {\n            prop: \"preview_enabled\",\n            value: oldList[shareIndex].preview ? \"false\" : \"true\"\n        })\n            .then(response => {\n                oldList[shareIndex].preview = response.data;\n                this.setState({\n                    shareList: oldList\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    loadList = (page, orderBy) => {\n        const order = orderBy.split(\" \");\n        API.get(\n            \"/share?page=\" +\n                page +\n                \"&order_by=\" +\n                order[0] +\n                \"&order=\" +\n                order[1]\n        )\n            .then(response => {\n                if (response.data.items.length === 0) {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        \"没有更多了\",\n                        \"info\"\n                    );\n                }\n                this.setState({\n                    total: response.data.total,\n                    shareList: response.data.items\n                });\n            })\n            .catch(() => {\n                this.props.toggleSnackbar(\"top\", \"right\", \"加载失败\", \"error\");\n            });\n    };\n\n    handlePageChange = (event, value) => {\n        this.setState({\n            page: value\n        });\n        this.loadList(value, this.state.orderBy);\n    };\n\n    handleOrderChange = event => {\n        this.setState({\n            orderBy: event.target.value\n        });\n        this.loadList(this.state.page, event.target.value);\n    };\n\n    isExpired = share => {\n        return share.expire < -1 || share.remain_downloads === 0;\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                <Grid container>\n                    <Grid sm={6} xs={6}>\n                        <Typography color=\"textSecondary\" variant=\"h4\">\n                            我的分享\n                        </Typography>\n                    </Grid>\n                    <Grid sm={6} xs={6} className={classes.orderSelect}>\n                        <FormControl>\n                            <Select\n                                color={\"secondary\"}\n                                onChange={this.handleOrderChange}\n                                value={this.state.orderBy}\n                            >\n                                <MenuItem value={\"created_at DESC\"}>\n                                    创建日期由晚到早\n                                </MenuItem>\n                                <MenuItem value={\"created_at ASC\"}>\n                                    创建日期由早到晚\n                                </MenuItem>\n                                <MenuItem value={\"downloads DESC\"}>\n                                    下载次数由大到小\n                                </MenuItem>\n                                <MenuItem value={\"downloads ASC\"}>\n                                    下载次数由小到大\n                                </MenuItem>\n                                <MenuItem value={\"views DESC\"}>\n                                    浏览次数由大到小\n                                </MenuItem>\n                                <MenuItem value={\"views ASC\"}>\n                                    浏览次数由小到大\n                                </MenuItem>\n                            </Select>\n                        </FormControl>\n                    </Grid>\n                </Grid>\n                <Grid container spacing={24} className={classes.gird}>\n                    {this.state.shareList.map(value => (\n                        <Grid\n                            item\n                            xs={12}\n                            sm={4}\n                            key={value.id}\n                            className={classes.cardContainer}\n                        >\n                            <Card className={classes.card}>\n                                <CardHeader\n                                    avatar={\n                                        <div>\n                                            {!value.is_dir && (\n                                                <TypeIcon\n                                                    fileName={\n                                                        value.source\n                                                            ? value.source.name\n                                                            : \"\"\n                                                    }\n                                                    isUpload\n                                                />\n                                            )}{\" \"}\n                                            {value.is_dir && (\n                                                <Avatar\n                                                    className={\n                                                        classes.avatarFolder\n                                                    }\n                                                >\n                                                    <FolderIcon />\n                                                </Avatar>\n                                            )}\n                                        </div>\n                                    }\n                                    title={\n                                        <Tooltip\n                                            placement=\"top\"\n                                            title={\n                                                value.source\n                                                    ? value.source.name\n                                                    : \"[原始对象不存在]\"\n                                            }\n                                        >\n                                            <Typography\n                                                noWrap\n                                                className={classes.shareTitle}\n                                            >\n                                                {value.source\n                                                    ? value.source.name\n                                                    : \"[原始对象不存在]\"}{\" \"}\n                                            </Typography>\n                                        </Tooltip>\n                                    }\n                                    subheader={\n                                        <span>\n                                            {value.create_date}\n                                            {this.isExpired(value) && (\n                                                <Chip\n                                                    size=\"small\"\n                                                    className={classes.badge}\n                                                    label=\"已失效\"\n                                                />\n                                            )}\n                                        </span>\n                                    }\n                                />\n                                <Divider />\n                                <CardActions\n                                    disableActionSpacing\n                                    style={{\n                                        display: \"block\",\n                                        textAlign: \"right\"\n                                    }}\n                                >\n                                    <Tooltip placement=\"top\" title=\"打开\">\n                                        <IconButton\n                                            onClick={() =>\n                                                this.props.history.push(\n                                                    \"/s/\" +\n                                                        value.key +\n                                                        (value.password === \"\"\n                                                            ? \"\"\n                                                            : \"?password=\" +\n                                                              value.password)\n                                                )\n                                            }\n                                        >\n                                            <OpenIcon />\n                                        </IconButton>\n                                    </Tooltip>{\" \"}\n                                    {value.password !== \"\" && (\n                                        <>\n                                            <Tooltip\n                                                placement=\"top\"\n                                                title=\"变更为公开分享\"\n                                                onClick={() =>\n                                                    this.changePermission(\n                                                        value.key\n                                                    )\n                                                }\n                                            >\n                                                <IconButton>\n                                                    <LockIcon />\n                                                </IconButton>\n                                            </Tooltip>\n                                            <Tooltip\n                                                placement=\"top\"\n                                                title=\"查看密码\"\n                                                onClick={() =>\n                                                    this.showPwd(value.password)\n                                                }\n                                            >\n                                                <IconButton>\n                                                    <VpnKey />\n                                                </IconButton>\n                                            </Tooltip>\n                                        </>\n                                    )}\n                                    {value.password === \"\" && (\n                                        <Tooltip\n                                            placement=\"top\"\n                                            title=\"变更为私密分享\"\n                                            onClick={() =>\n                                                this.changePermission(value.key)\n                                            }\n                                        >\n                                            <IconButton>\n                                                <UnlockIcon />\n                                            </IconButton>\n                                        </Tooltip>\n                                    )}\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title={\n                                            value.preview\n                                                ? \"禁止预览\"\n                                                : \"允许预览\"\n                                        }\n                                        onClick={() =>\n                                            this.changePreviewOption(value.key)\n                                        }\n                                    >\n                                        <IconButton>\n                                            {!value.preview ? (\n                                                <VisibilityOff />\n                                            ) : (\n                                                <EyeIcon />\n                                            )}\n                                        </IconButton>\n                                    </Tooltip>\n                                    <Tooltip\n                                        placement=\"top\"\n                                        title=\"取消分享\"\n                                        onClick={() =>\n                                            this.removeShare(value.key)\n                                        }\n                                    >\n                                        <IconButton>\n                                            <DeleteIcon />\n                                        </IconButton>\n                                    </Tooltip>\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))}\n                </Grid>\n                <div className={classes.loadMore}>\n                    <Pagination\n                        count={Math.ceil(this.state.total / 18)}\n                        onChange={this.handlePageChange}\n                        color=\"secondary\"\n                    />\n                </div>{\" \"}\n                <Dialog\n                    open={this.state.showPwd !== null}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle> 分享密码 </DialogTitle>{\" \"}\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            value={this.state.showPwd}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>{\" \"}\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            关闭{\" \"}\n                        </Button>{\" \"}\n                    </DialogActions>{\" \"}\n                </Dialog>{\" \"}\n            </div>\n        );\n    }\n}\n\nconst MyShare = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(MyShareCompoment)));\n\nexport default MyShare;\n","import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    CircularProgress\n} from \"@material-ui/core\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nconst useStyles = makeStyles(theme => ({\n    contentFix: {\n        padding: \"10px 24px 0px 24px\"\n    },\n    wrapper: {\n        margin: theme.spacing(1),\n        position: \"relative\"\n    },\n    buttonProgress: {\n        color: theme.palette.secondary.light,\n        position: \"absolute\",\n        top: \"50%\",\n        left: \"50%\",\n        marginTop: -12,\n        marginLeft: -12\n    },\n    content: {\n        padding: 0\n    }\n}));\n\nexport default function SelectFileDialog(props) {\n    const [files, setFiles] = useState(props.files);\n\n    useEffect(() => {\n        setFiles(props.files);\n    }, [props.files]);\n\n    const handleChange = index => event => {\n        const filesCopy = [...files];\n        // eslint-disable-next-line\n        filesCopy.map((v, k) => {\n            if (v.index === index) {\n                filesCopy[k] = {\n                    ...filesCopy[k],\n                    selected: event.target.checked ? \"true\" : \"false\"\n                };\n            }\n        });\n        setFiles(filesCopy);\n    };\n\n    const submit = () => {\n        const index = [];\n        // eslint-disable-next-line\n        files.map(v => {\n            if (v.selected === \"true\") {\n                index.push(parseInt(v.index));\n            }\n        });\n        props.onSubmit(index);\n    };\n\n    const classes = useStyles();\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <DialogTitle id=\"form-dialog-title\">选择要下载的文件</DialogTitle>\n            <DialogContent dividers={\"paper\"} className={classes.content}>\n                {files.map((v, k) => {\n                    return (\n                        <MenuItem key={k}>\n                            <FormGroup row>\n                                <FormControlLabel\n                                    control={\n                                        <Checkbox\n                                            onChange={handleChange(v.index)}\n                                            checked={v.selected === \"true\"}\n                                            value=\"checkedA\"\n                                        />\n                                    }\n                                    label={v.path}\n                                />\n                            </FormGroup>\n                        </MenuItem>\n                    );\n                })}\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <div className={classes.wrapper}>\n                    <Button\n                        color=\"primary\"\n                        onClick={submit}\n                        disabled={props.modalsLoading}\n                    >\n                        确定\n                        {props.modalsLoading && (\n                            <CircularProgress\n                                size={24}\n                                className={classes.buttonProgress}\n                            />\n                        )}\n                    </Button>\n                </div>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import {\n    Card,\n    CardContent,\n    darken,\n    IconButton,\n    lighten,\n    LinearProgress,\n    makeStyles,\n    Typography,\n    useTheme\n} from \"@material-ui/core\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Button from \"@material-ui/core/Button\";\nimport Divider from \"@material-ui/core/Divider\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport Grid from \"@material-ui/core/Grid\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { ExpandMore, HighlightOff } from \"@material-ui/icons\";\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\nimport classNames from \"classnames\";\nimport React, { useCallback, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport TimeAgo from \"timeago-react\";\nimport { toggleSnackbar } from \"../../actions\";\nimport API from \"../../middleware/Api\";\nimport { hex2bin, sizeToString } from \"../../utils\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport SelectFileDialog from \"../Modals/SelectFile\";\nimport { useHistory } from \"react-router\";\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0\n        },\n        \"&:before\": {\n            display: \"none\"\n        },\n        \"&$expanded\": {}\n    },\n    expanded: {}\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 56\n        }\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"flex\",\n        \"&$expanded\": {\n            margin: \"0\"\n        }\n    },\n    expanded: {}\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0)\n    }\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        marginTop: \"20px\",\n        justifyContent: \"space-between\"\n    },\n    iconContainer: {\n        width: \"90px\",\n        height: \"96px\",\n        padding: \" 35px 29px 29px 29px\",\n        paddingLeft: \"35px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    content: {\n        width: \"100%\",\n        minWidth: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n            borderInlineStart: \"1px \" + theme.palette.divider + \" solid\"\n        }\n    },\n    contentSide: {\n        minWidth: 0,\n        paddingTop: \"24px\",\n        paddingRight: \"28px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    iconBig: {\n        fontSize: \"30px\"\n    },\n    iconMultiple: {\n        fontSize: \"30px\",\n        color: \"#607D8B\"\n    },\n    progress: {\n        marginTop: 8,\n        marginBottom: 4\n    },\n    expand: {\n        transition: \".15s transform ease-in-out\"\n    },\n    expanded: {\n        transform: \"rotate(180deg)\"\n    },\n    subFileName: {\n        display: \"flex\"\n    },\n    subFileIcon: {\n        marginRight: \"20px\"\n    },\n    scroll: {\n        overflowY: \"auto\"\n    },\n    action: {\n        padding: theme.spacing(2),\n        textAlign: \"right\"\n    },\n    actionButton: {\n        marginLeft: theme.spacing(1)\n    },\n    info: {\n        padding: theme.spacing(2)\n    },\n    infoTitle: {\n        fontWeight: 700\n    },\n    infoValue: {\n        color: theme.palette.text.secondary\n    },\n    bitmap: {\n        width: \"100%\",\n        height: \"50px\",\n        backgroundColor: theme.palette.background.default\n    }\n}));\n\nexport default function DownloadingCard(props) {\n    const canvasRef = React.createRef();\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n\n    const [expanded, setExpanded] = React.useState(\"\");\n    const [task, setTask] = React.useState(props.task);\n    const [loading, setLoading] = React.useState(false);\n    const [selectDialogOpen, setSelectDialogOpen] = React.useState(false);\n    const [selectFileOption, setSelectFileOption] = React.useState([]);\n\n    const handleChange = panel => (event, newExpanded) => {\n        setExpanded(newExpanded ? panel : false);\n    };\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        setTask(props.task);\n    }, [props.task]);\n\n    useEffect(() => {\n        if (task.info.bitfield === \"\") {\n            return;\n        }\n        let result = \"\";\n        task.info.bitfield.match(/.{1,2}/g).forEach(str => {\n            result += hex2bin(str);\n        });\n        const canvas = canvasRef.current;\n        const context = canvas.getContext(\"2d\");\n        context.clearRect(0, 0, canvas.width, canvas.height);\n        context.strokeStyle = theme.palette.primary.main;\n        for (let i = 0; i < canvas.width; i++) {\n            let bit =\n                result[\n                    Math.round(((i + 1) / canvas.width) * task.info.numPieces)\n                ];\n            bit = bit ? bit : result.slice(-1);\n            if (bit === \"1\") {\n                context.beginPath();\n                context.moveTo(i, 0);\n                context.lineTo(i, canvas.height);\n                context.stroke();\n            }\n        }\n        // eslint-disable-next-line\n    }, [task.info.bitfield, task.info.numPieces, theme]);\n\n    const getPercent = (completed, total) => {\n        if (total === 0) {\n            return 0;\n        }\n        return (completed / total) * 100;\n    };\n\n    const activeFiles = useCallback(() => {\n        return task.info.files.filter(v => v.selected === \"true\");\n    }, [task.info.files]);\n\n    const deleteFile = index => {\n        setLoading(true);\n        const current = activeFiles();\n        const newIndex = [];\n        const newFiles = [];\n        // eslint-disable-next-line\n        current.map(v => {\n            if (v.index !== index && v.selected) {\n                newIndex.push(parseInt(v.index));\n                newFiles.push({\n                    ...v,\n                    selected: \"true\"\n                });\n            } else {\n                newFiles.push({\n                    ...v,\n                    selected: \"false\"\n                });\n            }\n        });\n        API.put(\"/aria2/select/\" + task.info.gid, {\n            indexes: newIndex\n        })\n            .then(() => {\n                setTask({\n                    ...task,\n                    info: {\n                        ...task.info,\n                        files: newFiles\n                    }\n                });\n                ToggleSnackbar(\"top\", \"right\", \"文件已删除\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const getDownloadName = useCallback(() => {\n        if (task.info.bittorrent.info.name !== \"\") {\n            return task.info.bittorrent.info.name;\n        }\n        return task.name === \".\" ? \"[未知]\" : task.name;\n    }, [task]);\n\n    const getIcon = useCallback(() => {\n        if (task.info.bittorrent.mode === \"multi\") {\n            return (\n                <Badge badgeContent={activeFiles().length} color=\"secondary\">\n                    <PermMediaIcon className={classes.iconMultiple} />\n                </Badge>\n            );\n        } else {\n            return (\n                <TypeIcon\n                    className={classes.iconBig}\n                    fileName={getDownloadName(task)}\n                />\n            );\n        }\n        // eslint-disable-next-line\n    }, [task, classes]);\n\n    const cancel = () => {\n        setLoading(true);\n        API.delete(\"/aria2/task/\" + task.info.gid)\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"任务已取消，状态会在稍后更新\",\n                    \"success\"\n                );\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    const changeSelectedFile = fileIndex => {\n        setLoading(true);\n        API.put(\"/aria2/select/\" + task.info.gid, {\n            indexes: fileIndex\n        })\n            .then(() => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"操作成功，状态会在稍后更新\",\n                    \"success\"\n                );\n                setSelectDialogOpen(false);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setLoading(false);\n            });\n    };\n\n    return (\n        <Card className={classes.card}>\n            <SelectFileDialog\n                open={selectDialogOpen}\n                onClose={() => setSelectDialogOpen(false)}\n                modalsLoading={loading}\n                files={selectFileOption}\n                onSubmit={changeSelectedFile}\n            />\n            <ExpansionPanel\n                square\n                expanded={expanded === task.info.gid}\n                onChange={handleChange(task.info.gid)}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <div className={classes.iconContainer}>{getIcon()}</div>\n                    <CardContent className={classes.content}>\n                        <Typography color=\"primary\" noWrap>\n                            <Tooltip title={getDownloadName()}>\n                                <span>{getDownloadName()}</span>\n                            </Tooltip>\n                        </Typography>\n                        <LinearProgress\n                            color=\"secondary\"\n                            variant=\"determinate\"\n                            className={classes.progress}\n                            value={getPercent(task.downloaded, task.total)}\n                        />\n                        <Typography\n                            variant=\"body2\"\n                            color=\"textSecondary\"\n                            noWrap\n                        >\n                            {task.total > 0 && (\n                                <span>\n                                    {getPercent(\n                                        task.downloaded,\n                                        task.total\n                                    ).toFixed(2)}\n                                    % -{\" \"}\n                                    {task.downloaded === 0\n                                        ? \"0Bytes\"\n                                        : sizeToString(task.downloaded)}\n                                    /\n                                    {task.total === 0\n                                        ? \"0Bytes\"\n                                        : sizeToString(task.total)}{\" \"}\n                                    -{\" \"}\n                                    {task.speed === \"0\"\n                                        ? \"0B/s\"\n                                        : sizeToString(task.speed) + \"/s\"}\n                                </span>\n                            )}\n                            {task.total === 0 && <span> - </span>}\n                        </Typography>\n                    </CardContent>\n                    <CardContent className={classes.contentSide}>\n                        <IconButton>\n                            <ExpandMore\n                                className={classNames(\n                                    {\n                                        [classes.expanded]:\n                                            expanded === task.info.gid\n                                    },\n                                    classes.expand\n                                )}\n                            />\n                        </IconButton>\n                    </CardContent>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Divider />\n                    {task.info.bittorrent.mode === \"multi\" && (\n                        <div className={classes.scroll}>\n                            <Table size=\"small\">\n                                <TableBody>\n                                    {activeFiles().map(value => {\n                                        return (\n                                            <TableRow\n                                                key={value.index}\n                                                style={{\n                                                    background:\n                                                        \"linear-gradient(to right, \" +\n                                                        (theme.palette.type ===\n                                                        \"dark\"\n                                                            ? darken(\n                                                                  theme.palette\n                                                                      .primary\n                                                                      .main,\n                                                                  0.4\n                                                              )\n                                                            : lighten(\n                                                                  theme.palette\n                                                                      .primary\n                                                                      .main,\n                                                                  0.85\n                                                              )) +\n                                                        \" 0%,\" +\n                                                        (theme.palette.type ===\n                                                        \"dark\"\n                                                            ? darken(\n                                                                  theme.palette\n                                                                      .primary\n                                                                      .main,\n                                                                  0.4\n                                                              )\n                                                            : lighten(\n                                                                  theme.palette\n                                                                      .primary\n                                                                      .main,\n                                                                  0.85\n                                                              )) +\n                                                        \" \" +\n                                                        getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(0) +\n                                                        \"%,\" +\n                                                        theme.palette.background\n                                                            .paper +\n                                                        \" \" +\n                                                        getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(0) +\n                                                        \"%,\" +\n                                                        theme.palette.background\n                                                            .paper +\n                                                        \" 100%)\"\n                                                }}\n                                            >\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography\n                                                        className={\n                                                            classes.subFileName\n                                                        }\n                                                    >\n                                                        <TypeIcon\n                                                            className={\n                                                                classes.subFileIcon\n                                                            }\n                                                            fileName={\n                                                                value.path\n                                                            }\n                                                        />\n                                                        {value.path}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {\" \"}\n                                                        {sizeToString(\n                                                            value.length\n                                                        )}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(2)}\n                                                        %\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell>\n                                                    <Tooltip title=\"删除此文件\">\n                                                        <IconButton\n                                                            onClick={() =>\n                                                                deleteFile(\n                                                                    value.index\n                                                                )\n                                                            }\n                                                            disabled={loading}\n                                                            size={\"small\"}\n                                                        >\n                                                            <HighlightOff />\n                                                        </IconButton>\n                                                    </Tooltip>\n                                                </TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                            </Table>\n                        </div>\n                    )}\n\n                    <div className={classes.action}>\n                        <Button\n                            className={classes.actionButton}\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            onClick={() =>\n                                history.push(\n                                    \"/#/home?path=\" +\n                                        encodeURIComponent(task.dst)\n                                )\n                            }\n                        >\n                            打开存放目录\n                        </Button>\n                        {task.info.bittorrent.mode === \"multi\" && (\n                            <Button\n                                className={classes.actionButton}\n                                variant=\"outlined\"\n                                color=\"secondary\"\n                                disabled={loading}\n                                onClick={() => {\n                                    setSelectDialogOpen(true);\n                                    setSelectFileOption([\n                                        ...props.task.info.files\n                                    ]);\n                                }}\n                            >\n                                选择要下载的文件\n                            </Button>\n                        )}\n                        <Button\n                            className={classes.actionButton}\n                            onClick={cancel}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            disabled={loading}\n                        >\n                            取消任务\n                        </Button>\n                    </div>\n                    <Divider />\n                    <div className={classes.info}>\n                        {task.info.bitfield !== \"\" && (\n                            <canvas\n                                width={\"700\"}\n                                height={\"100\"}\n                                ref={canvasRef}\n                                className={classes.bitmap}\n                            />\n                        )}\n\n                        <Grid container>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    更新于：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    <TimeAgo\n                                        datetime={parseInt(task.update + \"000\")}\n                                        locale=\"zh_CN\"\n                                    />\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    上传大小：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {sizeToString(task.info.uploadLength)}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    上传速度：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {sizeToString(task.info.uploadSpeed)} / s\n                                </Grid>\n                            </Grid>\n                            {task.info.bittorrent.mode !== \"\" && (\n                                <>\n                                    <Grid container xs={12} sm={8}>\n                                        <Grid\n                                            item\n                                            sm={2}\n                                            xs={4}\n                                            className={classes.infoTitle}\n                                        >\n                                            InfoHash：\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            sm={10}\n                                            xs={8}\n                                            style={{\n                                                wordBreak: \"break-all\"\n                                            }}\n                                            className={classes.infoValue}\n                                        >\n                                            {task.info.infoHash}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container xs={12} sm={4}>\n                                        <Grid\n                                            item\n                                            xs={4}\n                                            className={classes.infoTitle}\n                                        >\n                                            做种者：\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            xs={8}\n                                            className={classes.infoValue}\n                                        >\n                                            {task.info.numSeeders}\n                                        </Grid>\n                                    </Grid>\n                                    <Grid container xs={12} sm={4}>\n                                        <Grid\n                                            item\n                                            xs={4}\n                                            className={classes.infoTitle}\n                                        >\n                                            做种中：\n                                        </Grid>\n                                        <Grid\n                                            item\n                                            xs={8}\n                                            className={classes.infoValue}\n                                        >\n                                            {task.info.seeder === \"true\"\n                                                ? \"是\"\n                                                : \"否\"}\n                                        </Grid>\n                                    </Grid>\n                                </>\n                            )}\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    分片大小：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {sizeToString(task.info.pieceLength)}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={4}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    分片数量：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {task.info.numPieces}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </Card>\n    );\n}\n","import React, { useCallback } from \"react\";\nimport {\n    Card,\n    CardContent,\n    IconButton,\n    makeStyles,\n    Typography,\n    useTheme\n} from \"@material-ui/core\";\nimport { sizeToString } from \"../../utils\";\nimport PermMediaIcon from \"@material-ui/icons/PermMedia\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport MuiExpansionPanel from \"@material-ui/core/ExpansionPanel\";\nimport MuiExpansionPanelSummary from \"@material-ui/core/ExpansionPanelSummary\";\nimport MuiExpansionPanelDetails from \"@material-ui/core/ExpansionPanelDetails\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport { ExpandMore } from \"@material-ui/icons\";\nimport classNames from \"classnames\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Table from \"@material-ui/core/Table\";\nimport Badge from \"@material-ui/core/Badge\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport Button from \"@material-ui/core/Button\";\nimport Grid from \"@material-ui/core/Grid\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport { useHistory } from \"react-router\";\n\nconst ExpansionPanel = withStyles({\n    root: {\n        maxWidth: \"100%\",\n        boxShadow: \"none\",\n        \"&:not(:last-child)\": {\n            borderBottom: 0\n        },\n        \"&:before\": {\n            display: \"none\"\n        },\n        \"&$expanded\": {}\n    },\n    expanded: {}\n})(MuiExpansionPanel);\n\nconst ExpansionPanelSummary = withStyles({\n    root: {\n        minHeight: 0,\n        padding: 0,\n\n        \"&$expanded\": {\n            minHeight: 56\n        }\n    },\n    content: {\n        maxWidth: \"100%\",\n        margin: 0,\n        display: \"flex\",\n        \"&$expanded\": {\n            margin: \"0\"\n        }\n    },\n    expanded: {}\n})(MuiExpansionPanelSummary);\n\nconst ExpansionPanelDetails = withStyles(theme => ({\n    root: {\n        display: \"block\",\n        padding: theme.spacing(0)\n    }\n}))(MuiExpansionPanelDetails);\n\nconst useStyles = makeStyles(theme => ({\n    card: {\n        marginTop: \"20px\",\n        justifyContent: \"space-between\"\n    },\n    iconContainer: {\n        width: \"90px\",\n        height: \"96px\",\n        padding: \" 35px 29px 29px 29px\",\n        paddingLeft: \"35px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    content: {\n        width: \"100%\",\n        minWidth: 0,\n        [theme.breakpoints.up(\"sm\")]: {\n            borderInlineStart: \"1px \" + theme.palette.divider + \" solid\"\n        },\n        textAlign: \"left\"\n    },\n    contentSide: {\n        minWidth: 0,\n        paddingTop: \"24px\",\n        paddingRight: \"28px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"none\"\n        }\n    },\n    iconBig: {\n        fontSize: \"30px\"\n    },\n    iconMultiple: {\n        fontSize: \"30px\",\n        color: \"#607D8B\"\n    },\n    progress: {\n        marginTop: 8,\n        marginBottom: 4\n    },\n    expand: {\n        transition: \".15s transform ease-in-out\"\n    },\n    expanded: {\n        transform: \"rotate(180deg)\"\n    },\n    subFileName: {\n        display: \"flex\"\n    },\n    subFileIcon: {\n        marginRight: \"20px\"\n    },\n    scroll: {\n        overflowY: \"auto\"\n    },\n    action: {\n        padding: theme.spacing(2),\n        textAlign: \"right\"\n    },\n    actionButton: {\n        marginLeft: theme.spacing(1)\n    },\n    info: {\n        padding: theme.spacing(2)\n    },\n    infoTitle: {\n        fontWeight: 700\n    },\n    infoValue: {\n        color: theme.palette.text.secondary\n    }\n}));\n\nexport default function FinishedCard(props) {\n    const classes = useStyles();\n    const theme = useTheme();\n    const history = useHistory();\n\n    const [expanded, setExpanded] = React.useState(false);\n    const [loading, setLoading] = React.useState(false);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const handleChange = () => (event, newExpanded) => {\n        setExpanded(!!newExpanded);\n    };\n\n    const getPercent = (completed, total) => {\n        if (total === 0) {\n            return 0;\n        }\n        return (completed / total) * 100;\n    };\n\n    const cancel = () => {\n        setLoading(true);\n        API.delete(\"/aria2/task/\" + props.task.gid)\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"删除成功\", \"success\");\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                window.location.reload();\n            });\n    };\n\n    const getDownloadName = useCallback(() => {\n        return props.task.name === \".\" ? \"[未知]\" : props.task.name;\n    }, [props.task.name]);\n\n    const activeFiles = useCallback(() => {\n        return props.task.files.filter(v => v.selected === \"true\");\n    }, [props.task.files]);\n\n    const getIcon = useCallback(() => {\n        if (props.task.files.length > 1) {\n            return (\n                <Badge badgeContent={activeFiles().length} color=\"secondary\">\n                    <PermMediaIcon className={classes.iconMultiple} />\n                </Badge>\n            );\n        } else {\n            return (\n                <TypeIcon\n                    className={classes.iconBig}\n                    fileName={getDownloadName(props.task)}\n                />\n            );\n        }\n    }, [props.task, classes]);\n\n    const getTaskError = error => {\n        try {\n            const res = JSON.parse(error);\n            return res.msg + \"：\" + res.error;\n        } catch (e) {\n            return \"文件转存失败\";\n        }\n    };\n\n    return (\n        <Card className={classes.card}>\n            <ExpansionPanel\n                square\n                expanded={expanded}\n                onChange={handleChange(\"\")}\n            >\n                <ExpansionPanelSummary\n                    aria-controls=\"panel1d-content\"\n                    id=\"panel1d-header\"\n                >\n                    <div className={classes.iconContainer}>{getIcon()}</div>\n                    <CardContent className={classes.content}>\n                        <Typography color=\"primary\" noWrap>\n                            <Tooltip title={getDownloadName()}>\n                                <span>{getDownloadName()}</span>\n                            </Tooltip>\n                        </Typography>\n                        {props.task.status === 3 && (\n                            <Tooltip title={props.task.error}>\n                                <Typography\n                                    variant=\"body2\"\n                                    color=\"error\"\n                                    noWrap\n                                >\n                                    下载出错：{props.task.error}\n                                </Typography>\n                            </Tooltip>\n                        )}\n                        {props.task.status === 5 && (\n                            <Typography\n                                variant=\"body2\"\n                                color=\"textSecondary\"\n                                noWrap\n                            >\n                                已取消\n                                {props.task.error !== \"\" && (\n                                    <span>：{props.task.error}</span>\n                                )}\n                            </Typography>\n                        )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 4 && (\n                                <Typography\n                                    variant=\"body2\"\n                                    style={{\n                                        color: theme.palette.success.main\n                                    }}\n                                    noWrap\n                                >\n                                    已完成\n                                </Typography>\n                            )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 0 && (\n                                <Typography\n                                    variant=\"body2\"\n                                    style={{\n                                        color: theme.palette.success.light\n                                    }}\n                                    noWrap\n                                >\n                                    已完成，转存排队中\n                                </Typography>\n                            )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 1 && (\n                                <Typography\n                                    variant=\"body2\"\n                                    style={{\n                                        color: theme.palette.success.light\n                                    }}\n                                    noWrap\n                                >\n                                    已完成，转存处理中\n                                </Typography>\n                            )}\n                        {props.task.status === 4 &&\n                            props.task.task_status === 2 && (\n                                <Typography\n                                    variant=\"body2\"\n                                    color={\"error\"}\n                                    noWrap\n                                >\n                                    {getTaskError(props.task.task_error)}\n                                </Typography>\n                            )}\n                    </CardContent>\n                    <CardContent className={classes.contentSide}>\n                        <IconButton>\n                            <ExpandMore\n                                className={classNames(\n                                    {\n                                        [classes.expanded]: expanded\n                                    },\n                                    classes.expand\n                                )}\n                            />\n                        </IconButton>\n                    </CardContent>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Divider />\n                    {props.task.files.length > 1 && (\n                        <div className={classes.scroll}>\n                            <Table>\n                                <TableBody>\n                                    {activeFiles().map(value => {\n                                        return (\n                                            <TableRow key={value.index}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography\n                                                        className={\n                                                            classes.subFileName\n                                                        }\n                                                    >\n                                                        <TypeIcon\n                                                            className={\n                                                                classes.subFileIcon\n                                                            }\n                                                            fileName={\n                                                                value.path\n                                                            }\n                                                        />\n                                                        {value.path}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {\" \"}\n                                                        {sizeToString(\n                                                            value.length\n                                                        )}\n                                                    </Typography>\n                                                </TableCell>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    <Typography noWrap>\n                                                        {getPercent(\n                                                            value.completedLength,\n                                                            value.length\n                                                        ).toFixed(2)}\n                                                        %\n                                                    </Typography>\n                                                </TableCell>\n                                            </TableRow>\n                                        );\n                                    })}\n                                </TableBody>\n                            </Table>\n                        </div>\n                    )}\n\n                    <div className={classes.action}>\n                        <Button\n                            className={classes.actionButton}\n                            variant=\"outlined\"\n                            color=\"secondary\"\n                            onClick={() =>\n                                history.push(\n                                    \"/#/home?path=\" +\n                                        encodeURIComponent(props.task.dst)\n                                )\n                            }\n                        >\n                            打开存放目录\n                        </Button>\n                        <Button\n                            className={classes.actionButton}\n                            onClick={cancel}\n                            variant=\"contained\"\n                            color=\"secondary\"\n                            disabled={loading}\n                        >\n                            删除记录\n                        </Button>\n                    </div>\n                    <Divider />\n                    <div className={classes.info}>\n                        <Grid container>\n                            <Grid container xs={12} sm={6}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    创建日期：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {props.task.create}\n                                </Grid>\n                            </Grid>\n                            <Grid container xs={12} sm={6}>\n                                <Grid item xs={4} className={classes.infoTitle}>\n                                    最后更新：\n                                </Grid>\n                                <Grid item xs={8} className={classes.infoValue}>\n                                    {props.task.update}\n                                </Grid>\n                            </Grid>\n                        </Grid>\n                    </div>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        </Card>\n    );\n}\n","import React, { useCallback } from \"react\";\nimport { openRemoteDownloadDialog } from \"../../actions\";\nimport { useDispatch } from \"react-redux\";\nimport AutoHidden from \"./AutoHidden\";\nimport { makeStyles } from \"@material-ui/core\";\nimport Fab from \"@material-ui/core/Fab\";\nimport { Add } from \"@material-ui/icons\";\nimport Modals from \"../FileManager/Modals\";\n\nconst useStyles = makeStyles(() => ({\n    fab: {\n        margin: 0,\n        top: \"auto\",\n        right: 20,\n        bottom: 20,\n        left: \"auto\",\n        zIndex: 5,\n        position: \"fixed\"\n    }\n}));\n\nexport default function RemoteDownloadButton() {\n    const classes = useStyles();\n    const dispatch = useDispatch();\n\n    const OpenRemoteDownloadDialog = useCallback(\n        () => dispatch(openRemoteDownloadDialog()),\n        [dispatch]\n    );\n\n    return (\n        <>\n            <Modals />\n            <AutoHidden enable>\n                <Fab\n                    className={classes.fab}\n                    color=\"secondary\"\n                    onClick={() => OpenRemoteDownloadDialog()}\n                >\n                    <Add />\n                </Fab>\n            </AutoHidden>\n        </>\n    );\n}\n","import { Button, IconButton, Typography, withStyles } from \"@material-ui/core\";\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport API from \"../../middleware/Api\";\nimport DownloadingCard from \"./DownloadingCard\";\nimport FinishedCard from \"./FinishedCard\";\nimport RemoteDownloadButton from \"../Dial/Aria2\";\nimport Auth from \"../../middleware/Auth\";\n\nconst styles = theme => ({\n    actions: {\n        display: \"flex\"\n    },\n    title: {\n        marginTop: \"20px\"\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"30px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        }\n    },\n    shareTitle: {\n        maxWidth: \"200px\"\n    },\n    avatarFile: {\n        backgroundColor: theme.palette.primary.light\n    },\n    avatarFolder: {\n        backgroundColor: theme.palette.secondary.light\n    },\n    gird: {\n        marginTop: \"30px\"\n    },\n    hide: {\n        display: \"none\"\n    },\n    loadingAnimation: {\n        borderRadius: \"6px 6px 0 0\"\n    },\n    shareFix: {\n        marginLeft: \"20px\"\n    },\n    loadMore: {\n        textAlign: \"center\",\n        marginTop: \"20px\",\n        marginBottom: \"20px\"\n    },\n    margin: {\n        marginTop: theme.spacing(2)\n    }\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        }\n    };\n};\n\nclass DownloadComponent extends Component {\n    page = 0;\n    interval = 0;\n\n    state = {\n        downloading: [],\n        loading: false,\n        finishedList: [],\n        continue: true\n    };\n\n    componentDidMount = () => {\n        this.loadDownloading();\n        this.loadMore();\n    };\n\n    componentWillUnmount() {\n        clearTimeout(this.interval);\n    }\n\n    loadDownloading = () => {\n        this.setState({\n            loading: true\n        });\n        API.get(\"/aria2/downloading\")\n            .then(response => {\n                this.setState({\n                    downloading: response.data,\n                    loading: false\n                });\n                // 设定自动更新\n                clearTimeout(this.interval);\n                if (response.data.length > 0) {\n                    this.interval = setTimeout(\n                        this.loadDownloading,\n                        1000 * response.data[0].interval\n                    );\n                }\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    loadMore = () => {\n        this.setState({\n            loading: true\n        });\n        API.get(\"/aria2/finished?page=\" + ++this.page)\n            .then(response => {\n                this.setState({\n                    finishedList: [\n                        ...this.state.finishedList,\n                        ...response.data\n                    ],\n                    loading: false,\n                    continue: response.data.length >= 10\n                });\n            })\n            .catch(() => {\n                this.props.toggleSnackbar(\"top\", \"right\", \"加载失败\", \"error\");\n                this.setState({\n                    loading: false\n                });\n            });\n    };\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser();\n\n        return (\n            <div className={classes.layout}>\n                {user.group.allowRemoteDownload && <RemoteDownloadButton />}\n                <Typography\n                    color=\"textSecondary\"\n                    variant=\"h4\"\n                    className={classes.title}\n                >\n                    进行中\n                    <IconButton\n                        disabled={this.state.loading}\n                        onClick={this.loadDownloading}\n                    >\n                        <RefreshIcon />\n                    </IconButton>\n                </Typography>\n                {this.state.downloading.map((value, k) => (\n                    <DownloadingCard key={k} task={value} />\n                ))}\n                <Typography\n                    color=\"textSecondary\"\n                    variant=\"h4\"\n                    className={classes.title}\n                >\n                    已完成\n                </Typography>\n                <div className={classes.loadMore}>\n                    {this.state.finishedList.map((value, k) => {\n                        if (value.files) {\n                            return <FinishedCard key={k} task={value} />;\n                        }\n                        return null;\n                    })}\n                    <Button\n                        size=\"large\"\n                        className={classes.margin}\n                        disabled={!this.state.continue}\n                        onClick={this.loadMore}\n                    >\n                        加载更多\n                    </Button>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst Download = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(DownloadComponent));\n\nexport default Download;\n","import React from \"react\";\nimport { Facebook } from \"react-content-loader\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles(theme => ({\n    loader: {\n        width: \"80%\",\n        [theme.breakpoints.up(\"md\")]: {\n            width: \" 50%\"\n        },\n\n        marginTop: 30\n    }\n}));\n\nconst MyLoader = props => {\n    return <Facebook className={props.className} />;\n};\n\nfunction PageLoading() {\n    const classes = useStyles();\n\n    return (\n        <div\n            style={{\n                textAlign: \"center\"\n            }}\n        >\n            <MyLoader className={classes.loader} />\n        </div>\n    );\n}\n\nexport default PageLoading;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\n\nimport {\n    withStyles,\n    Button,\n    Card,\n    Divider,\n    CardHeader,\n    CardContent,\n    CardActions,\n    TextField,\n    Avatar\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\n\nconst styles = theme => ({\n    card: {\n        maxWidth: 400,\n        margin: \"0 auto\"\n    },\n    actions: {\n        display: \"flex\"\n    },\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        }\n    },\n    continue: {\n        marginLeft: \"auto\",\n        marginRight: \"10px\",\n        marginRottom: \"10px\"\n    }\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        }\n    };\n};\n\nclass LockedFileCompoment extends Component {\n    constructor(props) {\n        super(props);\n        const query = new URLSearchParams(this.props.location.search);\n        this.state = {\n            pwd: query.get(\"password\")\n        };\n    }\n\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.value });\n    };\n\n    submit = e => {\n        e.preventDefault();\n        if (this.state.pwd === \"\") {\n            return;\n        }\n        this.props.setPassowrd(this.state.pwd);\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                <Card className={classes.card}>\n                    <CardHeader\n                        avatar={\n                            <Avatar\n                                aria-label=\"Recipe\"\n                                src={\n                                    \"/api/v3/user/avatar/\" +\n                                    this.props.share.creator.key +\n                                    \"/l\"\n                                }\n                            />\n                        }\n                        title={this.props.share.creator.nick + \" 的加密分享\"}\n                        subheader={this.props.share.create_date}\n                    />\n                    <Divider />\n                    <CardContent>\n                        <form onSubmit={this.submit}>\n                            <TextField\n                                id=\"pwd\"\n                                label=\"输入分享密码\"\n                                value={this.state.pwd}\n                                onChange={this.handleChange(\"pwd\")}\n                                margin=\"normal\"\n                                type=\"password\"\n                                autoFocus\n                                fullWidth\n                                color=\"secondary\"\n                            />\n                        </form>\n                    </CardContent>\n                    <CardActions\n                        className={classes.actions}\n                        disableActionSpacing\n                    >\n                        <Button\n                            onClick={this.submit}\n                            color=\"secondary\"\n                            className={classes.continue}\n                            variant=\"contained\"\n                            disabled={\n                                this.state.pwd === \"\" || this.props.loading\n                            }\n                        >\n                            继续\n                        </Button>\n                    </CardActions>\n                </Card>\n            </div>\n        );\n    }\n}\n\nconst LockedFile = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(LockedFileCompoment)));\n\nexport default LockedFile;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Avatar, Typography } from \"@material-ui/core\";\nimport { useHistory } from \"react-router\";\nimport Link from \"@material-ui/core/Link\";\n\nconst useStyles = makeStyles(theme => ({\n    boxHeader: {\n        textAlign: \"center\",\n        padding: 24\n    },\n    avatar: {\n        backgroundColor: theme.palette.secondary.main,\n        margin: \"0 auto\",\n        width: 50,\n        height: 50,\n        cursor: \"pointer\"\n    },\n    shareDes: {\n        marginTop: 12\n    },\n    shareInfo: {\n        color: theme.palette.text.disabled,\n        fontSize: 14\n    }\n}));\n\nexport default function Creator(props) {\n    const classes = useStyles();\n    const history = useHistory();\n\n    const getSecondDes = () => {\n        if (props.share.expire > 0) {\n            if (props.share.expire >= 24 * 3600) {\n                return (\n                    Math.round(props.share.expire / (24 * 3600)) + \" 天后到期\"\n                );\n            }\n            return Math.round(props.share.expire / 3600) + \" 小时后到期\";\n        }\n        return props.share.create_date;\n    };\n\n    const userProfile = () => {\n        history.push(\"/profile/\" + props.share.creator.key);\n        props.onClose && props.onClose();\n    };\n\n    return (\n        <div className={classes.boxHeader}>\n            <Avatar\n                className={classes.avatar}\n                alt={props.share.creator.nick}\n                src={\"/api/v3/user/avatar/\" + props.share.creator.key + \"/l\"}\n                onClick={() => userProfile()}\n            />\n            <Typography variant=\"h6\" className={classes.shareDes}>\n                {props.isFolder && (\n                    <>\n                        此分享由{\" \"}\n                        <Link\n                            onClick={() => userProfile()}\n                            href={\"javascript:void(0)\"}\n                            color=\"inherit\"\n                        >\n                            {props.share.creator.nick}\n                        </Link>{\" \"}\n                        创建\n                    </>\n                )}\n                {!props.isFolder && (\n                    <>\n                        {\" \"}\n                        <Link\n                            onClick={() => userProfile()}\n                            href={\"javascript:void(0)\"}\n                            color=\"inherit\"\n                        >\n                            {props.share.creator.nick}\n                        </Link>{\" \"}\n                        向您分享了 1 个文件\n                    </>\n                )}\n            </Typography>\n            <Typography className={classes.shareInfo}>\n                {props.share.views} 次浏览 • {props.share.downloads} 次下载 •{\" \"}\n                {getSecondDes()}\n            </Typography>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { sizeToString, vhCheck } from \"../../utils\";\nimport {\n    openMusicDialog,\n    openResaveDialog,\n    setSelectedTarget,\n    showImgPreivew,\n    toggleSnackbar\n} from \"../../actions\";\nimport { isPreviewable } from \"../../config\";\nimport { withStyles, Button, Typography } from \"@material-ui/core\";\nimport Divider from \"@material-ui/core/Divider\";\nimport TypeIcon from \"../FileManager/TypeIcon\";\nimport Auth from \"../../middleware/Auth\";\nimport API from \"../../middleware/Api\";\nimport { withRouter } from \"react-router-dom\";\nimport Creator from \"./Creator\";\nimport pathHelper from \"../../utils/page\";\n\nvhCheck();\nconst styles = theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"90px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginTop: \"90px\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            marginTop: 0,\n            marginLeft: 0,\n            marginRight: 0\n        },\n        justifyContent: \"center\",\n        display: \"flex\"\n    },\n    player: {\n        borderRadius: \"4px\"\n    },\n    fileCotainer: {\n        width: \"200px\",\n        margin: \"0 auto\"\n    },\n    buttonCotainer: {\n        width: \"400px\",\n        margin: \"0 auto\",\n        textAlign: \"center\",\n        marginTop: \"20px\"\n    },\n    paper: {\n        padding: theme.spacing(2)\n    },\n    icon: {\n        borderRadius: \"10%\",\n        marginTop: 2\n    },\n\n    box: {\n        width: \"100%\",\n        maxWidth: 440,\n        backgroundColor: theme.palette.background.paper,\n        borderRadius: 12,\n        boxShadow: \"0 8px 16px rgba(29,39,55,.25)\",\n        [theme.breakpoints.down(\"sm\")]: {\n            height: \"calc(var(--vh, 100vh) - 56px)\",\n            borderRadius: 0,\n            maxWidth: 1000\n        },\n        display: \"flex\",\n        flexDirection: \"column\"\n    },\n    boxContent: {\n        padding: 24,\n        display: \"flex\",\n        flex: \"1\"\n    },\n    fileName: {\n        marginLeft: 20\n    },\n    fileSize: {\n        color: theme.palette.text.disabled,\n        fontSize: 14\n    },\n    boxFooter: {\n        display: \"flex\",\n        padding: \"20px 16px\",\n        justifyContent: \"space-between\"\n    },\n    downloadButton: {\n        marginLeft: 8\n    }\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        setSelectedTarget: targets => {\n            dispatch(setSelectedTarget(targets));\n        },\n        showImgPreivew: first => {\n            dispatch(showImgPreivew(first));\n        },\n        openResave: key => {\n            dispatch(openResaveDialog(key));\n        }\n    };\n};\n\nconst Modals = React.lazy(() => import(\"../FileManager/Modals\"));\nconst ImgPreview = React.lazy(() => import(\"../FileManager/ImgPreview\"));\n\nclass SharedFileCompoment extends Component {\n    state = {\n        anchorEl: null,\n        open: false,\n        purchaseCallback: null,\n        loading: false\n    };\n\n    downloaded = false;\n\n    preview = () => {\n        if (pathHelper.isSharePage(this.props.location.pathname)) {\n            const user = Auth.GetUser();\n            if (!Auth.Check() && user && !user.group.shareDownload) {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"请先登录\",\n                    \"warning\"\n                );\n                return;\n            }\n        }\n\n        switch (isPreviewable(this.props.share.source.name)) {\n            case \"img\":\n                this.props.showImgPreivew({\n                    key: this.props.share.key,\n                    name: this.props.share.source.name\n                });\n                return;\n            case \"msDoc\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/doc?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"audio\":\n                this.props.setSelectedTarget([\n                    {\n                        key: this.props.share.key,\n                        type: \"share\"\n                    }\n                ]);\n                this.props.openMusicDialog();\n                return;\n            case \"video\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/video?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"edit\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/text?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"pdf\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/pdf?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            case \"code\":\n                this.props.history.push(\n                    this.props.share.key +\n                        \"/code?name=\" +\n                        encodeURIComponent(this.props.share.source.name)\n                );\n                return;\n            default:\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"此文件无法预览\",\n                    \"warning\"\n                );\n                return;\n        }\n    };\n\n    componentWillUnmount() {\n        this.props.setSelectedTarget([]);\n    }\n\n    scoreHandle = callback => event => {\n        callback(event);\n    };\n\n    download = () => {\n        this.setState({ loading: true });\n        API.put(\"/share/download/\" + this.props.share.key)\n            .then(response => {\n                this.downloaded = true;\n                window.location.assign(response.data);\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\"\n                );\n            })\n            .then(() => {\n                this.setState({ loading: false });\n            });\n    };\n\n    render() {\n        const { classes } = this.props;\n        return (\n            <div className={classes.layout}>\n                <Modals />\n                <ImgPreview />\n                <div className={classes.box}>\n                    <Creator share={this.props.share} />\n                    <Divider />\n                    <div className={classes.boxContent}>\n                        <TypeIcon\n                            className={classes.icon}\n                            isUpload\n                            fileName={this.props.share.source.name}\n                        />\n                        <div className={classes.fileName}>\n                            <Typography style={{ wordBreak: \"break-all\" }}>\n                                {this.props.share.source.name}\n                            </Typography>\n                            <Typography className={classes.fileSize}>\n                                {sizeToString(this.props.share.source.size)}\n                            </Typography>\n                        </div>\n                    </div>\n                    <Divider />\n                    <div className={classes.boxFooter}>\n                        <div className={classes.actionLeft}>\n                            {this.props.share.preview && (\n                                <Button\n                                    variant=\"outlined\"\n                                    color=\"secondary\"\n                                    onClick={this.scoreHandle(this.preview)}\n                                    disabled={this.state.loading}\n                                >\n                                    预览\n                                </Button>\n                            )}\n                        </div>\n                        <div className={classes.actions}>\n                            <Button\n                                variant=\"contained\"\n                                color=\"secondary\"\n                                className={classes.downloadButton}\n                                onClick={this.scoreHandle(this.download)}\n                                disabled={this.state.loading}\n                            >\n                                下载\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst SharedFile = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(SharedFileCompoment)));\n\nexport default SharedFile;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n    openMusicDialog,\n    openResaveDialog,\n    setSelectedTarget,\n    setShareUserPopover,\n    showImgPreivew,\n    toggleSnackbar\n} from \"../../actions\";\nimport { withStyles, Typography } from \"@material-ui/core\";\nimport { withRouter } from \"react-router-dom\";\nimport FileManager from \"../FileManager/FileManager\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Creator from \"./Creator\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport pathHelper from \"../../utils/page\";\nconst styles = theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: 30,\n        marginBottom: 30,\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        [theme.breakpoints.down(\"sm\")]: {\n            marginTop: theme.spacing(2),\n            marginLeft: theme.spacing(1),\n            marginRight: theme.spacing(1)\n        }\n    },\n    managerContainer: {\n        overflowY: \"auto\"\n    }\n});\n\nconst ReadMe = React.lazy(() => import(\"./ReadMe\"));\n\nconst mapStateToProps = state => {\n    return {\n        anchorEl: state.viewUpdate.shareUserPopoverAnchorEl,\n        fileList: state.explorer.fileList\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        openMusicDialog: () => {\n            dispatch(openMusicDialog());\n        },\n        setSelectedTarget: targets => {\n            dispatch(setSelectedTarget(targets));\n        },\n        showImgPreivew: first => {\n            dispatch(showImgPreivew(first));\n        },\n        openResave: key => {\n            dispatch(openResaveDialog(key));\n        },\n        setShareUserPopover: e => {\n            dispatch(setShareUserPopover(e));\n        }\n    };\n};\n\nclass SharedFolderComponent extends Component {\n    state = {};\n\n    UNSAFE_componentWillMount() {\n        window.shareInfo = this.props.share;\n    }\n\n    componentWillUnmount() {\n        window.shareInfo = null;\n        this.props.setSelectedTarget([]);\n    }\n\n    handleClickAway = () => {\n        if (!pathHelper.isMobile()) {\n            this.props.setSelectedTarget([]);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        let readmeShowed = false;\n        const id = this.props.anchorEl !== null ? \"simple-popover\" : undefined;\n\n        return (\n            <div className={classes.layout}>\n                <ClickAwayListener onClickAway={this.handleClickAway}>\n                    <Paper className={classes.managerContainer}>\n                        <FileManager isShare share={this.props.share} />\n                    </Paper>\n                </ClickAwayListener>\n                {/* eslint-disable-next-line */}\n                {this.props.fileList.map(value => {\n                    if (\n                        (value.name.toLowerCase() === \"readme.md\" ||\n                            value.name.toLowerCase() === \"readme.txt\") &&\n                        !readmeShowed\n                    ) {\n                        readmeShowed = true;\n                        return <ReadMe share={this.props.share} file={value} />;\n                    }\n                })}\n                <Popover\n                    id={id}\n                    open={this.props.anchorEl !== null}\n                    anchorEl={this.props.anchorEl}\n                    onClose={() => this.props.setShareUserPopover(null)}\n                    anchorOrigin={{\n                        vertical: \"bottom\",\n                        horizontal: \"center\"\n                    }}\n                    transformOrigin={{\n                        vertical: \"top\",\n                        horizontal: \"center\"\n                    }}\n                >\n                    <Typography>\n                        <Creator\n                            isFolder\n                            onClose={() => this.props.setShareUserPopover(null)}\n                            share={this.props.share}\n                        />\n                    </Typography>\n                </Popover>\n            </div>\n        );\n    }\n}\n\nconst SharedFolder = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(SharedFolderComponent)));\n\nexport default SharedFolder;\n","import React, { Suspense, useCallback, useEffect, useState } from \"react\";\nimport PageLoading from \"../Placeholder/PageLoading\";\nimport { useParams } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { toggleSnackbar } from \"../../actions\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport { useDispatch } from \"react-redux\";\nimport Notice from \"./NotFound\";\nimport LockedFile from \"./LockedFile\";\nimport SharedFile from \"./SharedFile\";\nimport SharedFolder from \"./SharedFolder\";\n\nexport default function SharePreload() {\n    const dispatch = useDispatch();\n    const { id } = useParams();\n\n    const [share, setShare] = useState(undefined);\n    const [loading, setLoading] = useState(false);\n    const [password, setPassword] = useState(\"\");\n\n    const SetSubTitle = useCallback(title => dispatch(changeSubTitle(title)), [\n        dispatch\n    ]);\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (share) {\n            if (share.locked) {\n                SetSubTitle(share.creator.nick + \"的加密分享\");\n                if (password !== \"\") {\n                    ToggleSnackbar(\"top\", \"right\", \"密码不正确\", \"warning\");\n                }\n            } else {\n                SetSubTitle(share.source.name);\n            }\n        } else {\n            SetSubTitle();\n        }\n    }, [share, SetSubTitle, ToggleSnackbar]);\n\n    useEffect(() => {\n        return () => {\n            SetSubTitle();\n        };\n        // eslint-disable-next-line\n    }, []);\n\n    useEffect(() => {\n        setLoading(true);\n        let withPassword = \"\";\n        if (password !== \"\") {\n            withPassword = \"?password=\" + password;\n        }\n        API.get(\"/share/info/\" + id + withPassword)\n            .then(response => {\n                setShare(response.data);\n                setLoading(false);\n            })\n            .catch(error => {\n                setLoading(false);\n                if (error.code === 404) {\n                    setShare(null);\n                } else {\n                    ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n                }\n            });\n    }, [id, password, ToggleSnackbar]);\n\n    return (\n        <Suspense fallback={<PageLoading />}>\n            {share === undefined && <PageLoading />}\n            {share === null && <Notice msg={\"分享不存在或已过期\"} />}\n            {share && share.locked && (\n                <LockedFile\n                    loading={loading}\n                    setPassowrd={setPassword}\n                    share={share}\n                />\n            )}\n            {share && !share.locked && !share.is_dir && (\n                <SharedFile share={share} />\n            )}\n            {share && !share.locked && share.is_dir && (\n                <SharedFolder share={share} />\n            )}\n        </Suspense>\n    );\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { useLocation, useParams, useRouteMatch } from \"react-router\";\nimport API from \"../../middleware/Api\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport { changeSubTitle } from \"../../redux/viewUpdate/action\";\nimport pathHelper from \"../../utils/page\";\n\nconst useStyles = makeStyles(() => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"-48px\"\n    },\n\n    container: {\n        border: \"none\",\n        width: \"100%\",\n        height: \"calc(100vh - 18px)\",\n        marginBottom: -3\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nexport default function DocViewer() {\n    const [url, setURL] = useState(\"\");\n    const math = useRouteMatch();\n    const location = useLocation();\n    const query = useQuery();\n    const { id } = useParams();\n\n    const dispatch = useDispatch();\n\n    const SetSubTitle = useCallback(title => dispatch(changeSubTitle(title)), [\n        dispatch\n    ]);\n\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    useEffect(() => {\n        if (!pathHelper.isSharePage(location.pathname)) {\n            const path = query.get(\"p\").split(\"/\");\n            SetSubTitle(path[path.length - 1]);\n        } else {\n            SetSubTitle(query.get(\"name\"));\n        }\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    useEffect(() => {\n        let requestURL = \"/file/doc/\" + query.get(\"id\");\n        if (pathHelper.isSharePage(location.pathname)) {\n            requestURL = \"/share/doc/\" + id;\n            if (query.get(\"share_path\") !== \"\") {\n                requestURL +=\n                    \"?path=\" + encodeURIComponent(query.get(\"share_path\"));\n            }\n        }\n        API.get(requestURL)\n            .then(response => {\n                setURL(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n        // eslint-disable-next-line\n    }, [math.params[0], location]);\n\n    const classes = useStyles();\n    return (\n        <div className={classes.layout}>\n            {url !== \"\" && (\n                <iframe title={\"ms\"} className={classes.container} src={url} />\n            )}\n        </div>\n    );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { Dialog } from \"@material-ui/core\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { FolderOpenOutlined, LabelOutlined } from \"@material-ui/icons\";\nimport PathSelector from \"../FileManager/PathSelector\";\nconst useStyles = makeStyles(theme => ({\n    formGroup: {\n        display: \"flex\",\n        marginTop: theme.spacing(1)\n    },\n    formIcon: {\n        marginTop: 21,\n        marginRight: 19,\n        color: theme.palette.text.secondary\n    },\n    input: {\n        width: 250\n    },\n    dialogContent: {\n        paddingTop: 24,\n        paddingRight: 24,\n        paddingBottom: 8,\n        paddingLeft: 24\n    },\n    button: {\n        marginTop: 8\n    }\n}));\n\nexport default function CreateWebDAVAccount(props) {\n    const [value, setValue] = useState({\n        name: \"\",\n        path: \"/\"\n    });\n    const [pathSelectDialog, setPathSelectDialog] = React.useState(false);\n    const [selectedPath, setSelectedPath] = useState(\"\");\n    // eslint-disable-next-line\n    const [selectedPathName, setSelectedPathName] = useState(\"\");\n    const classes = useStyles();\n\n    const setMoveTarget = folder => {\n        const path =\n            folder.path === \"/\"\n                ? folder.path + folder.name\n                : folder.path + \"/\" + folder.name;\n        setSelectedPath(path);\n        setSelectedPathName(folder.name);\n    };\n\n    const handleInputChange = name => e => {\n        setValue({\n            ...value,\n            [name]: e.target.value\n        });\n    };\n\n    const selectPath = () => {\n        setValue({\n            ...value,\n            path: selectedPath === \"//\" ? \"/\" : selectedPath\n        });\n        setPathSelectDialog(false);\n    };\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            aria-labelledby=\"form-dialog-title\"\n        >\n            <Dialog\n                open={pathSelectDialog}\n                onClose={() => setPathSelectDialog(false)}\n                aria-labelledby=\"form-dialog-title\"\n            >\n                <DialogTitle id=\"form-dialog-title\">选择目录</DialogTitle>\n                <PathSelector\n                    presentPath=\"/\"\n                    selected={[]}\n                    onSelect={setMoveTarget}\n                />\n\n                <DialogActions>\n                    <Button onClick={() => setPathSelectDialog(false)}>\n                        取消\n                    </Button>\n                    <Button\n                        onClick={selectPath}\n                        color=\"primary\"\n                        disabled={selectedPath === \"\"}\n                    >\n                        确定\n                    </Button>\n                </DialogActions>\n            </Dialog>\n            <div className={classes.dialogContent}>\n                <div className={classes.formContainer}>\n                    <div className={classes.formGroup}>\n                        <div className={classes.formIcon}>\n                            <LabelOutlined />\n                        </div>\n\n                        <TextField\n                            className={classes.input}\n                            value={value.name}\n                            onChange={handleInputChange(\"name\")}\n                            label=\"备注名\"\n                        />\n                    </div>\n                    <div className={classes.formGroup}>\n                        <div className={classes.formIcon}>\n                            <FolderOpenOutlined />\n                        </div>\n                        <div>\n                            <TextField\n                                value={value.path}\n                                onChange={handleInputChange(\"path\")}\n                                className={classes.input}\n                                label=\"相对根目录\"\n                            />\n                            <br />\n                            <Button\n                                className={classes.button}\n                                color=\"primary\"\n                                onClick={() => setPathSelectDialog(true)}\n                            >\n                                选择目录\n                            </Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n            <DialogActions>\n                <Button onClick={props.onClose}>取消</Button>\n                <Button\n                    disabled={value.path === \"\" || value.name === \"\"}\n                    color=\"primary\"\n                    onClick={() => props.callback(value)}\n                >\n                    确定\n                </Button>\n            </DialogActions>\n        </Dialog>\n    );\n}\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Button from \"@material-ui/core/Button\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport Auth from \"../../middleware/Auth\";\nimport API from \"../../middleware/Api\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport { Delete } from \"@material-ui/icons\";\nimport CreateWebDAVAccount from \"../Modals/CreateWebDAVAccount\";\nimport TimeAgo from \"timeago-react\";\n\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: \"50px\"\n    },\n    content: {\n        marginTop: theme.spacing(4)\n    },\n    cardContent: {\n        padding: theme.spacing(2)\n    },\n    tableContainer: {\n        overflowX: \"auto\"\n    },\n    create: {\n        marginTop: theme.spacing(2)\n    }\n}));\n\nexport default function WebDAV() {\n    const [tab, setTab] = useState(0);\n    const [create, setCreate] = useState(false);\n    const [accounts, setAccounts] = useState([]);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = () => {\n        API.get(\"/webdav/accounts\")\n            .then(response => {\n                setAccounts(response.data.accounts);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n    useEffect(() => {\n        loadList();\n        // eslint-disable-next-line\n    }, []);\n\n    const deleteAccount = id => {\n        const account = accounts[id];\n        API.delete(\"/webdav/accounts/\" + account.ID)\n            .then(() => {\n                let accountCopy = [...accounts];\n                accountCopy = accountCopy.filter((v, i) => {\n                    return i !== id;\n                });\n                setAccounts(accountCopy);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const addAccount = account => {\n        setCreate(false);\n        API.post(\"/webdav/accounts\", {\n            path: account.path,\n            name: account.name\n        })\n            .then(response => {\n                setAccounts([\n                    {\n                        ID: response.data.id,\n                        Password: response.data.password,\n                        CreatedAt: response.data.created_at,\n                        Name: account.name,\n                        Root: account.path\n                    },\n                    ...accounts\n                ]);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    const classes = useStyles();\n    const user = Auth.GetUser();\n\n    return (\n        <div className={classes.layout}>\n            <CreateWebDAVAccount\n                callback={addAccount}\n                open={create}\n                onClose={() => setCreate(false)}\n            />\n            <Typography color=\"textSecondary\" variant=\"h4\">\n                WebDAV\n            </Typography>\n            <Paper elevation={3} className={classes.content}>\n                <Tabs\n                    value={tab}\n                    indicatorColor=\"primary\"\n                    textColor=\"primary\"\n                    onChange={(event, newValue) => setTab(newValue)}\n                    aria-label=\"disabled tabs example\"\n                >\n                    <Tab label=\"账号管理\" />\n                </Tabs>\n                <div className={classes.cardContent}>\n                    {tab === 0 && (\n                        <div>\n                            <Alert severity=\"info\">\n                                WebDAV的地址为：\n                                {window.location.origin + \"/dav\"}\n                                ；登陆用户名统一为：{user.user_name}{\" \"}\n                                ；密码为所创建账号的密码。\n                            </Alert>\n                            <TableContainer className={classes.tableContainer}>\n                                <Table\n                                    className={classes.table}\n                                    aria-label=\"simple table\"\n                                >\n                                    <TableHead>\n                                        <TableRow>\n                                            <TableCell>备注名</TableCell>\n                                            <TableCell align=\"right\">\n                                                密码\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                根目录\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                创建日期\n                                            </TableCell>\n                                            <TableCell align=\"right\">\n                                                操作\n                                            </TableCell>\n                                        </TableRow>\n                                    </TableHead>\n                                    <TableBody>\n                                        {accounts.map((row, id) => (\n                                            <TableRow key={id}>\n                                                <TableCell\n                                                    component=\"th\"\n                                                    scope=\"row\"\n                                                >\n                                                    {row.Name}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row.Password}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    {row.Root}\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <TimeAgo\n                                                        datetime={row.CreatedAt}\n                                                        locale=\"zh_CN\"\n                                                    />\n                                                </TableCell>\n                                                <TableCell align=\"right\">\n                                                    <IconButton\n                                                        size={\"small\"}\n                                                        onClick={() =>\n                                                            deleteAccount(id)\n                                                        }\n                                                    >\n                                                        <Delete />\n                                                    </IconButton>\n                                                </TableCell>\n                                            </TableRow>\n                                        ))}\n                                    </TableBody>\n                                </Table>\n                            </TableContainer>\n                            <Button\n                                onClick={() => setCreate(true)}\n                                className={classes.create}\n                                variant=\"contained\"\n                                color=\"secondary\"\n                            >\n                                创建新账号\n                            </Button>\n                        </div>\n                    )}\n                </div>\n            </Paper>\n        </div>\n    );\n}\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { makeStyles, Typography } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Table from \"@material-ui/core/Table\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport API from \"../../middleware/Api\";\nimport TimeAgo from \"timeago-react\";\nimport { getTaskProgress, getTaskStatus, getTaskType } from \"../../config\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 1100,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: \"50px\"\n    },\n    content: {\n        marginTop: theme.spacing(4),\n        overflowX: \"auto\"\n    },\n    cardContent: {\n        padding: theme.spacing(2)\n    },\n    tableContainer: {\n        overflowX: \"auto\"\n    },\n    create: {\n        marginTop: theme.spacing(2)\n    },\n    noWrap: {\n        wordBreak: \"keepAll\"\n    },\n    footer: {\n        padding: theme.spacing(2)\n    }\n}));\n\nexport default function Tasks() {\n    const [tasks, setTasks] = useState([]);\n    const [total, setTotal] = useState(0);\n    const [page, setPage] = useState(1);\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const loadList = page => {\n        API.get(\"/user/setting/tasks?page=\" + page)\n            .then(response => {\n                setTasks(response.data.tasks);\n                setTotal(response.data.total);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    useEffect(() => {\n        loadList(page);\n        // eslint-disable-next-line\n    }, [page]);\n\n    const getError = error => {\n        if (error === \"\") {\n            return \"-\";\n        }\n        try {\n            const res = JSON.parse(error);\n            return res.msg;\n        } catch (e) {\n            return \"未知\";\n        }\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Typography color=\"textSecondary\" variant=\"h4\">\n                任务队列\n            </Typography>\n            <Paper elevation={3} className={classes.content}>\n                <Table className={classes.table} aria-label=\"simple table\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell nowrap=\"nowrap\">创建于</TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\n                                任务类型\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\n                                状态\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\" align=\"right\">\n                                最后进度\n                            </TableCell>\n                            <TableCell nowrap=\"nowrap\">错误信息</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {tasks.map((row, id) => (\n                            <TableRow key={id}>\n                                <TableCell\n                                    nowrap=\"nowrap\"\n                                    component=\"th\"\n                                    scope=\"row\"\n                                >\n                                    <TimeAgo\n                                        datetime={row.create_date}\n                                        locale=\"zh_CN\"\n                                    />\n                                </TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\n                                    {getTaskType(row.type)}\n                                </TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\n                                    {getTaskStatus(row.status)}\n                                </TableCell>\n                                <TableCell nowrap=\"nowrap\" align=\"right\">\n                                    {getTaskProgress(row.type, row.progress)}\n                                </TableCell>\n                                <TableCell className={classes.noWrap}>\n                                    {getError(row.error)}\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                <div className={classes.footer}>\n                    <Pagination\n                        count={Math.ceil(total / 10)}\n                        onChange={(e, v) => setPage(v)}\n                        color=\"secondary\"\n                    />\n                </div>\n            </Paper>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport API from \"../../middleware/Api\";\n\nimport {\n    withStyles,\n    Paper,\n    Avatar,\n    Typography,\n    Tabs,\n    Tab,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Grid\n} from \"@material-ui/core\";\nimport { withRouter } from \"react-router\";\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst styles = theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"50px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        marginBottom: \"30px\",\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        }\n    },\n    userNav: {\n        height: \"270px\",\n        backgroundColor: theme.palette.primary.main,\n        padding: \"20px 20px 2em\",\n        backgroundImage:\n            \"url(\\\"data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 1600 900'%3E%3Cpolygon fill='\" +\n            theme.palette.primary.light.replace(\"#\", \"%23\") +\n            \"' points='957 450 539 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='957 450 872.9 900 1396 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='-60 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='337 900 398 662 816 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 876 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1203 546 1552 900 1162 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.dark.replace(\"#\", \"%23\") +\n            \"' points='641 695 886 900 367 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.primary.main.replace(\"#\", \"%23\") +\n            \"' points='587 900 641 695 886 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.light.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1096 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='1710 900 1401 632 1365 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.main.replace(\"#\", \"%23\") +\n            \"' points='1210 900 971 687 725 900'/%3E%3Cpolygon fill='\" +\n            theme.palette.secondary.dark.replace(\"#\", \"%23\") +\n            \"' points='943 900 1210 900 971 687'/%3E%3C/svg%3E\\\")\",\n        backgroundSize: \"cover\",\n        backgroundPosition: \"bottom\"\n    },\n    avatarContainer: {\n        height: \"80px\",\n        width: \"80px\",\n        borderRaidus: \"50%\",\n        margin: \"auto\",\n        marginTop: \"50px\",\n        boxShadow:\n            \"0 2px 5px 0 rgba(0,0,0,0.16), 0 2px 10px 0 rgba(0,0,0,0.12)\",\n        border: \"2px solid #fff\"\n    },\n    nickName: {\n        width: \"200px\",\n        margin: \"auto\",\n        textAlign: \"center\",\n        marginTop: \"1px\",\n        fontSize: \"25px\",\n        color: \"#ffffff\",\n        opacity: \"0.81\"\n    },\n    th: {\n        minWidth: \"106px\"\n    },\n    mobileHide: {\n        [theme.breakpoints.down(\"md\")]: {\n            display: \"none\"\n        }\n    },\n    tableLink: {\n        cursor: \"pointer\"\n    },\n    navigator: {\n        padding: theme.spacing(2)\n    },\n    pageInfo: {\n        marginTop: \"14px\",\n        marginLeft: \"23px\"\n    },\n    infoItem: {\n        paddingLeft: \"46px!important\",\n        paddingBottom: \"20px!important\"\n    },\n    infoContainer: {\n        marginTop: \"30px\"\n    },\n    tableContainer: {\n        overflowX: \"auto\"\n    }\n});\nconst mapStateToProps = () => {\n    return {};\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        }\n    };\n};\n\nclass ProfileCompoment extends Component {\n    state = {\n        listType: 0,\n        shareList: [],\n        page: 1,\n        user: null,\n        total: 0\n    };\n\n    handleChange = (event, listType) => {\n        this.setState({ listType });\n        if (listType === 1) {\n            this.loadList(1, \"hot\");\n        } else if (listType === 0) {\n            this.loadList(1, \"default\");\n        }\n    };\n\n    componentDidMount = () => {\n        this.loadList(1, \"default\");\n    };\n\n    loadList = (page, order) => {\n        API.get(\n            \"/user/profile/\" +\n                this.props.match.params.id +\n                \"?page=\" +\n                page +\n                \"&type=\" +\n                order\n        )\n            .then(response => {\n                this.setState({\n                    shareList: response.data.items,\n                    user: response.data.user,\n                    total: response.data.total\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    loadNext = () => {\n        this.loadList(\n            this.state.page + 1,\n            this.state.listType === 0 ? \"default\" : \"hot\"\n        );\n    };\n\n    loadPrev = () => {\n        this.loadList(\n            this.state.page - 1,\n            this.state.listType === 0 ? \"default\" : \"hot\"\n        );\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.layout}>\n                {this.state.user === null && <div></div>}\n                {this.state.user !== null && (\n                    <Paper square>\n                        <div className={classes.userNav}>\n                            <div>\n                                <Avatar\n                                    className={classes.avatarContainer}\n                                    src={\n                                        \"/api/v3/user/avatar/\" +\n                                        this.state.user.id +\n                                        \"/l\"\n                                    }\n                                />\n                            </div>\n                            <div>\n                                <Typography className={classes.nickName} noWrap>\n                                    {this.state.user.nick}\n                                </Typography>\n                            </div>\n                        </div>\n                        <Tabs\n                            value={this.state.listType}\n                            indicatorColor=\"primary\"\n                            textColor=\"primary\"\n                            onChange={this.handleChange}\n                            centered\n                        >\n                            <Tab label=\"全部分享\" />\n                            <Tab label=\"热门分享\" />\n                            <Tab label=\"个人资料\" />\n                        </Tabs>\n                        {this.state.listType === 2 && (\n                            <div className={classes.infoContainer}>\n                                <Grid container spacing={24}>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            UID\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.id}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            昵称\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.nick}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            用户组\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.group}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            分享总数\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.total}\n                                        </Typography>\n                                    </Grid>\n                                    <Grid\n                                        item\n                                        md={4}\n                                        xs={12}\n                                        className={classes.infoItem}\n                                    >\n                                        <Typography\n                                            color=\"textSecondary\"\n                                            variant=\"h6\"\n                                        >\n                                            注册日期\n                                        </Typography>\n                                        <Typography>\n                                            {this.state.user.date}\n                                        </Typography>\n                                    </Grid>\n                                </Grid>\n                            </div>\n                        )}\n                        {(this.state.listType === 0 ||\n                            this.state.listType === 1) && (\n                            <div>\n                                <div className={classes.tableContainer}>\n                                    <Table className={classes.table}>\n                                        <TableHead>\n                                            <TableRow>\n                                                <TableCell>文件名</TableCell>\n                                                <TableCell\n                                                    className={\n                                                        classes.mobileHide\n                                                    }\n                                                >\n                                                    分享日期\n                                                </TableCell>\n                                                <TableCell\n                                                    className={[\n                                                        classes.th,\n                                                        classes.mobileHide\n                                                    ]}\n                                                >\n                                                    下载次数\n                                                </TableCell>\n                                                <TableCell\n                                                    className={[\n                                                        classes.th,\n                                                        classes.mobileHide\n                                                    ]}\n                                                >\n                                                    浏览次数\n                                                </TableCell>\n                                            </TableRow>\n                                        </TableHead>\n                                        <TableBody>\n                                            {this.state.shareList.map(\n                                                (row, id) => (\n                                                    <TableRow\n                                                        key={id}\n                                                        className={\n                                                            classes.tableLink\n                                                        }\n                                                        onClick={() =>\n                                                            this.props.history.push(\n                                                                \"/s/\" + row.key\n                                                            )\n                                                        }\n                                                    >\n                                                        <TableCell>\n                                                            <Typography>\n                                                                {row.source\n                                                                    ? row.source\n                                                                          .name\n                                                                    : \"[已失效]\"}\n                                                            </Typography>\n                                                        </TableCell>\n                                                        <TableCell\n                                                            nowrap={\"nowrap\"}\n                                                            className={\n                                                                classes.mobileHide\n                                                            }\n                                                        >\n                                                            {row.create_date}\n                                                        </TableCell>\n                                                        <TableCell\n                                                            className={\n                                                                classes.mobileHide\n                                                            }\n                                                        >\n                                                            {row.downloads}\n                                                        </TableCell>\n                                                        <TableCell\n                                                            className={\n                                                                classes.mobileHide\n                                                            }\n                                                        >\n                                                            {row.views}\n                                                        </TableCell>\n                                                    </TableRow>\n                                                )\n                                            )}\n                                        </TableBody>\n                                    </Table>\n                                </div>\n                                {this.state.shareList.length !== 0 &&\n                                    this.state.listType === 0 && (\n                                        <div className={classes.navigator}>\n                                            <Pagination\n                                                count={Math.ceil(\n                                                    this.state.total / 10\n                                                )}\n                                                onChange={(e, v) =>\n                                                    this.loadList(\n                                                        v,\n                                                        this.state.listType ===\n                                                            0\n                                                            ? \"default\"\n                                                            : \"hot\"\n                                                    )\n                                                }\n                                                color=\"secondary\"\n                                            />\n                                        </div>\n                                    )}\n                            </div>\n                        )}\n                    </Paper>\n                )}\n            </div>\n        );\n    }\n}\n\nconst Profile = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(ProfileCompoment)));\n\nexport default Profile;\n","import React, { useState, useCallback } from \"react\";\nimport {\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Divider,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemSecondaryAction,\n    ListItemText,\n    makeStyles,\n    Paper,\n    Typography\n} from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { toggleSnackbar } from \"../../actions\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport { Add, Fingerprint, HighlightOff } from \"@material-ui/icons\";\nimport API from \"../../middleware/Api\";\nimport { bufferDecode, bufferEncode } from \"../../utils\";\n\nconst useStyles = makeStyles(theme => ({\n    sectionTitle: {\n        paddingBottom: \"10px\",\n        paddingTop: \"30px\"\n    },\n    rightIcon: {\n        marginTop: \"4px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary\n    },\n    desenList: {\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    iconFix: {\n        marginRight: \"11px\",\n        marginLeft: \"7px\",\n        minWidth: 40\n    },\n    flexContainer: {\n        display: \"flex\"\n    }\n}));\n\nexport default function Authn(props) {\n    const [selected, setSelected] = useState(\"\");\n    const [confirm, setConfirm] = useState(false);\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n\n    const deleteCredential = id => {\n        API.patch(\"/user/setting/authn\", {\n            id: id\n        })\n            .then(() => {\n                ToggleSnackbar(\"top\", \"right\", \"凭证已删除\", \"success\");\n                props.remove(id);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            })\n            .then(() => {\n                setConfirm(false);\n            });\n    };\n\n    const classes = useStyles();\n\n    const addCredential = () => {\n        if (!navigator.credentials) {\n            ToggleSnackbar(\"top\", \"right\", \"当前浏览器或环境不支持\", \"warning\");\n\n            return;\n        }\n        API.put(\"/user/authn\", {})\n            .then(response => {\n                const credentialCreationOptions = response.data;\n                credentialCreationOptions.publicKey.challenge = bufferDecode(\n                    credentialCreationOptions.publicKey.challenge\n                );\n                credentialCreationOptions.publicKey.user.id = bufferDecode(\n                    credentialCreationOptions.publicKey.user.id\n                );\n                if (credentialCreationOptions.publicKey.excludeCredentials) {\n                    for (\n                        let i = 0;\n                        i <\n                        credentialCreationOptions.publicKey.excludeCredentials\n                            .length;\n                        i++\n                    ) {\n                        credentialCreationOptions.publicKey.excludeCredentials[\n                            i\n                        ].id = bufferDecode(\n                            credentialCreationOptions.publicKey\n                                .excludeCredentials[i].id\n                        );\n                    }\n                }\n\n                return navigator.credentials.create({\n                    publicKey: credentialCreationOptions.publicKey\n                });\n            })\n            .then(credential => {\n                const attestationObject = credential.response.attestationObject;\n                const clientDataJSON = credential.response.clientDataJSON;\n                const rawId = credential.rawId;\n                return API.put(\n                    \"/user/authn/finish\",\n                    JSON.stringify({\n                        id: credential.id,\n                        rawId: bufferEncode(rawId),\n                        type: credential.type,\n                        response: {\n                            attestationObject: bufferEncode(attestationObject),\n                            clientDataJSON: bufferEncode(clientDataJSON)\n                        }\n                    })\n                );\n            })\n            .then(response => {\n                props.add(response.data);\n                ToggleSnackbar(\"top\", \"right\", \"验证器已添加\", \"success\");\n                return;\n            })\n            .catch(error => {\n                console.log(error);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"error\");\n            });\n    };\n\n    return (\n        <div>\n            <Dialog open={confirm} onClose={() => setConfirm(false)}>\n                <DialogTitle>删除凭证</DialogTitle>\n                <DialogContent>确定要吊销这个凭证吗？</DialogContent>\n                <DialogActions>\n                    <Button onClick={() => setConfirm(false)} color=\"default\">\n                        取消\n                    </Button>\n                    <Button\n                        onClick={() => deleteCredential(selected)}\n                        color=\"primary\"\n                    >\n                        确定\n                    </Button>\n                </DialogActions>\n            </Dialog>\n\n            <Typography className={classes.sectionTitle} variant=\"subtitle2\">\n                外部认证器\n            </Typography>\n            <Paper>\n                <List className={classes.desenList}>\n                    {props.list.map(v => (\n                        <>\n                            <ListItem\n                                button\n                                style={{\n                                    paddingRight: 60\n                                }}\n                                onClick={() => {\n                                    setConfirm(true);\n                                    setSelected(v.id);\n                                }}\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Fingerprint />\n                                </ListItemIcon>\n                                <ListItemText primary={v.fingerprint} />\n\n                                <ListItemSecondaryAction\n                                    onClick={() => deleteCredential(v.id)}\n                                    className={classes.flexContainer}\n                                >\n                                    <HighlightOff\n                                        className={classes.rightIcon}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                        </>\n                    ))}\n                    <ListItem button onClick={() => addCredential()}>\n                        <ListItemIcon className={classes.iconFix}>\n                            <Add />\n                        </ListItemIcon>\n                        <ListItemText primary=\"添加新验证器\" />\n\n                        <ListItemSecondaryAction\n                            className={classes.flexContainer}\n                        >\n                            <RightIcon className={classes.rightIcon} />\n                        </ListItemSecondaryAction>\n                    </ListItem>\n                </List>\n            </Paper>\n        </div>\n    );\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport PhotoIcon from \"@material-ui/icons/InsertPhoto\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport DateIcon from \"@material-ui/icons/DateRange\";\nimport EmailIcon from \"@material-ui/icons/Email\";\nimport HomeIcon from \"@material-ui/icons/Home\";\nimport LinkIcon from \"@material-ui/icons/Phonelink\";\nimport InputIcon from \"@material-ui/icons/Input\";\nimport SecurityIcon from \"@material-ui/icons/Security\";\nimport NickIcon from \"@material-ui/icons/PermContactCalendar\";\nimport LockIcon from \"@material-ui/icons/Lock\";\nimport VerifyIcon from \"@material-ui/icons/VpnKey\";\nimport ColorIcon from \"@material-ui/icons/Palette\";\nimport {\n    applyThemes,\n    changeViewMethod,\n    toggleDaylightMode,\n    toggleSnackbar\n} from \"../../actions\";\nimport axios from \"axios\";\nimport FingerprintIcon from \"@material-ui/icons/Fingerprint\";\nimport ToggleButton from \"@material-ui/lab/ToggleButton\";\nimport ToggleButtonGroup from \"@material-ui/lab/ToggleButtonGroup\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport {\n    ListItemIcon,\n    withStyles,\n    Button,\n    Divider,\n    TextField,\n    Avatar,\n    Paper,\n    Typography,\n    List,\n    ListItem,\n    ListItemSecondaryAction,\n    ListItemText,\n    ListItemAvatar,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle,\n    Switch\n} from \"@material-ui/core\";\nimport { blue, green, yellow } from \"@material-ui/core/colors\";\nimport API from \"../../middleware/Api\";\nimport Auth from \"../../middleware/Auth\";\nimport { withRouter } from \"react-router\";\nimport QRCode from \"qrcode-react\";\nimport { Brightness3, ListAlt, PermContactCalendar } from \"@material-ui/icons\";\nimport { transformTime } from \"../../utils\";\nimport Authn from \"./Authn\";\n\nconst styles = theme => ({\n    layout: {\n        width: \"auto\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(1100 + theme.spacing(3) * 2)]: {\n            width: 700,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        }\n    },\n    sectionTitle: {\n        paddingBottom: \"10px\",\n        paddingTop: \"30px\"\n    },\n    rightIcon: {\n        marginTop: \"4px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary\n    },\n    uploadFromFile: {\n        backgroundColor: blue[100],\n        color: blue[600]\n    },\n    userGravatar: {\n        backgroundColor: yellow[100],\n        color: yellow[800]\n    },\n    policySelected: {\n        backgroundColor: green[100],\n        color: green[800]\n    },\n    infoText: {\n        marginRight: \"17px\"\n    },\n    infoTextWithIcon: {\n        marginRight: \"17px\",\n        marginTop: \"1px\"\n    },\n    rightIconWithText: {\n        marginTop: \"0px\",\n        marginRight: \"10px\",\n        color: theme.palette.text.secondary\n    },\n    iconFix: {\n        marginRight: \"11px\",\n        marginLeft: \"7px\",\n        minWidth: 40\n    },\n    flexContainer: {\n        display: \"flex\"\n    },\n    desenList: {\n        paddingTop: 0,\n        paddingBottom: 0\n    },\n    flexContainerResponse: {\n        display: \"flex\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"initial\"\n        }\n    },\n    desText: {\n        marginTop: \"10px\"\n    },\n    secondColor: {\n        height: \"20px\",\n        width: \"20px\",\n        backgroundColor: theme.palette.secondary.main,\n        borderRadius: \"50%\",\n        marginRight: \"17px\"\n    },\n    firstColor: {\n        height: \"20px\",\n        width: \"20px\",\n        backgroundColor: theme.palette.primary.main,\n        borderRadius: \"50%\",\n        marginRight: \"6px\"\n    },\n    themeBlock: {\n        height: \"20px\",\n        width: \"20px\"\n    },\n    paddingBottom: {\n        marginBottom: \"30px\"\n    },\n    paddingText: {\n        paddingRight: theme.spacing(2)\n    },\n    qrcode: {\n        width: 128,\n        marginTop: 16,\n        marginRight: 16\n    }\n});\n\nconst mapStateToProps = state => {\n    return {\n        title: state.siteConfig.title,\n        authn: state.siteConfig.authn,\n        viewMethod: state.viewUpdate.explorerViewMethod\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        },\n        applyThemes: color => {\n            dispatch(applyThemes(color));\n        },\n        toggleDaylightMode: () => {\n            dispatch(toggleDaylightMode());\n        },\n        changeView: method => {\n            dispatch(changeViewMethod(method));\n        }\n    };\n};\n\nclass UserSettingCompoment extends Component {\n    constructor(props) {\n        super(props);\n        this.fileInput = React.createRef();\n    }\n\n    state = {\n        avatarModal: false,\n        nickModal: false,\n        changePassword: false,\n        loading: \"\",\n        oldPwd: \"\",\n        newPwd: \"\",\n        webdavPwd: \"\",\n        newPwdRepeat: \"\",\n        twoFactor: false,\n        authCode: \"\",\n        changeTheme: false,\n        chosenTheme: null,\n        showWebDavUrl: false,\n        showWebDavUserName: false,\n        changeWebDavPwd: false,\n        groupBackModal: false,\n        changePolicy: false,\n        settings: {\n            uid: 0,\n            group_expires: 0,\n            policy: {\n                current: {\n                    name: \"-\",\n                    id: \"\"\n                },\n                options: []\n            },\n            qq: \"\",\n            homepage: true,\n            two_factor: \"\",\n            two_fa_secret: \"\",\n            prefer_theme: \"\",\n            themes: {},\n            authn: []\n        }\n    };\n\n    handleClose = () => {\n        this.setState({\n            avatarModal: false,\n            nickModal: false,\n            changePassword: false,\n            loading: \"\",\n            twoFactor: false,\n            changeTheme: false,\n            showWebDavUrl: false,\n            showWebDavUserName: false,\n            changeWebDavPwd: false,\n            groupBackModal: false,\n            changePolicy: false\n        });\n    };\n\n    componentDidMount() {\n        this.loadSetting();\n    }\n\n    toggleViewMethod = () => {\n        const newMethod =\n            this.props.viewMethod === \"icon\"\n                ? \"list\"\n                : this.props.viewMethod === \"list\"\n                ? \"smallIcon\"\n                : \"icon\";\n        Auth.SetPreference(\"view_method\", newMethod);\n        this.props.changeView(newMethod);\n    };\n\n    loadSetting = () => {\n        API.get(\"/user/setting\")\n            .then(response => {\n                const theme = JSON.parse(response.data.themes);\n                response.data.themes = theme;\n                this.setState({\n                    settings: response.data\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    useGravatar = () => {\n        this.setState({\n            loading: \"gravatar\"\n        });\n        API.put(\"/user/setting/avatar\")\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"头像已更新，刷新后生效\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    };\n\n    changeNick = () => {\n        this.setState({\n            loading: \"nick\"\n        });\n        API.patch(\"/user/setting/nick\", {\n            nick: this.state.nick\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"昵称已更改，刷新后生效\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n                this.handleClose();\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    };\n\n    uploadAvatar = () => {\n        this.setState({\n            loading: \"avatar\"\n        });\n        const formData = new FormData();\n        formData.append(\"avatar\", this.fileInput.current.files[0]);\n        API.post(\"/user/setting/avatar\", formData, {\n            headers: {\n                \"Content-Type\": \"multipart/form-data\"\n            }\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"头像已更新，刷新后生效\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    };\n\n    handleToggle = () => {\n        API.patch(\"/user/setting/homepage\", {\n            status: !this.state.settings.homepage\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"设置已保存\",\n                    \"success\"\n                );\n                this.setState({\n                    settings: {\n                        ...this.state.settings,\n                        homepage: !this.state.settings.homepage\n                    }\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    changhePwd = () => {\n        if (this.state.newPwd !== this.state.newPwdRepeat) {\n            this.props.toggleSnackbar(\n                \"top\",\n                \"right\",\n                \"两次密码输入不一致\",\n                \"warning\"\n            );\n            return;\n        }\n        this.setState({\n            loading: \"changePassword\"\n        });\n        API.patch(\"/user/setting/password\", {\n            old: this.state.oldPwd,\n            new: this.state.newPwd\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"密码已更新\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n                this.handleClose();\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    };\n\n    changeTheme = () => {\n        this.setState({\n            loading: \"changeTheme\"\n        });\n        API.patch(\"/user/setting/theme\", {\n            theme: this.state.chosenTheme\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"主题配色已更换\",\n                    \"success\"\n                );\n                this.props.applyThemes(this.state.chosenTheme);\n                this.setState({\n                    loading: \"\"\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    };\n\n    changheWebdavPwd = () => {\n        this.setState({\n            loading: \"changheWebdavPwd\"\n        });\n        axios\n            .post(\"/Member/setWebdavPwd\", {\n                pwd: this.state.webdavPwd\n            })\n            .then(response => {\n                if (response.data.error === \"1\") {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.data.msg,\n                        \"error\"\n                    );\n                    this.setState({\n                        loading: \"\"\n                    });\n                } else {\n                    this.props.toggleSnackbar(\n                        \"top\",\n                        \"right\",\n                        response.data.msg,\n                        \"success\"\n                    );\n                    this.setState({\n                        loading: \"\",\n                        changeWebDavPwd: false\n                    });\n                }\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    };\n\n    init2FA = () => {\n        if (this.state.settings.two_factor) {\n            this.setState({ twoFactor: true });\n            return;\n        }\n        API.get(\"/user/setting/2fa\")\n            .then(response => {\n                this.setState({\n                    two_fa_secret: response.data,\n                    twoFactor: true\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    twoFactor = () => {\n        this.setState({\n            loading: \"twoFactor\"\n        });\n        API.patch(\"/user/setting/2fa\", {\n            code: this.state.authCode\n        })\n            .then(() => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"设定已保存\",\n                    \"success\"\n                );\n                this.setState({\n                    loading: \"\",\n                    settings: {\n                        ...this.state.settings,\n                        two_factor: !this.state.settings.two_factor\n                    }\n                });\n                this.handleClose();\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"error\"\n                );\n                this.setState({\n                    loading: \"\"\n                });\n            });\n    };\n\n    handleChange = name => event => {\n        this.setState({ [name]: event.target.value });\n    };\n\n    handleAlignment = (event, chosenTheme) => this.setState({ chosenTheme });\n\n    toggleThemeMode = current => {\n        if (current !== null) {\n            this.props.toggleDaylightMode();\n            Auth.SetPreference(\"theme_mode\", null);\n        }\n    };\n\n    render() {\n        const { classes } = this.props;\n        const user = Auth.GetUser();\n        const dark = Auth.GetPreference(\"theme_mode\");\n\n        return (\n            <div>\n                <div className={classes.layout}>\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        个人资料\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ avatarModal: true })\n                                }\n                            >\n                                <ListItemAvatar>\n                                    <Avatar\n                                        src={\n                                            \"/api/v3/user/avatar/\" +\n                                            user.id +\n                                            \"/l\"\n                                        }\n                                    />\n                                </ListItemAvatar>\n                                <ListItemText primary=\"头像\" />\n                                <ListItemSecondaryAction>\n                                    <RightIcon className={classes.rightIcon} />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <PermContactCalendar />\n                                </ListItemIcon>\n                                <ListItemText primary=\"UID\" />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {this.state.settings.uid}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ nickModal: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <NickIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"昵称\" />\n\n                                <ListItemSecondaryAction\n                                    onClick={() =>\n                                        this.setState({ nickModal: true })\n                                    }\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.nickname}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <EmailIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"Email\" />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.user_name}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <GroupIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"用户组\" />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {user.group.name}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <DateIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"注册时间\" />\n\n                                <ListItemSecondaryAction>\n                                    <Typography\n                                        className={classes.infoText}\n                                        color=\"textSecondary\"\n                                    >\n                                        {transformTime(\n                                            parseInt(user.created_at + \"000\")\n                                        )}\n                                    </Typography>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        安全隐私\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem button>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <HomeIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"个人主页\" />\n\n                                <ListItemSecondaryAction>\n                                    <Switch\n                                        onChange={this.handleToggle}\n                                        checked={this.state.settings.homepage}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ changePassword: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <LockIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"登录密码\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <RightIcon className={classes.rightIcon} />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem button onClick={() => this.init2FA()}>\n                                <ListItemIcon className={classes.iconFix}>\n                                    <VerifyIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"二步验证\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {!this.state.settings.two_factor\n                                            ? \"未开启\"\n                                            : \"已开启\"}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n\n                    <Authn\n                        list={this.state.settings.authn}\n                        add={credential => {\n                            this.setState({\n                                settings: {\n                                    ...this.state.settings,\n                                    authn: [\n                                        ...this.state.settings.authn,\n                                        credential\n                                    ]\n                                }\n                            });\n                        }}\n                        remove={id => {\n                            let credentials = [...this.state.settings.authn];\n                            credentials = credentials.filter(v => {\n                                return v.id !== id;\n                            });\n                            this.setState({\n                                settings: {\n                                    ...this.state.settings,\n                                    authn: credentials\n                                }\n                            });\n                        }}\n                    />\n\n                    <Typography\n                        className={classes.sectionTitle}\n                        variant=\"subtitle2\"\n                    >\n                        个性化\n                    </Typography>\n                    <Paper>\n                        <List className={classes.desenList}>\n                            <ListItem\n                                button\n                                onClick={() =>\n                                    this.setState({ changeTheme: true })\n                                }\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <ColorIcon />\n                                </ListItemIcon>\n                                <ListItemText primary=\"主题配色\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <div className={classes.firstColor}></div>\n                                    <div className={classes.secondColor}></div>\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() => this.toggleThemeMode(dark)}\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <Brightness3 />\n                                </ListItemIcon>\n                                <ListItemText primary=\"黑暗模式\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {dark &&\n                                            (dark === \"dark\"\n                                                ? \"偏好开启\"\n                                                : \"偏好关闭\")}\n                                        {dark === null && \"跟随系统\"}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                            <Divider />\n                            <ListItem\n                                button\n                                onClick={() => this.toggleViewMethod()}\n                            >\n                                <ListItemIcon className={classes.iconFix}>\n                                    <ListAlt />\n                                </ListItemIcon>\n                                <ListItemText primary=\"文件列表\" />\n\n                                <ListItemSecondaryAction\n                                    className={classes.flexContainer}\n                                >\n                                    <Typography\n                                        className={classes.infoTextWithIcon}\n                                        color=\"textSecondary\"\n                                    >\n                                        {this.props.viewMethod === \"icon\" &&\n                                            \"大图标\"}\n                                        {this.props.viewMethod === \"list\" &&\n                                            \"列表\"}\n                                        {this.props.viewMethod ===\n                                            \"smallIcon\" && \"小图标\"}\n                                    </Typography>\n                                    <RightIcon\n                                        className={classes.rightIconWithText}\n                                    />\n                                </ListItemSecondaryAction>\n                            </ListItem>\n                        </List>\n                    </Paper>\n                    {user.group.webdav && (\n                        <div>\n                            <Typography\n                                className={classes.sectionTitle}\n                                variant=\"subtitle2\"\n                            >\n                                WebDAV\n                            </Typography>\n                            <Paper>\n                                <List className={classes.desenList}>\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.setState({\n                                                showWebDavUrl: true\n                                            })\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <LinkIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"连接地址\" />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                    <Divider />\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.setState({\n                                                showWebDavUserName: true\n                                            })\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <InputIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"用户名\" />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                    <Divider />\n                                    <ListItem\n                                        button\n                                        onClick={() =>\n                                            this.props.history.push(\"/webdav?\")\n                                        }\n                                    >\n                                        <ListItemIcon\n                                            className={classes.iconFix}\n                                        >\n                                            <SecurityIcon />\n                                        </ListItemIcon>\n                                        <ListItemText primary=\"账号管理\" />\n\n                                        <ListItemSecondaryAction\n                                            className={classes.flexContainer}\n                                        >\n                                            <RightIcon\n                                                className={classes.rightIcon}\n                                            />\n                                        </ListItemSecondaryAction>\n                                    </ListItem>\n                                </List>\n                            </Paper>\n                        </div>\n                    )}\n                    <div className={classes.paddingBottom}></div>\n                </div>\n                <Dialog\n                    open={this.state.avatarModal}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>修改头像</DialogTitle>\n                    <List>\n                        <ListItem\n                            button\n                            component=\"label\"\n                            disabled={this.state.loading === \"avatar\"}\n                        >\n                            <input\n                                type=\"file\"\n                                accept=\"image/*\"\n                                style={{ display: \"none\" }}\n                                ref={this.fileInput}\n                                onChange={this.uploadAvatar}\n                            />\n                            <ListItemAvatar>\n                                <Avatar className={classes.uploadFromFile}>\n                                    <PhotoIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText primary=\"从文件上传\" />\n                        </ListItem>\n                        <ListItem\n                            button\n                            onClick={this.useGravatar}\n                            disabled={this.state.loading === \"gravatar\"}\n                        >\n                            <ListItemAvatar>\n                                <Avatar className={classes.userGravatar}>\n                                    <FingerprintIcon />\n                                </Avatar>\n                            </ListItemAvatar>\n                            <ListItemText\n                                className={classes.paddingText}\n                                primary=\"使用 Gravatar 头像 \"\n                            />\n                        </ListItem>\n                    </List>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            取消\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog open={this.state.nickModal} onClose={this.handleClose}>\n                    <DialogTitle>修改昵称</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            label=\"昵称\"\n                            className={classes.textField}\n                            value={this.state.nick}\n                            onChange={this.handleChange(\"nick\")}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            取消\n                        </Button>\n                        <Button\n                            onClick={this.changeNick}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"nick\" ||\n                                this.state.nick === \"\"\n                            }\n                        >\n                            保存\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.changePassword}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>修改登录密码</DialogTitle>\n                    <DialogContent>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label=\"原密码\"\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.oldPwd}\n                                onChange={this.handleChange(\"oldPwd\")}\n                                margin=\"normal\"\n                                autoFocus\n                            />\n                        </div>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label=\"新密码\"\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.newPwd}\n                                onChange={this.handleChange(\"newPwd\")}\n                                margin=\"normal\"\n                            />\n                        </div>\n                        <div>\n                            <TextField\n                                id=\"standard-name\"\n                                label=\"确认新密码\"\n                                type=\"password\"\n                                className={classes.textField}\n                                value={this.state.newPwdRepeat}\n                                onChange={this.handleChange(\"newPwdRepeat\")}\n                                margin=\"normal\"\n                            />\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            取消\n                        </Button>\n                        <Button\n                            onClick={this.changhePwd}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"changePassword\" ||\n                                this.state.oldPwd === \"\" ||\n                                this.state.newPwdRepeat === \"\" ||\n                                this.state.newPwd === \"\"\n                            }\n                        >\n                            保存\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog open={this.state.twoFactor} onClose={this.handleClose}>\n                    <DialogTitle>\n                        {this.state.settings.two_factor ? \"关闭\" : \"启用\"}\n                        二步验证\n                    </DialogTitle>\n                    <DialogContent>\n                        <div className={classes.flexContainerResponse}>\n                            {!this.state.settings.two_factor && (\n                                <div className={classes.qrcode}>\n                                    <QRCode\n                                        value={\n                                            \"otpauth://totp/\" +\n                                            this.props.title +\n                                            \"?secret=\" +\n                                            this.state.two_fa_secret\n                                        }\n                                    />\n                                </div>\n                            )}\n\n                            <div className={classes.desText}>\n                                {!this.state.settings.two_factor && (\n                                    <Typography>\n                                        请使用任意二步验证APP或者支持二步验证的密码管理软件扫描左侧二维码添加本站。扫描完成后请填写二步验证APP给出的6位验证码以开启二步验证。\n                                    </Typography>\n                                )}\n                                {this.state.settings.two_factor && (\n                                    <Typography>\n                                        请验证当前二步验证代码。\n                                    </Typography>\n                                )}\n                                <TextField\n                                    id=\"standard-name\"\n                                    label=\"6位验证码\"\n                                    type=\"number\"\n                                    className={classes.textField}\n                                    value={this.state.authCode}\n                                    onChange={this.handleChange(\"authCode\")}\n                                    margin=\"normal\"\n                                    autoFocus\n                                    fullWidth\n                                />\n                            </div>\n                        </div>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            取消\n                        </Button>\n                        <Button\n                            onClick={this.twoFactor}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"twoFactor\" ||\n                                this.state.authCode === \"\"\n                            }\n                        >\n                            {this.state.settings.two_factor ? \"关闭\" : \"启用\"}\n                            二步验证\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.changeTheme}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>更改主题配色</DialogTitle>\n                    <DialogContent>\n                        <ToggleButtonGroup\n                            value={this.state.chosenTheme}\n                            exclusive\n                            onChange={this.handleAlignment}\n                        >\n                            {Object.keys(this.state.settings.themes).map(\n                                (value, key) => (\n                                    <ToggleButton value={value} key={key}>\n                                        <div\n                                            className={classes.themeBlock}\n                                            style={{ backgroundColor: value }}\n                                        />\n                                    </ToggleButton>\n                                )\n                            )}\n                        </ToggleButtonGroup>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            取消\n                        </Button>\n                        <Button\n                            onClick={this.changeTheme}\n                            color=\"primary\"\n                            disabled={\n                                this.state.loading === \"changeTheme\" ||\n                                this.state.chosenTheme === null\n                            }\n                        >\n                            保存\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.showWebDavUrl}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>WebDAV连接地址</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            className={classes.textField}\n                            value={window.location.origin + \"/dav\"}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            关闭\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.showWebDavUserName}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle>WebDAV用户名</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            id=\"standard-name\"\n                            className={classes.textField}\n                            value={user.user_name}\n                            margin=\"normal\"\n                            autoFocus\n                        />\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"default\">\n                            关闭\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nconst UserSetting = connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(withRouter(UserSettingCompoment)));\n\nexport default UserSetting;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport RegIcon from \"@material-ui/icons/AssignmentIndOutlined\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { toggleSnackbar } from \"../../actions/index\";\nimport Placeholder from \"../Placeholder/Captcha\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport {\n    Button,\n    FormControl,\n    Divider,\n    Link,\n    Input,\n    InputLabel,\n    Paper,\n    Avatar,\n    Typography\n} from \"@material-ui/core\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport ReCaptcha from \"./ReCaptcha\";\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: 110\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    form: {\n        width: \"100%\", // Fix IE 11 issue.\n        marginTop: theme.spacing(1)\n    },\n    submit: {\n        marginTop: theme.spacing(3)\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\"\n    },\n    captchaContainer: {\n        display: \"flex\",\n        marginTop: \"10px\",\n        [theme.breakpoints.down(\"sm\")]: {\n            display: \"block\"\n        }\n    },\n    captchaPlaceholder: {\n        width: 200\n    },\n    buttonContainer: {\n        display: \"flex\"\n    },\n    authnLink: {\n        textAlign: \"center\",\n        marginTop: 16\n    },\n    avatarSuccess: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.primary.main\n    }\n}));\n\nfunction Register() {\n    const [input, setInput] = useState({\n        email: \"\",\n        password: \"\",\n        password_repeat: \"\",\n        captcha: \"\"\n    });\n    const [loading, setLoading] = useState(false);\n    const [emailActive, setEmailActive] = useState(false);\n    const [captchaData, setCaptchaData] = useState(null);\n\n    const title = useSelector(state => state.siteConfig.title);\n    const regCaptcha = useSelector(state => state.siteConfig.regCaptcha);\n    const useReCaptcha = useSelector(\n        state => state.siteConfig.captcha_IsUseReCaptcha\n    );\n    const reCaptchaKey = useSelector(\n        state => state.siteConfig.captcha_ReCaptchaKey\n    );\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const history = useHistory();\n\n    const handleInputChange = name => e => {\n        setInput({\n            ...input,\n            [name]: e.target.value\n        });\n    };\n\n    const classes = useStyles();\n\n    const refreshCaptcha = useCallback(() => {\n        API.get(\"/site/captcha\")\n            .then(response => {\n                setCaptchaData(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法加载验证码：\" + error.message,\n                    \"error\"\n                );\n            });\n    }, []);\n\n    const register = e => {\n        e.preventDefault();\n\n        if (input.password !== input.password_repeat) {\n            ToggleSnackbar(\"top\", \"right\", \"两次密码输入不一致\", \"warning\");\n            return;\n        }\n\n        setLoading(true);\n        API.post(\"/user\", {\n            userName: input.email,\n            Password: input.password,\n            captchaCode: input.captcha\n        })\n            .then(response => {\n                setLoading(false);\n                if (response.rawData.code === 203) {\n                    setEmailActive(true);\n                } else {\n                    history.push(\"/login?username=\" + input.email);\n                    ToggleSnackbar(\"top\", \"right\", \"注册成功\", \"success\");\n                }\n            })\n            .catch(error => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                if (!useReCaptcha) {\n                    refreshCaptcha();\n                }\n            });\n    };\n\n    useEffect(() => {\n        if (regCaptcha && !useReCaptcha) {\n            refreshCaptcha();\n        }\n    }, [regCaptcha]);\n\n    return (\n        <div className={classes.layout}>\n            <>\n                {!emailActive && (\n                    <Paper className={classes.paper}>\n                        <Avatar className={classes.avatar}>\n                            <RegIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            注册 {title}\n                        </Typography>\n\n                        <form className={classes.form} onSubmit={register}>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"email\">\n                                    电子邮箱\n                                </InputLabel>\n                                <Input\n                                    id=\"email\"\n                                    type=\"email\"\n                                    name=\"email\"\n                                    onChange={handleInputChange(\"email\")}\n                                    autoComplete\n                                    value={input.email}\n                                    autoFocus\n                                />\n                            </FormControl>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"password\">密码</InputLabel>\n                                <Input\n                                    name=\"password\"\n                                    onChange={handleInputChange(\"password\")}\n                                    type=\"password\"\n                                    id=\"password\"\n                                    value={input.password}\n                                    autoComplete\n                                />\n                            </FormControl>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"password\">\n                                    确认密码\n                                </InputLabel>\n                                <Input\n                                    name=\"pwdRepeat\"\n                                    onChange={handleInputChange(\n                                        \"password_repeat\"\n                                    )}\n                                    type=\"password\"\n                                    id=\"pwdRepeat\"\n                                    value={input.password_repeat}\n                                    autoComplete\n                                />\n                            </FormControl>\n                            {regCaptcha && !useReCaptcha && (\n                                <div className={classes.captchaContainer}>\n                                    <FormControl\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                    >\n                                        <InputLabel htmlFor=\"captcha\">\n                                            验证码\n                                        </InputLabel>\n                                        <Input\n                                            name=\"captcha\"\n                                            onChange={handleInputChange(\n                                                \"captcha\"\n                                            )}\n                                            type=\"text\"\n                                            id=\"captcha\"\n                                            value={input.captcha}\n                                            autoComplete\n                                        />\n                                    </FormControl>{\" \"}\n                                    <div>\n                                        {captchaData === null && (\n                                            <div\n                                                className={\n                                                    classes.captchaPlaceholder\n                                                }\n                                            >\n                                                <Placeholder />\n                                            </div>\n                                        )}\n                                        {captchaData !== null && (\n                                            <img\n                                                src={captchaData}\n                                                alt=\"captcha\"\n                                                onClick={refreshCaptcha}\n                                            />\n                                        )}\n                                    </div>\n                                </div>\n                            )}\n\n                            {regCaptcha && useReCaptcha && (\n                                <div className={classes.captchaContainer}>\n                                    <FormControl\n                                        margin=\"normal\"\n                                        required\n                                        fullWidth\n                                    >\n                                        <ReCaptcha\n                                            style={{ display: \"inline-block\" }}\n                                            sitekey={reCaptchaKey}\n                                            onChange={value =>\n                                                setInput({\n                                                    ...input,\n                                                    captcha: value\n                                                })\n                                            }\n                                            id=\"captcha\"\n                                            name=\"captcha\"\n                                        />\n                                    </FormControl>{\" \"}\n                                </div>\n                            )}\n\n                            <Button\n                                type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                disabled={loading}\n                                className={classes.submit}\n                            >\n                                注册账号\n                            </Button>\n                        </form>\n\n                        <Divider />\n                        <div className={classes.link}>\n                            <div>\n                                <Link href={\"/login\"}>返回登录</Link>\n                            </div>\n                            <div>\n                                <Link href={\"/forget\"}>忘记密码</Link>\n                            </div>\n                        </div>\n                    </Paper>\n                )}\n                {emailActive && (\n                    <Paper className={classes.paper}>\n                        <Avatar className={classes.avatarSuccess}>\n                            <EmailIcon />\n                        </Avatar>\n                        <Typography component=\"h1\" variant=\"h5\">\n                            邮件激活\n                        </Typography>\n                        <Typography style={{ marginTop: \"10px\" }}>\n                            一封激活邮件已经发送至您的邮箱，请访问邮件中的链接以继续完成注册。\n                        </Typography>\n                    </Paper>\n                )}\n            </>\n        </div>\n    );\n}\n\nexport default Register;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { toggleSnackbar } from \"../../actions/index\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport { Button, Paper, Avatar, Typography } from \"@material-ui/core\";\nimport EmailIcon from \"@material-ui/icons/EmailOutlined\";\nimport { useLocation } from \"react-router\";\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: 110\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    submit: {\n        marginTop: theme.spacing(3)\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction Activation() {\n    const query = useQuery();\n    const location = useLocation();\n\n    const [success, setSuccess] = useState(false);\n    const [email, setEmail] = useState(\"\");\n\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const history = useHistory();\n\n    const classes = useStyles();\n\n    useEffect(() => {\n        API.get(\n            \"/user/activate/\" + query.get(\"id\") + \"?sign=\" + query.get(\"sign\")\n        )\n            .then(response => {\n                setEmail(response.data);\n                setSuccess(true);\n            })\n            .catch(error => {\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                history.push(\"/login\");\n            });\n        // eslint-disable-next-line\n    }, [location]);\n\n    return (\n        <div className={classes.layout}>\n            {success && (\n                <Paper className={classes.paper}>\n                    <Avatar className={classes.avatar}>\n                        <EmailIcon />\n                    </Avatar>\n                    <Typography component=\"h1\" variant=\"h5\">\n                        激活成功\n                    </Typography>\n                    <Typography style={{ marginTop: \"20px\" }}>\n                        您的账号已被成功激活。\n                    </Typography>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                        onClick={() => history.push(\"/login?username=\" + email)}\n                    >\n                        返回登录\n                    </Button>\n                </Paper>\n            )}\n        </div>\n    );\n}\n\nexport default Activation;\n","import React, { useCallback, useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { toggleSnackbar } from \"../../actions/index\";\nimport { useHistory } from \"react-router-dom\";\nimport API from \"../../middleware/Api\";\nimport {\n    Button,\n    FormControl,\n    Divider,\n    Link,\n    Input,\n    InputLabel,\n    Paper,\n    Avatar,\n    Typography\n} from \"@material-ui/core\";\nimport { useLocation } from \"react-router\";\nimport KeyIcon from \"@material-ui/icons/VpnKeyOutlined\";\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: 110\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    submit: {\n        marginTop: theme.spacing(3)\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\"\n    }\n}));\n\nfunction useQuery() {\n    return new URLSearchParams(useLocation().search);\n}\n\nfunction ResetForm() {\n    const query = useQuery();\n    const [input, setInput] = useState({\n        password: \"\",\n        password_repeat: \"\"\n    });\n    const [loading, setLoading] = useState(false);\n    const handleInputChange = name => e => {\n        setInput({\n            ...input,\n            [name]: e.target.value\n        });\n    };\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const history = useHistory();\n\n    const submit = e => {\n        e.preventDefault();\n        if (input.password !== input.password_repeat) {\n            ToggleSnackbar(\"top\", \"right\", \"两次密码输入不一致\", \"warning\");\n            return;\n        }\n        setLoading(true);\n        API.patch(\"/user/reset\", {\n            secret: query.get(\"sign\"),\n            id: query.get(\"id\"),\n            Password: input.password\n        })\n            .then(() => {\n                setLoading(false);\n                history.push(\"/login\");\n                ToggleSnackbar(\"top\", \"right\", \"密码已重设\", \"success\");\n            })\n            .catch(error => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <KeyIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    找回密码\n                </Typography>\n                <form className={classes.form} onSubmit={submit}>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"email\">新密码</InputLabel>\n                        <Input\n                            id=\"pwd\"\n                            type=\"password\"\n                            name=\"pwd\"\n                            onChange={handleInputChange(\"password\")}\n                            autoComplete\n                            value={input.password}\n                            autoFocus\n                        />\n                    </FormControl>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"email\">重复新密码</InputLabel>\n                        <Input\n                            id=\"pwdRepeat\"\n                            type=\"password\"\n                            name=\"pwdRepeat\"\n                            onChange={handleInputChange(\"password_repeat\")}\n                            autoComplete\n                            value={input.password_repeat}\n                            autoFocus\n                        />\n                    </FormControl>\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        重设密码\n                    </Button>{\" \"}\n                </form>{\" \"}\n                <Divider />\n                <div className={classes.link}>\n                    <div>\n                        <Link href={\"/#/login\"}>返回登录</Link>\n                    </div>\n                    <div>\n                        <Link href={\"/#/signup\"}>注册账号</Link>\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default ResetForm;\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core\";\nimport { toggleSnackbar } from \"../../actions/index\";\nimport Placeholder from \"../Placeholder/Captcha\";\nimport API from \"../../middleware/Api\";\nimport {\n    Button,\n    FormControl,\n    Divider,\n    Link,\n    Input,\n    InputLabel,\n    Paper,\n    Avatar,\n    Typography\n} from \"@material-ui/core\";\nimport KeyIcon from \"@material-ui/icons/VpnKeyOutlined\";\nimport ReCaptcha from \"./ReCaptcha\";\nconst useStyles = makeStyles(theme => ({\n    layout: {\n        width: \"auto\",\n        marginTop: \"110px\",\n        marginLeft: theme.spacing(3),\n        marginRight: theme.spacing(3),\n        [theme.breakpoints.up(\"sm\")]: {\n            width: 400,\n            marginLeft: \"auto\",\n            marginRight: \"auto\"\n        },\n        marginBottom: 110\n    },\n    paper: {\n        marginTop: theme.spacing(8),\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        padding: `${theme.spacing(2)}px ${theme.spacing(3)}px ${theme.spacing(\n            3\n        )}px`\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main\n    },\n    submit: {\n        marginTop: theme.spacing(3)\n    },\n    captchaContainer: {\n        display: \"flex\",\n        marginTop: \"10px\"\n    },\n    captchaPlaceholder: {\n        width: 200\n    },\n    link: {\n        marginTop: \"20px\",\n        display: \"flex\",\n        width: \"100%\",\n        justifyContent: \"space-between\"\n    }\n}));\n\nfunction Reset() {\n    const [input, setInput] = useState({\n        email: \"\",\n        captcha: \"\"\n    });\n    const [captchaData, setCaptchaData] = useState(null);\n    const [loading, setLoading] = useState(false);\n    const forgetCaptcha = useSelector(state => state.siteConfig.forgetCaptcha);\n    const useReCaptcha = useSelector(\n        state => state.siteConfig.captcha_IsUseReCaptcha\n    );\n    const reCaptchaKey = useSelector(\n        state => state.siteConfig.captcha_ReCaptchaKey\n    );\n    const dispatch = useDispatch();\n    const ToggleSnackbar = useCallback(\n        (vertical, horizontal, msg, color) =>\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color)),\n        [dispatch]\n    );\n    const handleInputChange = name => e => {\n        setInput({\n            ...input,\n            [name]: e.target.value\n        });\n    };\n\n    const refreshCaptcha = () => {\n        API.get(\"/site/captcha\")\n            .then(response => {\n                setCaptchaData(response.data);\n            })\n            .catch(error => {\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"无法加载验证码：\" + error.message,\n                    \"error\"\n                );\n            });\n    };\n\n    useEffect(() => {\n        if (forgetCaptcha && !useReCaptcha) {\n            refreshCaptcha();\n        }\n        // eslint-disable-next-line\n    }, [forgetCaptcha]);\n\n    const submit = e => {\n        e.preventDefault();\n        setLoading(true);\n        API.post(\"/user/reset\", {\n            userName: input.email,\n            captchaCode: input.captcha\n        })\n            .then(() => {\n                setLoading(false);\n                ToggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    \"密码重置邮件已发送，请注意查收\",\n                    \"success\"\n                );\n            })\n            .catch(error => {\n                setLoading(false);\n                ToggleSnackbar(\"top\", \"right\", error.message, \"warning\");\n                if (!useReCaptcha) {\n                    refreshCaptcha();\n                }\n            });\n    };\n\n    const classes = useStyles();\n\n    return (\n        <div className={classes.layout}>\n            <Paper className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <KeyIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    找回密码\n                </Typography>\n                <form className={classes.form} onSubmit={submit}>\n                    <FormControl margin=\"normal\" required fullWidth>\n                        <InputLabel htmlFor=\"email\">注册邮箱</InputLabel>\n                        <Input\n                            id=\"email\"\n                            type=\"email\"\n                            name=\"email\"\n                            onChange={handleInputChange(\"email\")}\n                            autoComplete\n                            value={input.email}\n                            autoFocus\n                        />\n                    </FormControl>\n                    {forgetCaptcha && !useReCaptcha && (\n                        <div className={classes.captchaContainer}>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <InputLabel htmlFor=\"captcha\">\n                                    验证码\n                                </InputLabel>\n                                <Input\n                                    name=\"captcha\"\n                                    onChange={handleInputChange(\"captcha\")}\n                                    type=\"text\"\n                                    id=\"captcha\"\n                                    value={input.captcha}\n                                    autoComplete\n                                />\n                            </FormControl>{\" \"}\n                            <div>\n                                {captchaData === null && (\n                                    <div className={classes.captchaPlaceholder}>\n                                        <Placeholder />\n                                    </div>\n                                )}\n                                {captchaData !== null && (\n                                    <img\n                                        src={captchaData}\n                                        alt=\"captcha\"\n                                        onClick={refreshCaptcha}\n                                    />\n                                )}\n                            </div>\n                        </div>\n                    )}\n                    {forgetCaptcha && useReCaptcha && (\n                        <div className={classes.captchaContainer}>\n                            <FormControl margin=\"normal\" required fullWidth>\n                                <ReCaptcha\n                                    style={{ display: \"inline-block\" }}\n                                    sitekey={reCaptchaKey}\n                                    onChange={value =>\n                                        setInput({\n                                            ...input,\n                                            captcha: value\n                                        })\n                                    }\n                                    id=\"captcha\"\n                                    name=\"captcha\"\n                                />\n                            </FormControl>{\" \"}\n                        </div>\n                    )}\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        disabled={loading}\n                        className={classes.submit}\n                    >\n                        发送密码重置邮件\n                    </Button>{\" \"}\n                </form>{\" \"}\n                <Divider />\n                <div className={classes.link}>\n                    <div>\n                        <Link href={\"/login\"}>返回登录</Link>\n                    </div>\n                    <div>\n                        <Link href={\"/signup\"}>注册账号</Link>\n                    </div>\n                </div>\n            </Paper>\n        </div>\n    );\n}\n\nexport default Reset;\n","import React, { Suspense } from \"react\";\nimport AuthRoute from \"./middleware/AuthRoute\";\nimport Navbar from \"./component/Navbar/Navbar.js\";\nimport useMediaQuery from \"@material-ui/core/useMediaQuery\";\nimport AlertBar from \"./component/Common/Snackbar\";\nimport { createMuiTheme, lighten } from \"@material-ui/core/styles\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect, Route, Switch, useRouteMatch } from \"react-router-dom\";\nimport Auth from \"./middleware/Auth\";\nimport { CssBaseline, makeStyles, ThemeProvider } from \"@material-ui/core\";\nimport { changeThemeColor } from \"./utils\";\nimport NotFound from \"./component/Share/NotFound\";\n// Lazy loads\nimport LoginForm from \"./component/Login/LoginForm\";\nimport FileManager from \"./component/FileManager/FileManager.js\";\nimport VideoPreview from \"./component/Viewer/Video.js\";\nimport SearchResult from \"./component/Share/SearchResult\";\nimport MyShare from \"./component/Share/MyShare\";\nimport Download from \"./component/Download/Download\";\nimport SharePreload from \"./component/Share/SharePreload\";\nimport DocViewer from \"./component/Viewer/Doc\";\nimport TextViewer from \"./component/Viewer/Text\";\nimport WebDAV from \"./component/Setting/WebDAV\";\nimport Tasks from \"./component/Setting/Tasks\";\nimport Profile from \"./component/Setting/Profile\";\nimport UserSetting from \"./component/Setting/UserSetting\";\nimport Register from \"./component/Login/Register\";\nimport Activation from \"./component/Login/Activication\";\nimport ResetForm from \"./component/Login/ResetForm\";\nimport Reset from \"./component/Login/Reset\";\nimport PageLoading from \"./component/Placeholder/PageLoading\";\nimport CodeViewer from \"./component/Viewer/Code\";\nconst PDFViewer = React.lazy(() =>\n    import(/* webpackChunkName: \"pdf\" */ \"./component/Viewer/PDF\")\n);\n\nexport default function App() {\n    const themeConfig = useSelector(state => state.siteConfig.theme);\n    const isLogin = useSelector(state => state.viewUpdate.isLogin);\n    const prefersDarkMode = useMediaQuery(\"(prefers-color-scheme: dark)\");\n\n    const theme = React.useMemo(() => {\n        themeConfig.palette.type = prefersDarkMode ? \"dark\" : \"light\";\n        const prefer = Auth.GetPreference(\"theme_mode\");\n        if (prefer) {\n            themeConfig.palette.type = prefer;\n        }\n        const theme = createMuiTheme({\n            ...themeConfig,\n            palette: {\n                ...themeConfig.palette,\n                primary: {\n                    ...themeConfig.palette.primary,\n                    main:\n                        themeConfig.palette.type === \"dark\"\n                            ? lighten(themeConfig.palette.primary.main, 0.3)\n                            : themeConfig.palette.primary.main\n                }\n            }\n        });\n        changeThemeColor(\n            themeConfig.palette.type === \"dark\"\n                ? theme.palette.background.default\n                : theme.palette.primary.main\n        );\n        return theme;\n    }, [prefersDarkMode, themeConfig]);\n\n    const useStyles = makeStyles(theme => ({\n        root: {\n            display: \"flex\"\n        },\n        content: {\n            flexGrow: 1,\n            padding: theme.spacing(0),\n            minWidth: 0\n        },\n        toolbar: theme.mixins.toolbar\n    }));\n\n    const classes = useStyles();\n\n    const { path } = useRouteMatch();\n    return (\n        <React.Fragment>\n            <ThemeProvider theme={theme}>\n                <div className={classes.root} id=\"container\">\n                    <CssBaseline />\n                    <AlertBar />\n                    <Navbar />\n                    <main className={classes.content}>\n                        <div className={classes.toolbar} />\n                        <Switch>\n                            <AuthRoute exact path={path} isLogin={isLogin}>\n                                <Redirect\n                                    to={{\n                                        pathname: \"/home\"\n                                    }}\n                                />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}home`} isLogin={isLogin}>\n                                <FileManager />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}video`} isLogin={isLogin}>\n                                <VideoPreview />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}text`} isLogin={isLogin}>\n                                <TextViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}doc`} isLogin={isLogin}>\n                                <DocViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}pdf`} isLogin={isLogin}>\n                                <Suspense fallback={<PageLoading />}>\n                                    <PDFViewer />\n                                </Suspense>\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}code`} isLogin={isLogin}>\n                                <CodeViewer />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}aria2`} isLogin={isLogin}>\n                                <Download />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}shares`} isLogin={isLogin}>\n                                <MyShare />\n                            </AuthRoute>\n\n                            <Route path={`${path}search`} isLogin={isLogin}>\n                                <SearchResult />\n                            </Route>\n\n                            <Route path={`${path}setting`} isLogin={isLogin}>\n                                <UserSetting />\n                            </Route>\n\n                            <AuthRoute\n                                path={`${path}profile/:id`}\n                                isLogin={isLogin}\n                            >\n                                <Profile />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}webdav`} isLogin={isLogin}>\n                                <WebDAV />\n                            </AuthRoute>\n\n                            <AuthRoute path={`${path}tasks`} isLogin={isLogin}>\n                                <Tasks />\n                            </AuthRoute>\n\n                            <Route path={`${path}login`} exact>\n                                <LoginForm />\n                            </Route>\n\n                            <Route path={`${path}signup`} exact>\n                                <Register />\n                            </Route>\n\n                            <Route path={`${path}activate`} exact>\n                                <Activation />\n                            </Route>\n\n                            <Route path={`${path}reset`} exact>\n                                <ResetForm />\n                            </Route>\n\n                            <Route path={`${path}forget`} exact>\n                                <Reset />\n                            </Route>\n\n                            <Route exact path={`${path}s/:id`}>\n                                <SharePreload />\n                            </Route>\n\n                            <Route path={`${path}s/:id/video(/)*`}>\n                                <VideoPreview />\n                            </Route>\n\n                            <Route path={`${path}s/:id/doc(/)*`}>\n                                <DocViewer />\n                            </Route>\n\n                            <Route path={`${path}s/:id/text(/)*`}>\n                                <TextViewer />\n                            </Route>\n\n                            <Route path={`${path}s/:id/pdf(/)*`}>\n                                <Suspense fallback={<PageLoading />}>\n                                    <PDFViewer />\n                                </Suspense>\n                            </Route>\n\n                            <Route path={`${path}s/:id/code(/)*`}>\n                                <CodeViewer />\n                            </Route>\n\n                            <Route path=\"*\">\n                                <NotFound msg={\"页面不存在\"} />\n                            </Route>\n                        </Switch>\n                    </main>\n                </div>\n            </ThemeProvider>\n        </React.Fragment>\n    );\n}\n","import { AnyAction } from \"redux\";\nimport Auth from \"../../middleware/Auth\";\n\nexport interface ViewUpdateState {\n    isLogin: boolean;\n    loadUploader: boolean;\n    open: boolean;\n    explorerViewMethod: string;\n    sortMethod:\n        | \"sizePos\"\n        | \"sizeRes\"\n        | \"namePos\"\n        | \"nameRev\"\n        | \"timePos\"\n        | \"timeRev\";\n    subTitle: string | null;\n    contextType: string;\n    contextOpen: boolean;\n    menuOpen: boolean;\n    navigatorLoading: boolean;\n    navigatorError: boolean;\n    navigatorErrorMsg: string | null;\n    modalsLoading: boolean;\n    storageRefresh: boolean;\n    userPopoverAnchorEl: any;\n    shareUserPopoverAnchorEl: any;\n    modals: {\n        createNewFolder: boolean;\n        createNewFile: boolean;\n        rename: boolean;\n        move: boolean;\n        remove: boolean;\n        share: boolean;\n        music: boolean;\n        remoteDownload: boolean;\n        torrentDownload: boolean;\n        getSource: boolean;\n        copy: boolean;\n        resave: boolean;\n        compress: boolean;\n        decompress: boolean;\n        loading: boolean;\n        loadingText: string;\n    };\n    snackbar: {\n        toggle: boolean;\n        vertical: string;\n        horizontal: string;\n        msg: string;\n        color: string;\n    };\n}\nexport const initState: ViewUpdateState = {\n    // 是否登录\n    isLogin: Auth.Check(),\n    loadUploader: false,\n    open: false,\n    explorerViewMethod: \"icon\",\n    sortMethod: \"timePos\",\n    subTitle: null,\n    contextType: \"none\",\n    contextOpen: false,\n    menuOpen: false,\n    navigatorLoading: true,\n    navigatorError: false,\n    navigatorErrorMsg: null,\n    modalsLoading: false,\n    storageRefresh: false,\n    userPopoverAnchorEl: null,\n    shareUserPopoverAnchorEl: null,\n    modals: {\n        createNewFolder: false,\n        createNewFile: false,\n        rename: false,\n        move: false,\n        remove: false,\n        share: false,\n        music: false,\n        remoteDownload: false,\n        torrentDownload: false,\n        getSource: false,\n        copy: false,\n        resave: false,\n        compress: false,\n        decompress: false,\n        loading: false,\n        loadingText: \"\"\n    },\n    snackbar: {\n        toggle: false,\n        vertical: \"top\",\n        horizontal: \"center\",\n        msg: \"\",\n        color: \"\"\n    }\n};\nconst viewUpdate = (state: ViewUpdateState = initState, action: AnyAction) => {\n    switch (action.type) {\n        case \"DRAWER_TOGGLE\":\n            return Object.assign({}, state, {\n                open: action.open\n            });\n        case \"CHANGE_VIEW_METHOD\":\n            return Object.assign({}, state, {\n                explorerViewMethod: action.method\n            });\n        case \"SET_NAVIGATOR_LOADING_STATUE\":\n            return Object.assign({}, state, {\n                navigatorLoading: action.status\n            });\n        case \"SET_NAVIGATOR_ERROR\":\n            return Object.assign({}, state, {\n                navigatorError: action.status,\n                navigatorErrorMsg: action.msg\n            });\n        case \"OPEN_CREATE_FOLDER_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    createNewFolder: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_CREATE_FILE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    createNewFile: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_RENAME_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    rename: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_REMOVE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    remove: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_MOVE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    move: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_RESAVE_DIALOG\":\n            // window.shareKey = action.key;\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    resave: true\n                }),\n                contextOpen: false\n            });\n        case \"SET_USER_POPOVER\":\n            return Object.assign({}, state, {\n                userPopoverAnchorEl: action.anchor\n            });\n        case \"SET_SHARE_USER_POPOVER\":\n            return Object.assign({}, state, {\n                shareUserPopoverAnchorEl: action.anchor\n            });\n        case \"OPEN_SHARE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    share: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_MUSIC_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    music: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_REMOTE_DOWNLOAD_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    remoteDownload: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_TORRENT_DOWNLOAD_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    torrentDownload: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_DECOMPRESS_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    decompress: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_COMPRESS_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    compress: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_GET_SOURCE_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    getSource: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_COPY_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    copy: true\n                }),\n                contextOpen: false\n            });\n        case \"OPEN_LOADING_DIALOG\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    loading: true,\n                    loadingText: action.text\n                }),\n                contextOpen: false\n            });\n        case \"CLOSE_ALL_MODALS\":\n            return Object.assign({}, state, {\n                modals: Object.assign({}, state.modals, {\n                    createNewFolder: false,\n                    createNewFile: false,\n                    rename: false,\n                    move: false,\n                    remove: false,\n                    share: false,\n                    music: false,\n                    remoteDownload: false,\n                    torrentDownload: false,\n                    getSource: false,\n                    resave: false,\n                    copy: false,\n                    loading: false,\n                    compress: false,\n                    decompress: false\n                })\n            });\n        case \"TOGGLE_SNACKBAR\":\n            return Object.assign({}, state, {\n                snackbar: {\n                    toggle: !state.snackbar.toggle,\n                    vertical: action.vertical,\n                    horizontal: action.horizontal,\n                    msg: action.msg,\n                    color: action.color\n                }\n            });\n        case \"SET_MODALS_LOADING\":\n            return Object.assign({}, state, {\n                modalsLoading: action.status\n            });\n        case \"SET_SESSION_STATUS\":\n            return {\n                ...state,\n                isLogin: action.status\n            };\n        case \"ENABLE_LOAD_UPLOADER\":\n            return Object.assign({}, state, {\n                loadUploader: true\n            });\n        case \"REFRESH_STORAGE\":\n            return Object.assign({}, state, {\n                storageRefresh: !state.storageRefresh\n            });\n        case \"SEARCH_MY_FILE\":\n            return Object.assign({}, state, {\n                contextOpen: false,\n                navigatorError: false,\n                navigatorLoading: true\n            });\n        case \"CHANGE_CONTEXT_MENU\":\n            if (state.contextOpen && action.open) {\n                return Object.assign({}, state);\n            }\n            return Object.assign({}, state, {\n                contextOpen: action.open,\n                contextType: action.menuType\n            });\n        case \"SET_SUBTITLE\":\n            return Object.assign({}, state, {\n                subTitle: action.title\n            });\n        case \"SET_SORT_METHOD\":\n            return {\n                ...state,\n                sortMethod: action.method\n            };\n        case \"SET_NAVIGATOR\":\n            return {\n                ...state,\n                contextOpen: false,\n                navigatorError: false,\n                navigatorLoading: action.navigatorLoading\n            };\n        default:\n            return state;\n    }\n};\n\nexport default viewUpdate;\n","/* eslint-disable no-case-declarations */\nimport { InitSiteConfig } from \"../middleware/Init\";\nimport { combineReducers } from \"../redux/combineReducers\";\nimport viewUpdate from \"../redux/viewUpdate/reducer\";\nimport explorer from \"../redux/explorer/reducer\";\n\nconst doNavigate = (path, state) => {\n    window.currntPath = path;\n    return Object.assign({}, state, {\n        navigator: Object.assign({}, state.navigator, {\n            path: path\n        })\n    });\n};\n\nexport const initState = {\n    siteConfig: {\n        title: window.subTitle,\n        siteICPId: \"\",\n        loginCaptcha: false,\n        regCaptcha: false,\n        forgetCaptcha: false,\n        emailActive: false,\n        QQLogin: false,\n        themes: null,\n        authn: false,\n        theme: {\n            palette: {\n                common: { black: \"#000\", white: \"#fff\" },\n                background: { paper: \"#fff\", default: \"#fafafa\" },\n                primary: {\n                    light: \"#7986cb\",\n                    main: \"#3f51b5\",\n                    dark: \"#303f9f\",\n                    contrastText: \"#fff\"\n                },\n                secondary: {\n                    light: \"#ff4081\",\n                    main: \"#f50057\",\n                    dark: \"#c51162\",\n                    contrastText: \"#fff\"\n                },\n                error: {\n                    light: \"#e57373\",\n                    main: \"#f44336\",\n                    dark: \"#d32f2f\",\n                    contrastText: \"#fff\"\n                },\n                text: {\n                    primary: \"rgba(0, 0, 0, 0.87)\",\n                    secondary: \"rgba(0, 0, 0, 0.54)\",\n                    disabled: \"rgba(0, 0, 0, 0.38)\",\n                    hint: \"rgba(0, 0, 0, 0.38)\"\n                },\n                explorer: {\n                    filename: \"#474849\",\n                    icon: \"#8f8f8f\",\n                    bgSelected: \"#D5DAF0\",\n                    emptyIcon: \"#e8e8e8\"\n                }\n            }\n        },\n        captcha_IsUseReCaptcha: false,\n        captcha_ReCaptchaKey: \"defaultKey\"\n    },\n    navigator: {\n        path: \"/\",\n        refresh: true\n    }\n};\n\nconst defaultStatus = InitSiteConfig(initState);\n\n// TODO: 将cloureveApp切分成小的reducer\nconst cloudreveApp = (state = defaultStatus, action) => {\n    switch (action.type) {\n        case \"SET_NAVIGATOR\":\n            return doNavigate(action.path, state);\n        case \"TOGGLE_DAYLIGHT_MODE\": {\n            const copy = Object.assign({}, state);\n            if (\n                copy.siteConfig.theme.palette.type === undefined ||\n                copy.siteConfig.theme.palette.type === \"light\"\n            ) {\n                return {\n                    ...state,\n                    siteConfig: {\n                        ...state.siteConfig,\n                        theme: {\n                            ...state.siteConfig.theme,\n                            palette: {\n                                ...state.siteConfig.theme.palette,\n                                type: \"dark\"\n                            }\n                        }\n                    }\n                };\n            }\n            return {\n                ...state,\n                siteConfig: {\n                    ...state.siteConfig,\n                    theme: {\n                        ...state.siteConfig.theme,\n                        palette: {\n                            ...state.siteConfig.theme.palette,\n                            type: \"light\"\n                        }\n                    }\n                }\n            };\n        }\n        case \"APPLY_THEME\":\n            if (state.siteConfig.themes !== null) {\n                const themes = JSON.parse(state.siteConfig.themes);\n                if (themes[action.theme] === undefined) {\n                    return state;\n                }\n                return Object.assign({}, state, {\n                    siteConfig: Object.assign({}, state.siteConfig, {\n                        theme: themes[action.theme]\n                    })\n                });\n            }\n            break;\n        case \"NAVIGATOR_UP\":\n            return doNavigate(action.path, state);\n        case \"SET_SITE_CONFIG\":\n            return Object.assign({}, state, {\n                siteConfig: action.config\n            });\n        case \"REFRESH_FILE_LIST\":\n            return Object.assign({}, state, {\n                navigator: Object.assign({}, state.navigator, {\n                    refresh: !state.navigator.refresh\n                })\n            });\n        case \"SEARCH_MY_FILE\":\n            return Object.assign({}, state, {\n                navigator: Object.assign({}, state.navigator, {\n                    path: \"/搜索结果\",\n                    refresh:\n                        state.explorer.keywords === \"\"\n                            ? state.navigator.refresh\n                            : !state.navigator.refresh\n                })\n            });\n        default:\n            return state;\n    }\n};\n\nexport default (state, action) => {\n    const { viewUpdate: viewUpdateState, explorer: explorerState } =\n        state || {};\n    const appState = cloudreveApp(state, action);\n    const combinedState = combineReducers({ viewUpdate, explorer })(\n        { viewUpdate: viewUpdateState, explorer: explorerState },\n        action\n    );\n    return {\n        ...appState,\n        ...combinedState\n    };\n};\n","import React from \"react\";\nimport { withStyles } from \"@material-ui/core\";\n\nconst styles = {\n    h1: {\n        color: \"#a4a4a4\",\n        margin: \"5px 0px\"\n    },\n    h2: {\n        margin: \"15px 0px\"\n    }\n};\n\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { hasError: false, error: null, errorInfo: null };\n    }\n\n    static getDerivedStateFromError() {\n        // 更新 state 使下一次渲染能够显示降级后的 UI\n        return { hasError: true };\n    }\n\n    componentDidCatch(error, errorInfo) {\n        this.setState({\n            error: error,\n            errorInfo: errorInfo\n        });\n    }\n\n    render() {\n        const { classes } = this.props;\n        if (this.state.hasError) {\n            // 你可以自定义降级后的 UI 并渲染\n            return (\n                <>\n                    <h1 className={classes.h1}>:(</h1>\n                    <h2 className={classes.h2}>\n                        页面渲染出现错误，请尝试刷新此页面。\n                    </h2>\n                    {this.state.error &&\n                        this.state.errorInfo &&\n                        this.state.errorInfo.componentStack && (\n                            <details>\n                                <summary>错误详情</summary>\n                                <pre>\n                                    <code>{this.state.error.toString()}</code>\n                                </pre>\n                                <pre>\n                                    <code>\n                                        {this.state.errorInfo.componentStack}\n                                    </code>\n                                </pre>\n                            </details>\n                        )}\n                </>\n            );\n        }\n\n        return this.props.children;\n    }\n}\n\nexport default withStyles(styles)(ErrorBoundary);\n","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport App from \"./App\";\nimport cloureveApp from \"./reducers\";\nimport { UpdateSiteConfig } from \"./middleware/Init\";\nimport ErrorBoundary from \"./component/Placeholder/ErrorBoundary\";\nconst Admin = React.lazy(() => import(\"./Admin\"));\n\nif (window.location.hash !== \"\") {\n    window.location.href = window.location.hash.split(\"#\")[1];\n}\n\nserviceWorker.register();\n\nlet reduxEnhance = applyMiddleware(thunk);\nif (\n    process.env.NODE_ENV === \"development\" &&\n    window.__REDUX_DEVTOOLS_EXTENSION__\n) {\n    reduxEnhance = compose(reduxEnhance, window.__REDUX_DEVTOOLS_EXTENSION__());\n}\nconst store = createStore(cloureveApp, reduxEnhance);\nUpdateSiteConfig(store);\n\nReactDOM.render(\n    <ErrorBoundary>\n        <Provider store={store}>\n            <Router>\n                <Switch>\n                    <Route path=\"/admin\">\n                        <Suspense fallback={\"Loading...\"}>\n                            <Admin />\n                        </Suspense>\n                    </Route>\n                    <Route exact path=\"\">\n                        <App />\n                    </Route>\n                </Switch>\n            </Router>\n        </Provider>\n    </ErrorBoundary>,\n    document.getElementById(\"root\")\n);\n","import {\n    combineReducers as combine,\n    ReducersMapObject,\n    AnyAction\n} from \"redux\";\nimport invariant from \"invariant\";\n\nexport const combineReducers = (reducers: ReducersMapObject) => {\n    const combinedReducer = combine(reducers);\n    // TODO: define state type\n    return (state: any, action: AnyAction) => {\n        if (\n            action.type &&\n            !action.type.startsWith(\"@@\") &&\n            action.type.split(\"/\").length > 1\n        ) {\n            const namespace = action.type.split(\"/\")[0];\n            const reducer = reducers[namespace];\n            invariant(!!reducer, `reducer ${namespace} doesn't exist`);\n            return reducer && reducer(state, action);\n        }\n        return combinedReducer(state, action);\n    };\n};\n","import { ThunkAction } from \"redux-thunk\";\nimport { AnyAction } from \"redux\";\nexport interface ActionSetSubtitle extends AnyAction {\n    type: \"SET_SUBTITLE\";\n    title: string;\n}\n\nexport const setSubtitle = (title: string): ActionSetSubtitle => {\n    return {\n        type: \"SET_SUBTITLE\",\n        title\n    };\n};\n\nexport const changeSubTitle = (\n    title: string\n): ThunkAction<any, any, any, any> => {\n    return (dispatch, getState) => {\n        const state = getState();\n        document.title =\n            title === null || title === undefined\n                ? state.siteConfig.title\n                : title + \" - \" + state.siteConfig.title;\n        dispatch(setSubtitle(title));\n    };\n};\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport FolderIcon from \"@material-ui/icons/Folder\";\nimport RightIcon from \"@material-ui/icons/KeyboardArrowRight\";\nimport UpIcon from \"@material-ui/icons/ArrowUpward\";\nimport { connect } from \"react-redux\";\nimport classNames from \"classnames\";\nimport { toggleSnackbar } from \"../../actions/index\";\n\nimport {\n    MenuList,\n    MenuItem,\n    IconButton,\n    ListItemIcon,\n    ListItemText,\n    withStyles,\n    ListItemSecondaryAction\n} from \"@material-ui/core\";\nimport API from \"../../middleware/Api\";\n\nconst mapStateToProps = state => {\n    return {\n        keywords: state.explorer.keywords\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        toggleSnackbar: (vertical, horizontal, msg, color) => {\n            dispatch(toggleSnackbar(vertical, horizontal, msg, color));\n        }\n    };\n};\n\nconst styles = theme => ({\n    iconWhite: {\n        color: theme.palette.common.white\n    },\n    selected: {\n        backgroundColor: theme.palette.primary.main + \"!important\",\n        \"& $primary, & $icon\": {\n            color: theme.palette.common.white\n        }\n    },\n    primary: {},\n    icon: {},\n    buttonIcon: {},\n    selector: {\n        minWidth: \"300px\"\n    },\n    container: {\n        maxHeight: \"330px\",\n        overflowY: \" auto\"\n    }\n});\n\nclass PathSelectorCompoment extends Component {\n    state = {\n        presentPath: \"/\",\n        dirList: [],\n        selectedTarget: null\n    };\n\n    componentDidMount = () => {\n        const toBeLoad = this.props.presentPath;\n        this.enterFolder(this.props.keywords === \"\" ? toBeLoad : \"/\");\n    };\n\n    back = () => {\n        const paths = this.state.presentPath.split(\"/\");\n        paths.pop();\n        const toBeLoad = paths.join(\"/\");\n        this.enterFolder(toBeLoad === \"\" ? \"/\" : toBeLoad);\n    };\n\n    enterFolder = toBeLoad => {\n        API.get(\n            (this.props.api ? this.props.api : \"/directory\") +\n                encodeURIComponent(toBeLoad)\n        )\n            .then(response => {\n                const dirList = response.data.objects.filter(x => {\n                    return (\n                        x.type === \"dir\" &&\n                        this.props.selected.findIndex(value => {\n                            return (\n                                value.name === x.name && value.path === x.path\n                            );\n                        }) === -1\n                    );\n                });\n                if (toBeLoad === \"/\") {\n                    dirList.unshift({ name: \"/\", path: \"\" });\n                }\n                this.setState({\n                    presentPath: toBeLoad,\n                    dirList: dirList,\n                    selectedTarget: null\n                });\n            })\n            .catch(error => {\n                this.props.toggleSnackbar(\n                    \"top\",\n                    \"right\",\n                    error.message,\n                    \"warning\"\n                );\n            });\n    };\n\n    handleSelect = index => {\n        this.setState({ selectedTarget: index });\n        this.props.onSelect(this.state.dirList[index]);\n    };\n\n    render() {\n        const { classes } = this.props;\n\n        return (\n            <div className={classes.container}>\n                <MenuList className={classes.selector}>\n                    {this.state.presentPath !== \"/\" && (\n                        <MenuItem onClick={this.back}>\n                            <ListItemIcon>\n                                <UpIcon />\n                            </ListItemIcon>\n                            <ListItemText primary=\"返回上一层\" />\n                        </MenuItem>\n                    )}\n                    {this.state.dirList.map((value, index) => (\n                        <MenuItem\n                            classes={{\n                                selected: classes.selected\n                            }}\n                            key={index}\n                            selected={this.state.selectedTarget === index}\n                            onClick={() => this.handleSelect(index)}\n                        >\n                            <ListItemIcon className={classes.icon}>\n                                <FolderIcon />\n                            </ListItemIcon>\n                            <ListItemText\n                                classes={{ primary: classes.primary }}\n                                primary={value.name}\n                            />\n                            {value.name !== \"/\" && (\n                                <ListItemSecondaryAction\n                                    className={classes.buttonIcon}\n                                >\n                                    <IconButton\n                                        className={classNames({\n                                            [classes.iconWhite]:\n                                                this.state.selectedTarget ===\n                                                index\n                                        })}\n                                        onClick={() =>\n                                            this.enterFolder(\n                                                value.path === \"/\"\n                                                    ? value.path + value.name\n                                                    : value.path +\n                                                          \"/\" +\n                                                          value.name\n                                            )\n                                        }\n                                    >\n                                        <RightIcon />\n                                    </IconButton>\n                                </ListItemSecondaryAction>\n                            )}\n                        </MenuItem>\n                    ))}\n                </MenuList>\n            </div>\n        );\n    }\n}\n\nPathSelectorCompoment.propTypes = {\n    classes: PropTypes.object.isRequired,\n    presentPath: PropTypes.string.isRequired,\n    selected: PropTypes.array.isRequired\n};\n\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withStyles(styles)(PathSelectorCompoment));\n","import axios from \"axios\";\nimport Auth from \"./Auth\";\n\nexport const baseURL = \"/api/v3\";\n\nexport const getBaseURL = () => {\n    return baseURL;\n};\n\nconst instance = axios.create({\n    baseURL: getBaseURL(),\n    withCredentials: true,\n    crossDomain: true\n});\n\nfunction AppError(message, code, error) {\n    this.code = code;\n    this.message = message || \"未知错误\";\n    this.message += error ? \" \" + error : \"\";\n    this.stack = new Error().stack;\n}\nAppError.prototype = Object.create(Error.prototype);\nAppError.prototype.constructor = AppError;\n\ninstance.interceptors.response.use(\n    function(response) {\n        response.rawData = response.data;\n        response.data = response.data.data;\n        if (\n            response.rawData.code !== undefined &&\n            response.rawData.code !== 0 &&\n            response.rawData.code !== 203\n        ) {\n            // 登录过期\n            if (response.rawData.code === 401) {\n                Auth.signout();\n                window.location.href = \"/login\";\n            }\n\n            // 非管理员\n            if (response.rawData.code === 40008) {\n                window.location.href = \"/home\";\n            }\n            throw new AppError(\n                response.rawData.msg,\n                response.rawData.code,\n                response.rawData.error\n            );\n        }\n        return response;\n    },\n    function(error) {\n        return Promise.reject(error);\n    }\n);\n\nexport default instance;\n"],"sourceRoot":""}